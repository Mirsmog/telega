
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model Region
 * 
 */
export type Region = $Result.DefaultSelection<Prisma.$RegionPayload>
/**
 * Model UserRegion
 * 
 */
export type UserRegion = $Result.DefaultSelection<Prisma.$UserRegionPayload>
/**
 * Model VehicleCategory
 * 
 */
export type VehicleCategory = $Result.DefaultSelection<Prisma.$VehicleCategoryPayload>
/**
 * Model VehicleType
 * 
 */
export type VehicleType = $Result.DefaultSelection<Prisma.$VehicleTypePayload>
/**
 * Model VehicleSubtype
 * 
 */
export type VehicleSubtype = $Result.DefaultSelection<Prisma.$VehicleSubtypePayload>
/**
 * Model UserVehicle
 * 
 */
export type UserVehicle = $Result.DefaultSelection<Prisma.$UserVehiclePayload>
/**
 * Model Order
 * 
 */
export type Order = $Result.DefaultSelection<Prisma.$OrderPayload>
/**
 * Model OrderResponse
 * 
 */
export type OrderResponse = $Result.DefaultSelection<Prisma.$OrderResponsePayload>
/**
 * Model Payment
 * 
 */
export type Payment = $Result.DefaultSelection<Prisma.$PaymentPayload>
/**
 * Model PaymentTransaction
 * 
 */
export type PaymentTransaction = $Result.DefaultSelection<Prisma.$PaymentTransactionPayload>
/**
 * Model Session
 * 
 */
export type Session = $Result.DefaultSelection<Prisma.$SessionPayload>
/**
 * Model Notification
 * 
 */
export type Notification = $Result.DefaultSelection<Prisma.$NotificationPayload>
/**
 * Model AdminAction
 * 
 */
export type AdminAction = $Result.DefaultSelection<Prisma.$AdminActionPayload>
/**
 * Model Broadcast
 * 
 */
export type Broadcast = $Result.DefaultSelection<Prisma.$BroadcastPayload>
/**
 * Model Config
 * 
 */
export type Config = $Result.DefaultSelection<Prisma.$ConfigPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const RoleType: {
  CUSTOMER: 'CUSTOMER',
  EXECUTOR: 'EXECUTOR',
  ADMIN: 'ADMIN'
};

export type RoleType = (typeof RoleType)[keyof typeof RoleType]


export const TariffType: {
  ONE_TIME: 'ONE_TIME',
  OPTIMAL: 'OPTIMAL'
};

export type TariffType = (typeof TariffType)[keyof typeof TariffType]


export const OrderType: {
  A_TO_B: 'A_TO_B',
  PLACE: 'PLACE',
  PEOPLE: 'PEOPLE'
};

export type OrderType = (typeof OrderType)[keyof typeof OrderType]


export const OrderStatus: {
  DRAFT: 'DRAFT',
  PENDING: 'PENDING',
  ACTIVE: 'ACTIVE',
  IN_PROGRESS: 'IN_PROGRESS',
  COMPLETED: 'COMPLETED',
  CANCELLED: 'CANCELLED',
  REJECTED: 'REJECTED'
};

export type OrderStatus = (typeof OrderStatus)[keyof typeof OrderStatus]


export const PaymentStatus: {
  PENDING: 'PENDING',
  PROCESSING: 'PROCESSING',
  PAID: 'PAID',
  FAILED: 'FAILED',
  REFUNDED: 'REFUNDED'
};

export type PaymentStatus = (typeof PaymentStatus)[keyof typeof PaymentStatus]


export const ClientType: {
  TELEGRAM_BOT: 'TELEGRAM_BOT',
  TELEGRAM_WEB_APP: 'TELEGRAM_WEB_APP',
  WEB_BROWSER: 'WEB_BROWSER',
  MOBILE_APP: 'MOBILE_APP'
};

export type ClientType = (typeof ClientType)[keyof typeof ClientType]


export const SessionStatus: {
  ACTIVE: 'ACTIVE',
  EXPIRED: 'EXPIRED',
  TERMINATED: 'TERMINATED'
};

export type SessionStatus = (typeof SessionStatus)[keyof typeof SessionStatus]


export const AdminActionType: {
  USER_BAN: 'USER_BAN',
  USER_UNBAN: 'USER_UNBAN',
  ORDER_APPROVE: 'ORDER_APPROVE',
  ORDER_REJECT: 'ORDER_REJECT',
  PAYMENT_REFUND: 'PAYMENT_REFUND',
  BROADCAST_SEND: 'BROADCAST_SEND',
  CONFIG_UPDATE: 'CONFIG_UPDATE'
};

export type AdminActionType = (typeof AdminActionType)[keyof typeof AdminActionType]


export const BroadcastTarget: {
  ALL_USERS: 'ALL_USERS',
  CUSTOMERS: 'CUSTOMERS',
  EXECUTORS: 'EXECUTORS',
  BY_REGION: 'BY_REGION'
};

export type BroadcastTarget = (typeof BroadcastTarget)[keyof typeof BroadcastTarget]


export const BroadcastStatus: {
  DRAFT: 'DRAFT',
  SCHEDULED: 'SCHEDULED',
  SENDING: 'SENDING',
  SENT: 'SENT',
  FAILED: 'FAILED'
};

export type BroadcastStatus = (typeof BroadcastStatus)[keyof typeof BroadcastStatus]

}

export type RoleType = $Enums.RoleType

export const RoleType: typeof $Enums.RoleType

export type TariffType = $Enums.TariffType

export const TariffType: typeof $Enums.TariffType

export type OrderType = $Enums.OrderType

export const OrderType: typeof $Enums.OrderType

export type OrderStatus = $Enums.OrderStatus

export const OrderStatus: typeof $Enums.OrderStatus

export type PaymentStatus = $Enums.PaymentStatus

export const PaymentStatus: typeof $Enums.PaymentStatus

export type ClientType = $Enums.ClientType

export const ClientType: typeof $Enums.ClientType

export type SessionStatus = $Enums.SessionStatus

export const SessionStatus: typeof $Enums.SessionStatus

export type AdminActionType = $Enums.AdminActionType

export const AdminActionType: typeof $Enums.AdminActionType

export type BroadcastTarget = $Enums.BroadcastTarget

export const BroadcastTarget: typeof $Enums.BroadcastTarget

export type BroadcastStatus = $Enums.BroadcastStatus

export const BroadcastStatus: typeof $Enums.BroadcastStatus

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Users
 * const users = await prisma.user.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Users
   * const users = await prisma.user.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs>;

  /**
   * `prisma.region`: Exposes CRUD operations for the **Region** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Regions
    * const regions = await prisma.region.findMany()
    * ```
    */
  get region(): Prisma.RegionDelegate<ExtArgs>;

  /**
   * `prisma.userRegion`: Exposes CRUD operations for the **UserRegion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UserRegions
    * const userRegions = await prisma.userRegion.findMany()
    * ```
    */
  get userRegion(): Prisma.UserRegionDelegate<ExtArgs>;

  /**
   * `prisma.vehicleCategory`: Exposes CRUD operations for the **VehicleCategory** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more VehicleCategories
    * const vehicleCategories = await prisma.vehicleCategory.findMany()
    * ```
    */
  get vehicleCategory(): Prisma.VehicleCategoryDelegate<ExtArgs>;

  /**
   * `prisma.vehicleType`: Exposes CRUD operations for the **VehicleType** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more VehicleTypes
    * const vehicleTypes = await prisma.vehicleType.findMany()
    * ```
    */
  get vehicleType(): Prisma.VehicleTypeDelegate<ExtArgs>;

  /**
   * `prisma.vehicleSubtype`: Exposes CRUD operations for the **VehicleSubtype** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more VehicleSubtypes
    * const vehicleSubtypes = await prisma.vehicleSubtype.findMany()
    * ```
    */
  get vehicleSubtype(): Prisma.VehicleSubtypeDelegate<ExtArgs>;

  /**
   * `prisma.userVehicle`: Exposes CRUD operations for the **UserVehicle** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UserVehicles
    * const userVehicles = await prisma.userVehicle.findMany()
    * ```
    */
  get userVehicle(): Prisma.UserVehicleDelegate<ExtArgs>;

  /**
   * `prisma.order`: Exposes CRUD operations for the **Order** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Orders
    * const orders = await prisma.order.findMany()
    * ```
    */
  get order(): Prisma.OrderDelegate<ExtArgs>;

  /**
   * `prisma.orderResponse`: Exposes CRUD operations for the **OrderResponse** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more OrderResponses
    * const orderResponses = await prisma.orderResponse.findMany()
    * ```
    */
  get orderResponse(): Prisma.OrderResponseDelegate<ExtArgs>;

  /**
   * `prisma.payment`: Exposes CRUD operations for the **Payment** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Payments
    * const payments = await prisma.payment.findMany()
    * ```
    */
  get payment(): Prisma.PaymentDelegate<ExtArgs>;

  /**
   * `prisma.paymentTransaction`: Exposes CRUD operations for the **PaymentTransaction** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PaymentTransactions
    * const paymentTransactions = await prisma.paymentTransaction.findMany()
    * ```
    */
  get paymentTransaction(): Prisma.PaymentTransactionDelegate<ExtArgs>;

  /**
   * `prisma.session`: Exposes CRUD operations for the **Session** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sessions
    * const sessions = await prisma.session.findMany()
    * ```
    */
  get session(): Prisma.SessionDelegate<ExtArgs>;

  /**
   * `prisma.notification`: Exposes CRUD operations for the **Notification** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Notifications
    * const notifications = await prisma.notification.findMany()
    * ```
    */
  get notification(): Prisma.NotificationDelegate<ExtArgs>;

  /**
   * `prisma.adminAction`: Exposes CRUD operations for the **AdminAction** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AdminActions
    * const adminActions = await prisma.adminAction.findMany()
    * ```
    */
  get adminAction(): Prisma.AdminActionDelegate<ExtArgs>;

  /**
   * `prisma.broadcast`: Exposes CRUD operations for the **Broadcast** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Broadcasts
    * const broadcasts = await prisma.broadcast.findMany()
    * ```
    */
  get broadcast(): Prisma.BroadcastDelegate<ExtArgs>;

  /**
   * `prisma.config`: Exposes CRUD operations for the **Config** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Configs
    * const configs = await prisma.config.findMany()
    * ```
    */
  get config(): Prisma.ConfigDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.22.0
   * Query Engine version: 605197351a3c8bdd595af2d2a9bc3025bca48ea2
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    User: 'User',
    Region: 'Region',
    UserRegion: 'UserRegion',
    VehicleCategory: 'VehicleCategory',
    VehicleType: 'VehicleType',
    VehicleSubtype: 'VehicleSubtype',
    UserVehicle: 'UserVehicle',
    Order: 'Order',
    OrderResponse: 'OrderResponse',
    Payment: 'Payment',
    PaymentTransaction: 'PaymentTransaction',
    Session: 'Session',
    Notification: 'Notification',
    AdminAction: 'AdminAction',
    Broadcast: 'Broadcast',
    Config: 'Config'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "user" | "region" | "userRegion" | "vehicleCategory" | "vehicleType" | "vehicleSubtype" | "userVehicle" | "order" | "orderResponse" | "payment" | "paymentTransaction" | "session" | "notification" | "adminAction" | "broadcast" | "config"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      Region: {
        payload: Prisma.$RegionPayload<ExtArgs>
        fields: Prisma.RegionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RegionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RegionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegionPayload>
          }
          findFirst: {
            args: Prisma.RegionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RegionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegionPayload>
          }
          findMany: {
            args: Prisma.RegionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegionPayload>[]
          }
          create: {
            args: Prisma.RegionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegionPayload>
          }
          createMany: {
            args: Prisma.RegionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RegionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegionPayload>[]
          }
          delete: {
            args: Prisma.RegionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegionPayload>
          }
          update: {
            args: Prisma.RegionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegionPayload>
          }
          deleteMany: {
            args: Prisma.RegionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RegionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.RegionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegionPayload>
          }
          aggregate: {
            args: Prisma.RegionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRegion>
          }
          groupBy: {
            args: Prisma.RegionGroupByArgs<ExtArgs>
            result: $Utils.Optional<RegionGroupByOutputType>[]
          }
          count: {
            args: Prisma.RegionCountArgs<ExtArgs>
            result: $Utils.Optional<RegionCountAggregateOutputType> | number
          }
        }
      }
      UserRegion: {
        payload: Prisma.$UserRegionPayload<ExtArgs>
        fields: Prisma.UserRegionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserRegionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserRegionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserRegionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserRegionPayload>
          }
          findFirst: {
            args: Prisma.UserRegionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserRegionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserRegionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserRegionPayload>
          }
          findMany: {
            args: Prisma.UserRegionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserRegionPayload>[]
          }
          create: {
            args: Prisma.UserRegionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserRegionPayload>
          }
          createMany: {
            args: Prisma.UserRegionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserRegionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserRegionPayload>[]
          }
          delete: {
            args: Prisma.UserRegionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserRegionPayload>
          }
          update: {
            args: Prisma.UserRegionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserRegionPayload>
          }
          deleteMany: {
            args: Prisma.UserRegionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserRegionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UserRegionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserRegionPayload>
          }
          aggregate: {
            args: Prisma.UserRegionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUserRegion>
          }
          groupBy: {
            args: Prisma.UserRegionGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserRegionGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserRegionCountArgs<ExtArgs>
            result: $Utils.Optional<UserRegionCountAggregateOutputType> | number
          }
        }
      }
      VehicleCategory: {
        payload: Prisma.$VehicleCategoryPayload<ExtArgs>
        fields: Prisma.VehicleCategoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.VehicleCategoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VehicleCategoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.VehicleCategoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VehicleCategoryPayload>
          }
          findFirst: {
            args: Prisma.VehicleCategoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VehicleCategoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.VehicleCategoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VehicleCategoryPayload>
          }
          findMany: {
            args: Prisma.VehicleCategoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VehicleCategoryPayload>[]
          }
          create: {
            args: Prisma.VehicleCategoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VehicleCategoryPayload>
          }
          createMany: {
            args: Prisma.VehicleCategoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.VehicleCategoryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VehicleCategoryPayload>[]
          }
          delete: {
            args: Prisma.VehicleCategoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VehicleCategoryPayload>
          }
          update: {
            args: Prisma.VehicleCategoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VehicleCategoryPayload>
          }
          deleteMany: {
            args: Prisma.VehicleCategoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.VehicleCategoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.VehicleCategoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VehicleCategoryPayload>
          }
          aggregate: {
            args: Prisma.VehicleCategoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateVehicleCategory>
          }
          groupBy: {
            args: Prisma.VehicleCategoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<VehicleCategoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.VehicleCategoryCountArgs<ExtArgs>
            result: $Utils.Optional<VehicleCategoryCountAggregateOutputType> | number
          }
        }
      }
      VehicleType: {
        payload: Prisma.$VehicleTypePayload<ExtArgs>
        fields: Prisma.VehicleTypeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.VehicleTypeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VehicleTypePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.VehicleTypeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VehicleTypePayload>
          }
          findFirst: {
            args: Prisma.VehicleTypeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VehicleTypePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.VehicleTypeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VehicleTypePayload>
          }
          findMany: {
            args: Prisma.VehicleTypeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VehicleTypePayload>[]
          }
          create: {
            args: Prisma.VehicleTypeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VehicleTypePayload>
          }
          createMany: {
            args: Prisma.VehicleTypeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.VehicleTypeCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VehicleTypePayload>[]
          }
          delete: {
            args: Prisma.VehicleTypeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VehicleTypePayload>
          }
          update: {
            args: Prisma.VehicleTypeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VehicleTypePayload>
          }
          deleteMany: {
            args: Prisma.VehicleTypeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.VehicleTypeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.VehicleTypeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VehicleTypePayload>
          }
          aggregate: {
            args: Prisma.VehicleTypeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateVehicleType>
          }
          groupBy: {
            args: Prisma.VehicleTypeGroupByArgs<ExtArgs>
            result: $Utils.Optional<VehicleTypeGroupByOutputType>[]
          }
          count: {
            args: Prisma.VehicleTypeCountArgs<ExtArgs>
            result: $Utils.Optional<VehicleTypeCountAggregateOutputType> | number
          }
        }
      }
      VehicleSubtype: {
        payload: Prisma.$VehicleSubtypePayload<ExtArgs>
        fields: Prisma.VehicleSubtypeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.VehicleSubtypeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VehicleSubtypePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.VehicleSubtypeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VehicleSubtypePayload>
          }
          findFirst: {
            args: Prisma.VehicleSubtypeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VehicleSubtypePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.VehicleSubtypeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VehicleSubtypePayload>
          }
          findMany: {
            args: Prisma.VehicleSubtypeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VehicleSubtypePayload>[]
          }
          create: {
            args: Prisma.VehicleSubtypeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VehicleSubtypePayload>
          }
          createMany: {
            args: Prisma.VehicleSubtypeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.VehicleSubtypeCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VehicleSubtypePayload>[]
          }
          delete: {
            args: Prisma.VehicleSubtypeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VehicleSubtypePayload>
          }
          update: {
            args: Prisma.VehicleSubtypeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VehicleSubtypePayload>
          }
          deleteMany: {
            args: Prisma.VehicleSubtypeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.VehicleSubtypeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.VehicleSubtypeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VehicleSubtypePayload>
          }
          aggregate: {
            args: Prisma.VehicleSubtypeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateVehicleSubtype>
          }
          groupBy: {
            args: Prisma.VehicleSubtypeGroupByArgs<ExtArgs>
            result: $Utils.Optional<VehicleSubtypeGroupByOutputType>[]
          }
          count: {
            args: Prisma.VehicleSubtypeCountArgs<ExtArgs>
            result: $Utils.Optional<VehicleSubtypeCountAggregateOutputType> | number
          }
        }
      }
      UserVehicle: {
        payload: Prisma.$UserVehiclePayload<ExtArgs>
        fields: Prisma.UserVehicleFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserVehicleFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserVehiclePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserVehicleFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserVehiclePayload>
          }
          findFirst: {
            args: Prisma.UserVehicleFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserVehiclePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserVehicleFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserVehiclePayload>
          }
          findMany: {
            args: Prisma.UserVehicleFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserVehiclePayload>[]
          }
          create: {
            args: Prisma.UserVehicleCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserVehiclePayload>
          }
          createMany: {
            args: Prisma.UserVehicleCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserVehicleCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserVehiclePayload>[]
          }
          delete: {
            args: Prisma.UserVehicleDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserVehiclePayload>
          }
          update: {
            args: Prisma.UserVehicleUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserVehiclePayload>
          }
          deleteMany: {
            args: Prisma.UserVehicleDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserVehicleUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UserVehicleUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserVehiclePayload>
          }
          aggregate: {
            args: Prisma.UserVehicleAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUserVehicle>
          }
          groupBy: {
            args: Prisma.UserVehicleGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserVehicleGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserVehicleCountArgs<ExtArgs>
            result: $Utils.Optional<UserVehicleCountAggregateOutputType> | number
          }
        }
      }
      Order: {
        payload: Prisma.$OrderPayload<ExtArgs>
        fields: Prisma.OrderFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OrderFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OrderFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          findFirst: {
            args: Prisma.OrderFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OrderFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          findMany: {
            args: Prisma.OrderFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>[]
          }
          create: {
            args: Prisma.OrderCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          createMany: {
            args: Prisma.OrderCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.OrderCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>[]
          }
          delete: {
            args: Prisma.OrderDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          update: {
            args: Prisma.OrderUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          deleteMany: {
            args: Prisma.OrderDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OrderUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.OrderUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          aggregate: {
            args: Prisma.OrderAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrder>
          }
          groupBy: {
            args: Prisma.OrderGroupByArgs<ExtArgs>
            result: $Utils.Optional<OrderGroupByOutputType>[]
          }
          count: {
            args: Prisma.OrderCountArgs<ExtArgs>
            result: $Utils.Optional<OrderCountAggregateOutputType> | number
          }
        }
      }
      OrderResponse: {
        payload: Prisma.$OrderResponsePayload<ExtArgs>
        fields: Prisma.OrderResponseFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OrderResponseFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderResponsePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OrderResponseFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderResponsePayload>
          }
          findFirst: {
            args: Prisma.OrderResponseFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderResponsePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OrderResponseFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderResponsePayload>
          }
          findMany: {
            args: Prisma.OrderResponseFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderResponsePayload>[]
          }
          create: {
            args: Prisma.OrderResponseCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderResponsePayload>
          }
          createMany: {
            args: Prisma.OrderResponseCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.OrderResponseCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderResponsePayload>[]
          }
          delete: {
            args: Prisma.OrderResponseDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderResponsePayload>
          }
          update: {
            args: Prisma.OrderResponseUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderResponsePayload>
          }
          deleteMany: {
            args: Prisma.OrderResponseDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OrderResponseUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.OrderResponseUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderResponsePayload>
          }
          aggregate: {
            args: Prisma.OrderResponseAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrderResponse>
          }
          groupBy: {
            args: Prisma.OrderResponseGroupByArgs<ExtArgs>
            result: $Utils.Optional<OrderResponseGroupByOutputType>[]
          }
          count: {
            args: Prisma.OrderResponseCountArgs<ExtArgs>
            result: $Utils.Optional<OrderResponseCountAggregateOutputType> | number
          }
        }
      }
      Payment: {
        payload: Prisma.$PaymentPayload<ExtArgs>
        fields: Prisma.PaymentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PaymentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PaymentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          findFirst: {
            args: Prisma.PaymentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PaymentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          findMany: {
            args: Prisma.PaymentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>[]
          }
          create: {
            args: Prisma.PaymentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          createMany: {
            args: Prisma.PaymentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PaymentCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>[]
          }
          delete: {
            args: Prisma.PaymentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          update: {
            args: Prisma.PaymentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          deleteMany: {
            args: Prisma.PaymentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PaymentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PaymentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          aggregate: {
            args: Prisma.PaymentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePayment>
          }
          groupBy: {
            args: Prisma.PaymentGroupByArgs<ExtArgs>
            result: $Utils.Optional<PaymentGroupByOutputType>[]
          }
          count: {
            args: Prisma.PaymentCountArgs<ExtArgs>
            result: $Utils.Optional<PaymentCountAggregateOutputType> | number
          }
        }
      }
      PaymentTransaction: {
        payload: Prisma.$PaymentTransactionPayload<ExtArgs>
        fields: Prisma.PaymentTransactionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PaymentTransactionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentTransactionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PaymentTransactionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentTransactionPayload>
          }
          findFirst: {
            args: Prisma.PaymentTransactionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentTransactionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PaymentTransactionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentTransactionPayload>
          }
          findMany: {
            args: Prisma.PaymentTransactionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentTransactionPayload>[]
          }
          create: {
            args: Prisma.PaymentTransactionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentTransactionPayload>
          }
          createMany: {
            args: Prisma.PaymentTransactionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PaymentTransactionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentTransactionPayload>[]
          }
          delete: {
            args: Prisma.PaymentTransactionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentTransactionPayload>
          }
          update: {
            args: Prisma.PaymentTransactionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentTransactionPayload>
          }
          deleteMany: {
            args: Prisma.PaymentTransactionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PaymentTransactionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PaymentTransactionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentTransactionPayload>
          }
          aggregate: {
            args: Prisma.PaymentTransactionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePaymentTransaction>
          }
          groupBy: {
            args: Prisma.PaymentTransactionGroupByArgs<ExtArgs>
            result: $Utils.Optional<PaymentTransactionGroupByOutputType>[]
          }
          count: {
            args: Prisma.PaymentTransactionCountArgs<ExtArgs>
            result: $Utils.Optional<PaymentTransactionCountAggregateOutputType> | number
          }
        }
      }
      Session: {
        payload: Prisma.$SessionPayload<ExtArgs>
        fields: Prisma.SessionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SessionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SessionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          findFirst: {
            args: Prisma.SessionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SessionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          findMany: {
            args: Prisma.SessionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>[]
          }
          create: {
            args: Prisma.SessionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          createMany: {
            args: Prisma.SessionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SessionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>[]
          }
          delete: {
            args: Prisma.SessionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          update: {
            args: Prisma.SessionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          deleteMany: {
            args: Prisma.SessionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SessionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SessionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          aggregate: {
            args: Prisma.SessionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSession>
          }
          groupBy: {
            args: Prisma.SessionGroupByArgs<ExtArgs>
            result: $Utils.Optional<SessionGroupByOutputType>[]
          }
          count: {
            args: Prisma.SessionCountArgs<ExtArgs>
            result: $Utils.Optional<SessionCountAggregateOutputType> | number
          }
        }
      }
      Notification: {
        payload: Prisma.$NotificationPayload<ExtArgs>
        fields: Prisma.NotificationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.NotificationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.NotificationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          findFirst: {
            args: Prisma.NotificationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.NotificationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          findMany: {
            args: Prisma.NotificationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>[]
          }
          create: {
            args: Prisma.NotificationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          createMany: {
            args: Prisma.NotificationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.NotificationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>[]
          }
          delete: {
            args: Prisma.NotificationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          update: {
            args: Prisma.NotificationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          deleteMany: {
            args: Prisma.NotificationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.NotificationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.NotificationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          aggregate: {
            args: Prisma.NotificationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNotification>
          }
          groupBy: {
            args: Prisma.NotificationGroupByArgs<ExtArgs>
            result: $Utils.Optional<NotificationGroupByOutputType>[]
          }
          count: {
            args: Prisma.NotificationCountArgs<ExtArgs>
            result: $Utils.Optional<NotificationCountAggregateOutputType> | number
          }
        }
      }
      AdminAction: {
        payload: Prisma.$AdminActionPayload<ExtArgs>
        fields: Prisma.AdminActionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AdminActionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminActionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AdminActionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminActionPayload>
          }
          findFirst: {
            args: Prisma.AdminActionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminActionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AdminActionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminActionPayload>
          }
          findMany: {
            args: Prisma.AdminActionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminActionPayload>[]
          }
          create: {
            args: Prisma.AdminActionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminActionPayload>
          }
          createMany: {
            args: Prisma.AdminActionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AdminActionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminActionPayload>[]
          }
          delete: {
            args: Prisma.AdminActionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminActionPayload>
          }
          update: {
            args: Prisma.AdminActionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminActionPayload>
          }
          deleteMany: {
            args: Prisma.AdminActionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AdminActionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.AdminActionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminActionPayload>
          }
          aggregate: {
            args: Prisma.AdminActionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAdminAction>
          }
          groupBy: {
            args: Prisma.AdminActionGroupByArgs<ExtArgs>
            result: $Utils.Optional<AdminActionGroupByOutputType>[]
          }
          count: {
            args: Prisma.AdminActionCountArgs<ExtArgs>
            result: $Utils.Optional<AdminActionCountAggregateOutputType> | number
          }
        }
      }
      Broadcast: {
        payload: Prisma.$BroadcastPayload<ExtArgs>
        fields: Prisma.BroadcastFieldRefs
        operations: {
          findUnique: {
            args: Prisma.BroadcastFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BroadcastPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.BroadcastFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BroadcastPayload>
          }
          findFirst: {
            args: Prisma.BroadcastFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BroadcastPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.BroadcastFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BroadcastPayload>
          }
          findMany: {
            args: Prisma.BroadcastFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BroadcastPayload>[]
          }
          create: {
            args: Prisma.BroadcastCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BroadcastPayload>
          }
          createMany: {
            args: Prisma.BroadcastCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.BroadcastCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BroadcastPayload>[]
          }
          delete: {
            args: Prisma.BroadcastDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BroadcastPayload>
          }
          update: {
            args: Prisma.BroadcastUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BroadcastPayload>
          }
          deleteMany: {
            args: Prisma.BroadcastDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.BroadcastUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.BroadcastUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BroadcastPayload>
          }
          aggregate: {
            args: Prisma.BroadcastAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBroadcast>
          }
          groupBy: {
            args: Prisma.BroadcastGroupByArgs<ExtArgs>
            result: $Utils.Optional<BroadcastGroupByOutputType>[]
          }
          count: {
            args: Prisma.BroadcastCountArgs<ExtArgs>
            result: $Utils.Optional<BroadcastCountAggregateOutputType> | number
          }
        }
      }
      Config: {
        payload: Prisma.$ConfigPayload<ExtArgs>
        fields: Prisma.ConfigFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ConfigFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfigPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ConfigFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfigPayload>
          }
          findFirst: {
            args: Prisma.ConfigFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfigPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ConfigFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfigPayload>
          }
          findMany: {
            args: Prisma.ConfigFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfigPayload>[]
          }
          create: {
            args: Prisma.ConfigCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfigPayload>
          }
          createMany: {
            args: Prisma.ConfigCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ConfigCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfigPayload>[]
          }
          delete: {
            args: Prisma.ConfigDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfigPayload>
          }
          update: {
            args: Prisma.ConfigUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfigPayload>
          }
          deleteMany: {
            args: Prisma.ConfigDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ConfigUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ConfigUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfigPayload>
          }
          aggregate: {
            args: Prisma.ConfigAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateConfig>
          }
          groupBy: {
            args: Prisma.ConfigGroupByArgs<ExtArgs>
            result: $Utils.Optional<ConfigGroupByOutputType>[]
          }
          count: {
            args: Prisma.ConfigCountArgs<ExtArgs>
            result: $Utils.Optional<ConfigCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }


  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    referredUsers: number
    vehicles: number
    ordersAsCustomer: number
    ordersAsExecutor: number
    orderResponses: number
    payments: number
    sessions: number
    notifications: number
    userRegions: number
    adminActions: number
    broadcasts: number
    paymentTransactions: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    referredUsers?: boolean | UserCountOutputTypeCountReferredUsersArgs
    vehicles?: boolean | UserCountOutputTypeCountVehiclesArgs
    ordersAsCustomer?: boolean | UserCountOutputTypeCountOrdersAsCustomerArgs
    ordersAsExecutor?: boolean | UserCountOutputTypeCountOrdersAsExecutorArgs
    orderResponses?: boolean | UserCountOutputTypeCountOrderResponsesArgs
    payments?: boolean | UserCountOutputTypeCountPaymentsArgs
    sessions?: boolean | UserCountOutputTypeCountSessionsArgs
    notifications?: boolean | UserCountOutputTypeCountNotificationsArgs
    userRegions?: boolean | UserCountOutputTypeCountUserRegionsArgs
    adminActions?: boolean | UserCountOutputTypeCountAdminActionsArgs
    broadcasts?: boolean | UserCountOutputTypeCountBroadcastsArgs
    paymentTransactions?: boolean | UserCountOutputTypeCountPaymentTransactionsArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountReferredUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountVehiclesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserVehicleWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountOrdersAsCustomerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountOrdersAsExecutorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountOrderResponsesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderResponseWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountPaymentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaymentWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSessionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SessionWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountNotificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotificationWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUserRegionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserRegionWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountAdminActionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AdminActionWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountBroadcastsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BroadcastWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountPaymentTransactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaymentTransactionWhereInput
  }


  /**
   * Count Type RegionCountOutputType
   */

  export type RegionCountOutputType = {
    orders: number
    userRegions: number
    broadcasts: number
  }

  export type RegionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    orders?: boolean | RegionCountOutputTypeCountOrdersArgs
    userRegions?: boolean | RegionCountOutputTypeCountUserRegionsArgs
    broadcasts?: boolean | RegionCountOutputTypeCountBroadcastsArgs
  }

  // Custom InputTypes
  /**
   * RegionCountOutputType without action
   */
  export type RegionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegionCountOutputType
     */
    select?: RegionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * RegionCountOutputType without action
   */
  export type RegionCountOutputTypeCountOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderWhereInput
  }

  /**
   * RegionCountOutputType without action
   */
  export type RegionCountOutputTypeCountUserRegionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserRegionWhereInput
  }

  /**
   * RegionCountOutputType without action
   */
  export type RegionCountOutputTypeCountBroadcastsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BroadcastWhereInput
  }


  /**
   * Count Type VehicleCategoryCountOutputType
   */

  export type VehicleCategoryCountOutputType = {
    vehicleTypes: number
  }

  export type VehicleCategoryCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    vehicleTypes?: boolean | VehicleCategoryCountOutputTypeCountVehicleTypesArgs
  }

  // Custom InputTypes
  /**
   * VehicleCategoryCountOutputType without action
   */
  export type VehicleCategoryCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VehicleCategoryCountOutputType
     */
    select?: VehicleCategoryCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * VehicleCategoryCountOutputType without action
   */
  export type VehicleCategoryCountOutputTypeCountVehicleTypesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VehicleTypeWhereInput
  }


  /**
   * Count Type VehicleTypeCountOutputType
   */

  export type VehicleTypeCountOutputType = {
    vehicleSubtypes: number
  }

  export type VehicleTypeCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    vehicleSubtypes?: boolean | VehicleTypeCountOutputTypeCountVehicleSubtypesArgs
  }

  // Custom InputTypes
  /**
   * VehicleTypeCountOutputType without action
   */
  export type VehicleTypeCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VehicleTypeCountOutputType
     */
    select?: VehicleTypeCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * VehicleTypeCountOutputType without action
   */
  export type VehicleTypeCountOutputTypeCountVehicleSubtypesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VehicleSubtypeWhereInput
  }


  /**
   * Count Type VehicleSubtypeCountOutputType
   */

  export type VehicleSubtypeCountOutputType = {
    userVehicles: number
    orders: number
  }

  export type VehicleSubtypeCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    userVehicles?: boolean | VehicleSubtypeCountOutputTypeCountUserVehiclesArgs
    orders?: boolean | VehicleSubtypeCountOutputTypeCountOrdersArgs
  }

  // Custom InputTypes
  /**
   * VehicleSubtypeCountOutputType without action
   */
  export type VehicleSubtypeCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VehicleSubtypeCountOutputType
     */
    select?: VehicleSubtypeCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * VehicleSubtypeCountOutputType without action
   */
  export type VehicleSubtypeCountOutputTypeCountUserVehiclesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserVehicleWhereInput
  }

  /**
   * VehicleSubtypeCountOutputType without action
   */
  export type VehicleSubtypeCountOutputTypeCountOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderWhereInput
  }


  /**
   * Count Type OrderCountOutputType
   */

  export type OrderCountOutputType = {
    responses: number
  }

  export type OrderCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    responses?: boolean | OrderCountOutputTypeCountResponsesArgs
  }

  // Custom InputTypes
  /**
   * OrderCountOutputType without action
   */
  export type OrderCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderCountOutputType
     */
    select?: OrderCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * OrderCountOutputType without action
   */
  export type OrderCountOutputTypeCountResponsesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderResponseWhereInput
  }


  /**
   * Models
   */

  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserAvgAggregateOutputType = {
    telegramId: number | null
    balance: Decimal | null
    frozenBalance: Decimal | null
    totalEarned: Decimal | null
    orderLimit: number | null
    createLimit: number | null
    completedOrders: number | null
    cancelledOrders: number | null
    averageRating: Decimal | null
    totalReviews: number | null
  }

  export type UserSumAggregateOutputType = {
    telegramId: bigint | null
    balance: Decimal | null
    frozenBalance: Decimal | null
    totalEarned: Decimal | null
    orderLimit: number | null
    createLimit: number | null
    completedOrders: number | null
    cancelledOrders: number | null
    averageRating: Decimal | null
    totalReviews: number | null
  }

  export type UserMinAggregateOutputType = {
    id: string | null
    telegramId: bigint | null
    username: string | null
    firstName: string | null
    lastName: string | null
    phone: string | null
    email: string | null
    role: $Enums.RoleType | null
    balance: Decimal | null
    frozenBalance: Decimal | null
    totalEarned: Decimal | null
    orderLimit: number | null
    createLimit: number | null
    completedOrders: number | null
    cancelledOrders: number | null
    averageRating: Decimal | null
    totalReviews: number | null
    hasActivePlan: boolean | null
    planExpiresAt: Date | null
    referralCode: string | null
    referredById: string | null
    isActive: boolean | null
    isBanned: boolean | null
    banReason: string | null
    lastSeenAt: Date | null
    notificationsEnabled: boolean | null
    emailNotifications: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserMaxAggregateOutputType = {
    id: string | null
    telegramId: bigint | null
    username: string | null
    firstName: string | null
    lastName: string | null
    phone: string | null
    email: string | null
    role: $Enums.RoleType | null
    balance: Decimal | null
    frozenBalance: Decimal | null
    totalEarned: Decimal | null
    orderLimit: number | null
    createLimit: number | null
    completedOrders: number | null
    cancelledOrders: number | null
    averageRating: Decimal | null
    totalReviews: number | null
    hasActivePlan: boolean | null
    planExpiresAt: Date | null
    referralCode: string | null
    referredById: string | null
    isActive: boolean | null
    isBanned: boolean | null
    banReason: string | null
    lastSeenAt: Date | null
    notificationsEnabled: boolean | null
    emailNotifications: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    telegramId: number
    username: number
    firstName: number
    lastName: number
    phone: number
    email: number
    role: number
    balance: number
    frozenBalance: number
    totalEarned: number
    orderLimit: number
    createLimit: number
    completedOrders: number
    cancelledOrders: number
    averageRating: number
    totalReviews: number
    hasActivePlan: number
    planExpiresAt: number
    referralCode: number
    referredById: number
    isActive: number
    isBanned: number
    banReason: number
    lastSeenAt: number
    notificationsEnabled: number
    emailNotifications: number
    activityLog: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type UserAvgAggregateInputType = {
    telegramId?: true
    balance?: true
    frozenBalance?: true
    totalEarned?: true
    orderLimit?: true
    createLimit?: true
    completedOrders?: true
    cancelledOrders?: true
    averageRating?: true
    totalReviews?: true
  }

  export type UserSumAggregateInputType = {
    telegramId?: true
    balance?: true
    frozenBalance?: true
    totalEarned?: true
    orderLimit?: true
    createLimit?: true
    completedOrders?: true
    cancelledOrders?: true
    averageRating?: true
    totalReviews?: true
  }

  export type UserMinAggregateInputType = {
    id?: true
    telegramId?: true
    username?: true
    firstName?: true
    lastName?: true
    phone?: true
    email?: true
    role?: true
    balance?: true
    frozenBalance?: true
    totalEarned?: true
    orderLimit?: true
    createLimit?: true
    completedOrders?: true
    cancelledOrders?: true
    averageRating?: true
    totalReviews?: true
    hasActivePlan?: true
    planExpiresAt?: true
    referralCode?: true
    referredById?: true
    isActive?: true
    isBanned?: true
    banReason?: true
    lastSeenAt?: true
    notificationsEnabled?: true
    emailNotifications?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    telegramId?: true
    username?: true
    firstName?: true
    lastName?: true
    phone?: true
    email?: true
    role?: true
    balance?: true
    frozenBalance?: true
    totalEarned?: true
    orderLimit?: true
    createLimit?: true
    completedOrders?: true
    cancelledOrders?: true
    averageRating?: true
    totalReviews?: true
    hasActivePlan?: true
    planExpiresAt?: true
    referralCode?: true
    referredById?: true
    isActive?: true
    isBanned?: true
    banReason?: true
    lastSeenAt?: true
    notificationsEnabled?: true
    emailNotifications?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    telegramId?: true
    username?: true
    firstName?: true
    lastName?: true
    phone?: true
    email?: true
    role?: true
    balance?: true
    frozenBalance?: true
    totalEarned?: true
    orderLimit?: true
    createLimit?: true
    completedOrders?: true
    cancelledOrders?: true
    averageRating?: true
    totalReviews?: true
    hasActivePlan?: true
    planExpiresAt?: true
    referralCode?: true
    referredById?: true
    isActive?: true
    isBanned?: true
    banReason?: true
    lastSeenAt?: true
    notificationsEnabled?: true
    emailNotifications?: true
    activityLog?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _avg?: UserAvgAggregateInputType
    _sum?: UserSumAggregateInputType
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: string
    telegramId: bigint
    username: string | null
    firstName: string
    lastName: string | null
    phone: string | null
    email: string | null
    role: $Enums.RoleType
    balance: Decimal
    frozenBalance: Decimal
    totalEarned: Decimal
    orderLimit: number
    createLimit: number
    completedOrders: number
    cancelledOrders: number
    averageRating: Decimal
    totalReviews: number
    hasActivePlan: boolean
    planExpiresAt: Date | null
    referralCode: string | null
    referredById: string | null
    isActive: boolean
    isBanned: boolean
    banReason: string | null
    lastSeenAt: Date | null
    notificationsEnabled: boolean
    emailNotifications: boolean
    activityLog: JsonValue
    createdAt: Date
    updatedAt: Date
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    telegramId?: boolean
    username?: boolean
    firstName?: boolean
    lastName?: boolean
    phone?: boolean
    email?: boolean
    role?: boolean
    balance?: boolean
    frozenBalance?: boolean
    totalEarned?: boolean
    orderLimit?: boolean
    createLimit?: boolean
    completedOrders?: boolean
    cancelledOrders?: boolean
    averageRating?: boolean
    totalReviews?: boolean
    hasActivePlan?: boolean
    planExpiresAt?: boolean
    referralCode?: boolean
    referredById?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: boolean
    lastSeenAt?: boolean
    notificationsEnabled?: boolean
    emailNotifications?: boolean
    activityLog?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    referredUsers?: boolean | User$referredUsersArgs<ExtArgs>
    referrer?: boolean | User$referrerArgs<ExtArgs>
    vehicles?: boolean | User$vehiclesArgs<ExtArgs>
    ordersAsCustomer?: boolean | User$ordersAsCustomerArgs<ExtArgs>
    ordersAsExecutor?: boolean | User$ordersAsExecutorArgs<ExtArgs>
    orderResponses?: boolean | User$orderResponsesArgs<ExtArgs>
    payments?: boolean | User$paymentsArgs<ExtArgs>
    sessions?: boolean | User$sessionsArgs<ExtArgs>
    notifications?: boolean | User$notificationsArgs<ExtArgs>
    userRegions?: boolean | User$userRegionsArgs<ExtArgs>
    adminActions?: boolean | User$adminActionsArgs<ExtArgs>
    broadcasts?: boolean | User$broadcastsArgs<ExtArgs>
    paymentTransactions?: boolean | User$paymentTransactionsArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    telegramId?: boolean
    username?: boolean
    firstName?: boolean
    lastName?: boolean
    phone?: boolean
    email?: boolean
    role?: boolean
    balance?: boolean
    frozenBalance?: boolean
    totalEarned?: boolean
    orderLimit?: boolean
    createLimit?: boolean
    completedOrders?: boolean
    cancelledOrders?: boolean
    averageRating?: boolean
    totalReviews?: boolean
    hasActivePlan?: boolean
    planExpiresAt?: boolean
    referralCode?: boolean
    referredById?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: boolean
    lastSeenAt?: boolean
    notificationsEnabled?: boolean
    emailNotifications?: boolean
    activityLog?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    referrer?: boolean | User$referrerArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectScalar = {
    id?: boolean
    telegramId?: boolean
    username?: boolean
    firstName?: boolean
    lastName?: boolean
    phone?: boolean
    email?: boolean
    role?: boolean
    balance?: boolean
    frozenBalance?: boolean
    totalEarned?: boolean
    orderLimit?: boolean
    createLimit?: boolean
    completedOrders?: boolean
    cancelledOrders?: boolean
    averageRating?: boolean
    totalReviews?: boolean
    hasActivePlan?: boolean
    planExpiresAt?: boolean
    referralCode?: boolean
    referredById?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: boolean
    lastSeenAt?: boolean
    notificationsEnabled?: boolean
    emailNotifications?: boolean
    activityLog?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    referredUsers?: boolean | User$referredUsersArgs<ExtArgs>
    referrer?: boolean | User$referrerArgs<ExtArgs>
    vehicles?: boolean | User$vehiclesArgs<ExtArgs>
    ordersAsCustomer?: boolean | User$ordersAsCustomerArgs<ExtArgs>
    ordersAsExecutor?: boolean | User$ordersAsExecutorArgs<ExtArgs>
    orderResponses?: boolean | User$orderResponsesArgs<ExtArgs>
    payments?: boolean | User$paymentsArgs<ExtArgs>
    sessions?: boolean | User$sessionsArgs<ExtArgs>
    notifications?: boolean | User$notificationsArgs<ExtArgs>
    userRegions?: boolean | User$userRegionsArgs<ExtArgs>
    adminActions?: boolean | User$adminActionsArgs<ExtArgs>
    broadcasts?: boolean | User$broadcastsArgs<ExtArgs>
    paymentTransactions?: boolean | User$paymentTransactionsArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UserIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    referrer?: boolean | User$referrerArgs<ExtArgs>
  }

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      referredUsers: Prisma.$UserPayload<ExtArgs>[]
      referrer: Prisma.$UserPayload<ExtArgs> | null
      vehicles: Prisma.$UserVehiclePayload<ExtArgs>[]
      ordersAsCustomer: Prisma.$OrderPayload<ExtArgs>[]
      ordersAsExecutor: Prisma.$OrderPayload<ExtArgs>[]
      orderResponses: Prisma.$OrderResponsePayload<ExtArgs>[]
      payments: Prisma.$PaymentPayload<ExtArgs>[]
      sessions: Prisma.$SessionPayload<ExtArgs>[]
      notifications: Prisma.$NotificationPayload<ExtArgs>[]
      userRegions: Prisma.$UserRegionPayload<ExtArgs>[]
      adminActions: Prisma.$AdminActionPayload<ExtArgs>[]
      broadcasts: Prisma.$BroadcastPayload<ExtArgs>[]
      paymentTransactions: Prisma.$PaymentTransactionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      telegramId: bigint
      username: string | null
      firstName: string
      lastName: string | null
      phone: string | null
      email: string | null
      role: $Enums.RoleType
      balance: Prisma.Decimal
      frozenBalance: Prisma.Decimal
      totalEarned: Prisma.Decimal
      orderLimit: number
      createLimit: number
      completedOrders: number
      cancelledOrders: number
      averageRating: Prisma.Decimal
      totalReviews: number
      hasActivePlan: boolean
      planExpiresAt: Date | null
      referralCode: string | null
      referredById: string | null
      isActive: boolean
      isBanned: boolean
      banReason: string | null
      lastSeenAt: Date | null
      notificationsEnabled: boolean
      emailNotifications: boolean
      activityLog: Prisma.JsonValue
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const userWithIdOnly = await prisma.user.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    referredUsers<T extends User$referredUsersArgs<ExtArgs> = {}>(args?: Subset<T, User$referredUsersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany"> | Null>
    referrer<T extends User$referrerArgs<ExtArgs> = {}>(args?: Subset<T, User$referrerArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    vehicles<T extends User$vehiclesArgs<ExtArgs> = {}>(args?: Subset<T, User$vehiclesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserVehiclePayload<ExtArgs>, T, "findMany"> | Null>
    ordersAsCustomer<T extends User$ordersAsCustomerArgs<ExtArgs> = {}>(args?: Subset<T, User$ordersAsCustomerArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findMany"> | Null>
    ordersAsExecutor<T extends User$ordersAsExecutorArgs<ExtArgs> = {}>(args?: Subset<T, User$ordersAsExecutorArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findMany"> | Null>
    orderResponses<T extends User$orderResponsesArgs<ExtArgs> = {}>(args?: Subset<T, User$orderResponsesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderResponsePayload<ExtArgs>, T, "findMany"> | Null>
    payments<T extends User$paymentsArgs<ExtArgs> = {}>(args?: Subset<T, User$paymentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findMany"> | Null>
    sessions<T extends User$sessionsArgs<ExtArgs> = {}>(args?: Subset<T, User$sessionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findMany"> | Null>
    notifications<T extends User$notificationsArgs<ExtArgs> = {}>(args?: Subset<T, User$notificationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findMany"> | Null>
    userRegions<T extends User$userRegionsArgs<ExtArgs> = {}>(args?: Subset<T, User$userRegionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserRegionPayload<ExtArgs>, T, "findMany"> | Null>
    adminActions<T extends User$adminActionsArgs<ExtArgs> = {}>(args?: Subset<T, User$adminActionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AdminActionPayload<ExtArgs>, T, "findMany"> | Null>
    broadcasts<T extends User$broadcastsArgs<ExtArgs> = {}>(args?: Subset<T, User$broadcastsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BroadcastPayload<ExtArgs>, T, "findMany"> | Null>
    paymentTransactions<T extends User$paymentTransactionsArgs<ExtArgs> = {}>(args?: Subset<T, User$paymentTransactionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentTransactionPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */ 
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'String'>
    readonly telegramId: FieldRef<"User", 'BigInt'>
    readonly username: FieldRef<"User", 'String'>
    readonly firstName: FieldRef<"User", 'String'>
    readonly lastName: FieldRef<"User", 'String'>
    readonly phone: FieldRef<"User", 'String'>
    readonly email: FieldRef<"User", 'String'>
    readonly role: FieldRef<"User", 'RoleType'>
    readonly balance: FieldRef<"User", 'Decimal'>
    readonly frozenBalance: FieldRef<"User", 'Decimal'>
    readonly totalEarned: FieldRef<"User", 'Decimal'>
    readonly orderLimit: FieldRef<"User", 'Int'>
    readonly createLimit: FieldRef<"User", 'Int'>
    readonly completedOrders: FieldRef<"User", 'Int'>
    readonly cancelledOrders: FieldRef<"User", 'Int'>
    readonly averageRating: FieldRef<"User", 'Decimal'>
    readonly totalReviews: FieldRef<"User", 'Int'>
    readonly hasActivePlan: FieldRef<"User", 'Boolean'>
    readonly planExpiresAt: FieldRef<"User", 'DateTime'>
    readonly referralCode: FieldRef<"User", 'String'>
    readonly referredById: FieldRef<"User", 'String'>
    readonly isActive: FieldRef<"User", 'Boolean'>
    readonly isBanned: FieldRef<"User", 'Boolean'>
    readonly banReason: FieldRef<"User", 'String'>
    readonly lastSeenAt: FieldRef<"User", 'DateTime'>
    readonly notificationsEnabled: FieldRef<"User", 'Boolean'>
    readonly emailNotifications: FieldRef<"User", 'Boolean'>
    readonly activityLog: FieldRef<"User", 'Json'>
    readonly createdAt: FieldRef<"User", 'DateTime'>
    readonly updatedAt: FieldRef<"User", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User createManyAndReturn
   */
  export type UserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
  }

  /**
   * User.referredUsers
   */
  export type User$referredUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User.referrer
   */
  export type User$referrerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * User.vehicles
   */
  export type User$vehiclesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserVehicle
     */
    select?: UserVehicleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserVehicleInclude<ExtArgs> | null
    where?: UserVehicleWhereInput
    orderBy?: UserVehicleOrderByWithRelationInput | UserVehicleOrderByWithRelationInput[]
    cursor?: UserVehicleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserVehicleScalarFieldEnum | UserVehicleScalarFieldEnum[]
  }

  /**
   * User.ordersAsCustomer
   */
  export type User$ordersAsCustomerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    where?: OrderWhereInput
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    cursor?: OrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * User.ordersAsExecutor
   */
  export type User$ordersAsExecutorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    where?: OrderWhereInput
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    cursor?: OrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * User.orderResponses
   */
  export type User$orderResponsesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderResponse
     */
    select?: OrderResponseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderResponseInclude<ExtArgs> | null
    where?: OrderResponseWhereInput
    orderBy?: OrderResponseOrderByWithRelationInput | OrderResponseOrderByWithRelationInput[]
    cursor?: OrderResponseWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderResponseScalarFieldEnum | OrderResponseScalarFieldEnum[]
  }

  /**
   * User.payments
   */
  export type User$paymentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    where?: PaymentWhereInput
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    cursor?: PaymentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PaymentScalarFieldEnum | PaymentScalarFieldEnum[]
  }

  /**
   * User.sessions
   */
  export type User$sessionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    where?: SessionWhereInput
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    cursor?: SessionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SessionScalarFieldEnum | SessionScalarFieldEnum[]
  }

  /**
   * User.notifications
   */
  export type User$notificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    where?: NotificationWhereInput
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    cursor?: NotificationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * User.userRegions
   */
  export type User$userRegionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserRegion
     */
    select?: UserRegionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserRegionInclude<ExtArgs> | null
    where?: UserRegionWhereInput
    orderBy?: UserRegionOrderByWithRelationInput | UserRegionOrderByWithRelationInput[]
    cursor?: UserRegionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserRegionScalarFieldEnum | UserRegionScalarFieldEnum[]
  }

  /**
   * User.adminActions
   */
  export type User$adminActionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdminAction
     */
    select?: AdminActionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminActionInclude<ExtArgs> | null
    where?: AdminActionWhereInput
    orderBy?: AdminActionOrderByWithRelationInput | AdminActionOrderByWithRelationInput[]
    cursor?: AdminActionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AdminActionScalarFieldEnum | AdminActionScalarFieldEnum[]
  }

  /**
   * User.broadcasts
   */
  export type User$broadcastsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Broadcast
     */
    select?: BroadcastSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BroadcastInclude<ExtArgs> | null
    where?: BroadcastWhereInput
    orderBy?: BroadcastOrderByWithRelationInput | BroadcastOrderByWithRelationInput[]
    cursor?: BroadcastWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BroadcastScalarFieldEnum | BroadcastScalarFieldEnum[]
  }

  /**
   * User.paymentTransactions
   */
  export type User$paymentTransactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentTransaction
     */
    select?: PaymentTransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentTransactionInclude<ExtArgs> | null
    where?: PaymentTransactionWhereInput
    orderBy?: PaymentTransactionOrderByWithRelationInput | PaymentTransactionOrderByWithRelationInput[]
    cursor?: PaymentTransactionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PaymentTransactionScalarFieldEnum | PaymentTransactionScalarFieldEnum[]
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model Region
   */

  export type AggregateRegion = {
    _count: RegionCountAggregateOutputType | null
    _avg: RegionAvgAggregateOutputType | null
    _sum: RegionSumAggregateOutputType | null
    _min: RegionMinAggregateOutputType | null
    _max: RegionMaxAggregateOutputType | null
  }

  export type RegionAvgAggregateOutputType = {
    centerLatitude: Decimal | null
    centerLongitude: Decimal | null
    oneTimePlanPrice: Decimal | null
    monthlyPlanPrice: Decimal | null
  }

  export type RegionSumAggregateOutputType = {
    centerLatitude: Decimal | null
    centerLongitude: Decimal | null
    oneTimePlanPrice: Decimal | null
    monthlyPlanPrice: Decimal | null
  }

  export type RegionMinAggregateOutputType = {
    id: string | null
    name: string | null
    code: string | null
    regionCode: string | null
    centerLatitude: Decimal | null
    centerLongitude: Decimal | null
    oneTimePlanPrice: Decimal | null
    monthlyPlanPrice: Decimal | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type RegionMaxAggregateOutputType = {
    id: string | null
    name: string | null
    code: string | null
    regionCode: string | null
    centerLatitude: Decimal | null
    centerLongitude: Decimal | null
    oneTimePlanPrice: Decimal | null
    monthlyPlanPrice: Decimal | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type RegionCountAggregateOutputType = {
    id: number
    name: number
    code: number
    regionCode: number
    subRegions: number
    centerLatitude: number
    centerLongitude: number
    oneTimePlanPrice: number
    monthlyPlanPrice: number
    isActive: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type RegionAvgAggregateInputType = {
    centerLatitude?: true
    centerLongitude?: true
    oneTimePlanPrice?: true
    monthlyPlanPrice?: true
  }

  export type RegionSumAggregateInputType = {
    centerLatitude?: true
    centerLongitude?: true
    oneTimePlanPrice?: true
    monthlyPlanPrice?: true
  }

  export type RegionMinAggregateInputType = {
    id?: true
    name?: true
    code?: true
    regionCode?: true
    centerLatitude?: true
    centerLongitude?: true
    oneTimePlanPrice?: true
    monthlyPlanPrice?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
  }

  export type RegionMaxAggregateInputType = {
    id?: true
    name?: true
    code?: true
    regionCode?: true
    centerLatitude?: true
    centerLongitude?: true
    oneTimePlanPrice?: true
    monthlyPlanPrice?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
  }

  export type RegionCountAggregateInputType = {
    id?: true
    name?: true
    code?: true
    regionCode?: true
    subRegions?: true
    centerLatitude?: true
    centerLongitude?: true
    oneTimePlanPrice?: true
    monthlyPlanPrice?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type RegionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Region to aggregate.
     */
    where?: RegionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Regions to fetch.
     */
    orderBy?: RegionOrderByWithRelationInput | RegionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RegionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Regions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Regions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Regions
    **/
    _count?: true | RegionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RegionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RegionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RegionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RegionMaxAggregateInputType
  }

  export type GetRegionAggregateType<T extends RegionAggregateArgs> = {
        [P in keyof T & keyof AggregateRegion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRegion[P]>
      : GetScalarType<T[P], AggregateRegion[P]>
  }




  export type RegionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RegionWhereInput
    orderBy?: RegionOrderByWithAggregationInput | RegionOrderByWithAggregationInput[]
    by: RegionScalarFieldEnum[] | RegionScalarFieldEnum
    having?: RegionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RegionCountAggregateInputType | true
    _avg?: RegionAvgAggregateInputType
    _sum?: RegionSumAggregateInputType
    _min?: RegionMinAggregateInputType
    _max?: RegionMaxAggregateInputType
  }

  export type RegionGroupByOutputType = {
    id: string
    name: string
    code: string
    regionCode: string
    subRegions: JsonValue
    centerLatitude: Decimal | null
    centerLongitude: Decimal | null
    oneTimePlanPrice: Decimal
    monthlyPlanPrice: Decimal
    isActive: boolean
    createdAt: Date
    updatedAt: Date
    _count: RegionCountAggregateOutputType | null
    _avg: RegionAvgAggregateOutputType | null
    _sum: RegionSumAggregateOutputType | null
    _min: RegionMinAggregateOutputType | null
    _max: RegionMaxAggregateOutputType | null
  }

  type GetRegionGroupByPayload<T extends RegionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RegionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RegionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RegionGroupByOutputType[P]>
            : GetScalarType<T[P], RegionGroupByOutputType[P]>
        }
      >
    >


  export type RegionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    code?: boolean
    regionCode?: boolean
    subRegions?: boolean
    centerLatitude?: boolean
    centerLongitude?: boolean
    oneTimePlanPrice?: boolean
    monthlyPlanPrice?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    orders?: boolean | Region$ordersArgs<ExtArgs>
    userRegions?: boolean | Region$userRegionsArgs<ExtArgs>
    broadcasts?: boolean | Region$broadcastsArgs<ExtArgs>
    _count?: boolean | RegionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["region"]>

  export type RegionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    code?: boolean
    regionCode?: boolean
    subRegions?: boolean
    centerLatitude?: boolean
    centerLongitude?: boolean
    oneTimePlanPrice?: boolean
    monthlyPlanPrice?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["region"]>

  export type RegionSelectScalar = {
    id?: boolean
    name?: boolean
    code?: boolean
    regionCode?: boolean
    subRegions?: boolean
    centerLatitude?: boolean
    centerLongitude?: boolean
    oneTimePlanPrice?: boolean
    monthlyPlanPrice?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type RegionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    orders?: boolean | Region$ordersArgs<ExtArgs>
    userRegions?: boolean | Region$userRegionsArgs<ExtArgs>
    broadcasts?: boolean | Region$broadcastsArgs<ExtArgs>
    _count?: boolean | RegionCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type RegionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $RegionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Region"
    objects: {
      orders: Prisma.$OrderPayload<ExtArgs>[]
      userRegions: Prisma.$UserRegionPayload<ExtArgs>[]
      broadcasts: Prisma.$BroadcastPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      code: string
      regionCode: string
      subRegions: Prisma.JsonValue
      centerLatitude: Prisma.Decimal | null
      centerLongitude: Prisma.Decimal | null
      oneTimePlanPrice: Prisma.Decimal
      monthlyPlanPrice: Prisma.Decimal
      isActive: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["region"]>
    composites: {}
  }

  type RegionGetPayload<S extends boolean | null | undefined | RegionDefaultArgs> = $Result.GetResult<Prisma.$RegionPayload, S>

  type RegionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<RegionFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: RegionCountAggregateInputType | true
    }

  export interface RegionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Region'], meta: { name: 'Region' } }
    /**
     * Find zero or one Region that matches the filter.
     * @param {RegionFindUniqueArgs} args - Arguments to find a Region
     * @example
     * // Get one Region
     * const region = await prisma.region.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RegionFindUniqueArgs>(args: SelectSubset<T, RegionFindUniqueArgs<ExtArgs>>): Prisma__RegionClient<$Result.GetResult<Prisma.$RegionPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Region that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {RegionFindUniqueOrThrowArgs} args - Arguments to find a Region
     * @example
     * // Get one Region
     * const region = await prisma.region.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RegionFindUniqueOrThrowArgs>(args: SelectSubset<T, RegionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RegionClient<$Result.GetResult<Prisma.$RegionPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Region that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegionFindFirstArgs} args - Arguments to find a Region
     * @example
     * // Get one Region
     * const region = await prisma.region.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RegionFindFirstArgs>(args?: SelectSubset<T, RegionFindFirstArgs<ExtArgs>>): Prisma__RegionClient<$Result.GetResult<Prisma.$RegionPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Region that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegionFindFirstOrThrowArgs} args - Arguments to find a Region
     * @example
     * // Get one Region
     * const region = await prisma.region.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RegionFindFirstOrThrowArgs>(args?: SelectSubset<T, RegionFindFirstOrThrowArgs<ExtArgs>>): Prisma__RegionClient<$Result.GetResult<Prisma.$RegionPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Regions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Regions
     * const regions = await prisma.region.findMany()
     * 
     * // Get first 10 Regions
     * const regions = await prisma.region.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const regionWithIdOnly = await prisma.region.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RegionFindManyArgs>(args?: SelectSubset<T, RegionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RegionPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Region.
     * @param {RegionCreateArgs} args - Arguments to create a Region.
     * @example
     * // Create one Region
     * const Region = await prisma.region.create({
     *   data: {
     *     // ... data to create a Region
     *   }
     * })
     * 
     */
    create<T extends RegionCreateArgs>(args: SelectSubset<T, RegionCreateArgs<ExtArgs>>): Prisma__RegionClient<$Result.GetResult<Prisma.$RegionPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Regions.
     * @param {RegionCreateManyArgs} args - Arguments to create many Regions.
     * @example
     * // Create many Regions
     * const region = await prisma.region.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RegionCreateManyArgs>(args?: SelectSubset<T, RegionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Regions and returns the data saved in the database.
     * @param {RegionCreateManyAndReturnArgs} args - Arguments to create many Regions.
     * @example
     * // Create many Regions
     * const region = await prisma.region.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Regions and only return the `id`
     * const regionWithIdOnly = await prisma.region.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RegionCreateManyAndReturnArgs>(args?: SelectSubset<T, RegionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RegionPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Region.
     * @param {RegionDeleteArgs} args - Arguments to delete one Region.
     * @example
     * // Delete one Region
     * const Region = await prisma.region.delete({
     *   where: {
     *     // ... filter to delete one Region
     *   }
     * })
     * 
     */
    delete<T extends RegionDeleteArgs>(args: SelectSubset<T, RegionDeleteArgs<ExtArgs>>): Prisma__RegionClient<$Result.GetResult<Prisma.$RegionPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Region.
     * @param {RegionUpdateArgs} args - Arguments to update one Region.
     * @example
     * // Update one Region
     * const region = await prisma.region.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RegionUpdateArgs>(args: SelectSubset<T, RegionUpdateArgs<ExtArgs>>): Prisma__RegionClient<$Result.GetResult<Prisma.$RegionPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Regions.
     * @param {RegionDeleteManyArgs} args - Arguments to filter Regions to delete.
     * @example
     * // Delete a few Regions
     * const { count } = await prisma.region.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RegionDeleteManyArgs>(args?: SelectSubset<T, RegionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Regions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Regions
     * const region = await prisma.region.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RegionUpdateManyArgs>(args: SelectSubset<T, RegionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Region.
     * @param {RegionUpsertArgs} args - Arguments to update or create a Region.
     * @example
     * // Update or create a Region
     * const region = await prisma.region.upsert({
     *   create: {
     *     // ... data to create a Region
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Region we want to update
     *   }
     * })
     */
    upsert<T extends RegionUpsertArgs>(args: SelectSubset<T, RegionUpsertArgs<ExtArgs>>): Prisma__RegionClient<$Result.GetResult<Prisma.$RegionPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Regions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegionCountArgs} args - Arguments to filter Regions to count.
     * @example
     * // Count the number of Regions
     * const count = await prisma.region.count({
     *   where: {
     *     // ... the filter for the Regions we want to count
     *   }
     * })
    **/
    count<T extends RegionCountArgs>(
      args?: Subset<T, RegionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RegionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Region.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RegionAggregateArgs>(args: Subset<T, RegionAggregateArgs>): Prisma.PrismaPromise<GetRegionAggregateType<T>>

    /**
     * Group by Region.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RegionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RegionGroupByArgs['orderBy'] }
        : { orderBy?: RegionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RegionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRegionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Region model
   */
  readonly fields: RegionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Region.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RegionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    orders<T extends Region$ordersArgs<ExtArgs> = {}>(args?: Subset<T, Region$ordersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findMany"> | Null>
    userRegions<T extends Region$userRegionsArgs<ExtArgs> = {}>(args?: Subset<T, Region$userRegionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserRegionPayload<ExtArgs>, T, "findMany"> | Null>
    broadcasts<T extends Region$broadcastsArgs<ExtArgs> = {}>(args?: Subset<T, Region$broadcastsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BroadcastPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Region model
   */ 
  interface RegionFieldRefs {
    readonly id: FieldRef<"Region", 'String'>
    readonly name: FieldRef<"Region", 'String'>
    readonly code: FieldRef<"Region", 'String'>
    readonly regionCode: FieldRef<"Region", 'String'>
    readonly subRegions: FieldRef<"Region", 'Json'>
    readonly centerLatitude: FieldRef<"Region", 'Decimal'>
    readonly centerLongitude: FieldRef<"Region", 'Decimal'>
    readonly oneTimePlanPrice: FieldRef<"Region", 'Decimal'>
    readonly monthlyPlanPrice: FieldRef<"Region", 'Decimal'>
    readonly isActive: FieldRef<"Region", 'Boolean'>
    readonly createdAt: FieldRef<"Region", 'DateTime'>
    readonly updatedAt: FieldRef<"Region", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Region findUnique
   */
  export type RegionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Region
     */
    select?: RegionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegionInclude<ExtArgs> | null
    /**
     * Filter, which Region to fetch.
     */
    where: RegionWhereUniqueInput
  }

  /**
   * Region findUniqueOrThrow
   */
  export type RegionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Region
     */
    select?: RegionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegionInclude<ExtArgs> | null
    /**
     * Filter, which Region to fetch.
     */
    where: RegionWhereUniqueInput
  }

  /**
   * Region findFirst
   */
  export type RegionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Region
     */
    select?: RegionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegionInclude<ExtArgs> | null
    /**
     * Filter, which Region to fetch.
     */
    where?: RegionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Regions to fetch.
     */
    orderBy?: RegionOrderByWithRelationInput | RegionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Regions.
     */
    cursor?: RegionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Regions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Regions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Regions.
     */
    distinct?: RegionScalarFieldEnum | RegionScalarFieldEnum[]
  }

  /**
   * Region findFirstOrThrow
   */
  export type RegionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Region
     */
    select?: RegionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegionInclude<ExtArgs> | null
    /**
     * Filter, which Region to fetch.
     */
    where?: RegionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Regions to fetch.
     */
    orderBy?: RegionOrderByWithRelationInput | RegionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Regions.
     */
    cursor?: RegionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Regions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Regions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Regions.
     */
    distinct?: RegionScalarFieldEnum | RegionScalarFieldEnum[]
  }

  /**
   * Region findMany
   */
  export type RegionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Region
     */
    select?: RegionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegionInclude<ExtArgs> | null
    /**
     * Filter, which Regions to fetch.
     */
    where?: RegionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Regions to fetch.
     */
    orderBy?: RegionOrderByWithRelationInput | RegionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Regions.
     */
    cursor?: RegionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Regions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Regions.
     */
    skip?: number
    distinct?: RegionScalarFieldEnum | RegionScalarFieldEnum[]
  }

  /**
   * Region create
   */
  export type RegionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Region
     */
    select?: RegionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegionInclude<ExtArgs> | null
    /**
     * The data needed to create a Region.
     */
    data: XOR<RegionCreateInput, RegionUncheckedCreateInput>
  }

  /**
   * Region createMany
   */
  export type RegionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Regions.
     */
    data: RegionCreateManyInput | RegionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Region createManyAndReturn
   */
  export type RegionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Region
     */
    select?: RegionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Regions.
     */
    data: RegionCreateManyInput | RegionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Region update
   */
  export type RegionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Region
     */
    select?: RegionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegionInclude<ExtArgs> | null
    /**
     * The data needed to update a Region.
     */
    data: XOR<RegionUpdateInput, RegionUncheckedUpdateInput>
    /**
     * Choose, which Region to update.
     */
    where: RegionWhereUniqueInput
  }

  /**
   * Region updateMany
   */
  export type RegionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Regions.
     */
    data: XOR<RegionUpdateManyMutationInput, RegionUncheckedUpdateManyInput>
    /**
     * Filter which Regions to update
     */
    where?: RegionWhereInput
  }

  /**
   * Region upsert
   */
  export type RegionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Region
     */
    select?: RegionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegionInclude<ExtArgs> | null
    /**
     * The filter to search for the Region to update in case it exists.
     */
    where: RegionWhereUniqueInput
    /**
     * In case the Region found by the `where` argument doesn't exist, create a new Region with this data.
     */
    create: XOR<RegionCreateInput, RegionUncheckedCreateInput>
    /**
     * In case the Region was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RegionUpdateInput, RegionUncheckedUpdateInput>
  }

  /**
   * Region delete
   */
  export type RegionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Region
     */
    select?: RegionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegionInclude<ExtArgs> | null
    /**
     * Filter which Region to delete.
     */
    where: RegionWhereUniqueInput
  }

  /**
   * Region deleteMany
   */
  export type RegionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Regions to delete
     */
    where?: RegionWhereInput
  }

  /**
   * Region.orders
   */
  export type Region$ordersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    where?: OrderWhereInput
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    cursor?: OrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * Region.userRegions
   */
  export type Region$userRegionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserRegion
     */
    select?: UserRegionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserRegionInclude<ExtArgs> | null
    where?: UserRegionWhereInput
    orderBy?: UserRegionOrderByWithRelationInput | UserRegionOrderByWithRelationInput[]
    cursor?: UserRegionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserRegionScalarFieldEnum | UserRegionScalarFieldEnum[]
  }

  /**
   * Region.broadcasts
   */
  export type Region$broadcastsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Broadcast
     */
    select?: BroadcastSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BroadcastInclude<ExtArgs> | null
    where?: BroadcastWhereInput
    orderBy?: BroadcastOrderByWithRelationInput | BroadcastOrderByWithRelationInput[]
    cursor?: BroadcastWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BroadcastScalarFieldEnum | BroadcastScalarFieldEnum[]
  }

  /**
   * Region without action
   */
  export type RegionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Region
     */
    select?: RegionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegionInclude<ExtArgs> | null
  }


  /**
   * Model UserRegion
   */

  export type AggregateUserRegion = {
    _count: UserRegionCountAggregateOutputType | null
    _min: UserRegionMinAggregateOutputType | null
    _max: UserRegionMaxAggregateOutputType | null
  }

  export type UserRegionMinAggregateOutputType = {
    id: string | null
    userId: string | null
    regionId: string | null
    regionCode: string | null
    planType: $Enums.TariffType | null
    paidUntil: Date | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserRegionMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    regionId: string | null
    regionCode: string | null
    planType: $Enums.TariffType | null
    paidUntil: Date | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserRegionCountAggregateOutputType = {
    id: number
    userId: number
    regionId: number
    regionCode: number
    activeSubRegions: number
    planType: number
    paidUntil: number
    isActive: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type UserRegionMinAggregateInputType = {
    id?: true
    userId?: true
    regionId?: true
    regionCode?: true
    planType?: true
    paidUntil?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserRegionMaxAggregateInputType = {
    id?: true
    userId?: true
    regionId?: true
    regionCode?: true
    planType?: true
    paidUntil?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserRegionCountAggregateInputType = {
    id?: true
    userId?: true
    regionId?: true
    regionCode?: true
    activeSubRegions?: true
    planType?: true
    paidUntil?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type UserRegionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserRegion to aggregate.
     */
    where?: UserRegionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserRegions to fetch.
     */
    orderBy?: UserRegionOrderByWithRelationInput | UserRegionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserRegionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserRegions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserRegions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UserRegions
    **/
    _count?: true | UserRegionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserRegionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserRegionMaxAggregateInputType
  }

  export type GetUserRegionAggregateType<T extends UserRegionAggregateArgs> = {
        [P in keyof T & keyof AggregateUserRegion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUserRegion[P]>
      : GetScalarType<T[P], AggregateUserRegion[P]>
  }




  export type UserRegionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserRegionWhereInput
    orderBy?: UserRegionOrderByWithAggregationInput | UserRegionOrderByWithAggregationInput[]
    by: UserRegionScalarFieldEnum[] | UserRegionScalarFieldEnum
    having?: UserRegionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserRegionCountAggregateInputType | true
    _min?: UserRegionMinAggregateInputType
    _max?: UserRegionMaxAggregateInputType
  }

  export type UserRegionGroupByOutputType = {
    id: string
    userId: string
    regionId: string
    regionCode: string
    activeSubRegions: JsonValue
    planType: $Enums.TariffType
    paidUntil: Date | null
    isActive: boolean
    createdAt: Date
    updatedAt: Date
    _count: UserRegionCountAggregateOutputType | null
    _min: UserRegionMinAggregateOutputType | null
    _max: UserRegionMaxAggregateOutputType | null
  }

  type GetUserRegionGroupByPayload<T extends UserRegionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserRegionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserRegionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserRegionGroupByOutputType[P]>
            : GetScalarType<T[P], UserRegionGroupByOutputType[P]>
        }
      >
    >


  export type UserRegionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    regionId?: boolean
    regionCode?: boolean
    activeSubRegions?: boolean
    planType?: boolean
    paidUntil?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    region?: boolean | RegionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userRegion"]>

  export type UserRegionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    regionId?: boolean
    regionCode?: boolean
    activeSubRegions?: boolean
    planType?: boolean
    paidUntil?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    region?: boolean | RegionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userRegion"]>

  export type UserRegionSelectScalar = {
    id?: boolean
    userId?: boolean
    regionId?: boolean
    regionCode?: boolean
    activeSubRegions?: boolean
    planType?: boolean
    paidUntil?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type UserRegionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    region?: boolean | RegionDefaultArgs<ExtArgs>
  }
  export type UserRegionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    region?: boolean | RegionDefaultArgs<ExtArgs>
  }

  export type $UserRegionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "UserRegion"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      region: Prisma.$RegionPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      regionId: string
      regionCode: string
      activeSubRegions: Prisma.JsonValue
      planType: $Enums.TariffType
      paidUntil: Date | null
      isActive: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["userRegion"]>
    composites: {}
  }

  type UserRegionGetPayload<S extends boolean | null | undefined | UserRegionDefaultArgs> = $Result.GetResult<Prisma.$UserRegionPayload, S>

  type UserRegionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<UserRegionFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UserRegionCountAggregateInputType | true
    }

  export interface UserRegionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UserRegion'], meta: { name: 'UserRegion' } }
    /**
     * Find zero or one UserRegion that matches the filter.
     * @param {UserRegionFindUniqueArgs} args - Arguments to find a UserRegion
     * @example
     * // Get one UserRegion
     * const userRegion = await prisma.userRegion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserRegionFindUniqueArgs>(args: SelectSubset<T, UserRegionFindUniqueArgs<ExtArgs>>): Prisma__UserRegionClient<$Result.GetResult<Prisma.$UserRegionPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one UserRegion that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {UserRegionFindUniqueOrThrowArgs} args - Arguments to find a UserRegion
     * @example
     * // Get one UserRegion
     * const userRegion = await prisma.userRegion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserRegionFindUniqueOrThrowArgs>(args: SelectSubset<T, UserRegionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserRegionClient<$Result.GetResult<Prisma.$UserRegionPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first UserRegion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserRegionFindFirstArgs} args - Arguments to find a UserRegion
     * @example
     * // Get one UserRegion
     * const userRegion = await prisma.userRegion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserRegionFindFirstArgs>(args?: SelectSubset<T, UserRegionFindFirstArgs<ExtArgs>>): Prisma__UserRegionClient<$Result.GetResult<Prisma.$UserRegionPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first UserRegion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserRegionFindFirstOrThrowArgs} args - Arguments to find a UserRegion
     * @example
     * // Get one UserRegion
     * const userRegion = await prisma.userRegion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserRegionFindFirstOrThrowArgs>(args?: SelectSubset<T, UserRegionFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserRegionClient<$Result.GetResult<Prisma.$UserRegionPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more UserRegions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserRegionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UserRegions
     * const userRegions = await prisma.userRegion.findMany()
     * 
     * // Get first 10 UserRegions
     * const userRegions = await prisma.userRegion.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userRegionWithIdOnly = await prisma.userRegion.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserRegionFindManyArgs>(args?: SelectSubset<T, UserRegionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserRegionPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a UserRegion.
     * @param {UserRegionCreateArgs} args - Arguments to create a UserRegion.
     * @example
     * // Create one UserRegion
     * const UserRegion = await prisma.userRegion.create({
     *   data: {
     *     // ... data to create a UserRegion
     *   }
     * })
     * 
     */
    create<T extends UserRegionCreateArgs>(args: SelectSubset<T, UserRegionCreateArgs<ExtArgs>>): Prisma__UserRegionClient<$Result.GetResult<Prisma.$UserRegionPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many UserRegions.
     * @param {UserRegionCreateManyArgs} args - Arguments to create many UserRegions.
     * @example
     * // Create many UserRegions
     * const userRegion = await prisma.userRegion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserRegionCreateManyArgs>(args?: SelectSubset<T, UserRegionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many UserRegions and returns the data saved in the database.
     * @param {UserRegionCreateManyAndReturnArgs} args - Arguments to create many UserRegions.
     * @example
     * // Create many UserRegions
     * const userRegion = await prisma.userRegion.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many UserRegions and only return the `id`
     * const userRegionWithIdOnly = await prisma.userRegion.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserRegionCreateManyAndReturnArgs>(args?: SelectSubset<T, UserRegionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserRegionPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a UserRegion.
     * @param {UserRegionDeleteArgs} args - Arguments to delete one UserRegion.
     * @example
     * // Delete one UserRegion
     * const UserRegion = await prisma.userRegion.delete({
     *   where: {
     *     // ... filter to delete one UserRegion
     *   }
     * })
     * 
     */
    delete<T extends UserRegionDeleteArgs>(args: SelectSubset<T, UserRegionDeleteArgs<ExtArgs>>): Prisma__UserRegionClient<$Result.GetResult<Prisma.$UserRegionPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one UserRegion.
     * @param {UserRegionUpdateArgs} args - Arguments to update one UserRegion.
     * @example
     * // Update one UserRegion
     * const userRegion = await prisma.userRegion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserRegionUpdateArgs>(args: SelectSubset<T, UserRegionUpdateArgs<ExtArgs>>): Prisma__UserRegionClient<$Result.GetResult<Prisma.$UserRegionPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more UserRegions.
     * @param {UserRegionDeleteManyArgs} args - Arguments to filter UserRegions to delete.
     * @example
     * // Delete a few UserRegions
     * const { count } = await prisma.userRegion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserRegionDeleteManyArgs>(args?: SelectSubset<T, UserRegionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserRegions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserRegionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UserRegions
     * const userRegion = await prisma.userRegion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserRegionUpdateManyArgs>(args: SelectSubset<T, UserRegionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one UserRegion.
     * @param {UserRegionUpsertArgs} args - Arguments to update or create a UserRegion.
     * @example
     * // Update or create a UserRegion
     * const userRegion = await prisma.userRegion.upsert({
     *   create: {
     *     // ... data to create a UserRegion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UserRegion we want to update
     *   }
     * })
     */
    upsert<T extends UserRegionUpsertArgs>(args: SelectSubset<T, UserRegionUpsertArgs<ExtArgs>>): Prisma__UserRegionClient<$Result.GetResult<Prisma.$UserRegionPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of UserRegions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserRegionCountArgs} args - Arguments to filter UserRegions to count.
     * @example
     * // Count the number of UserRegions
     * const count = await prisma.userRegion.count({
     *   where: {
     *     // ... the filter for the UserRegions we want to count
     *   }
     * })
    **/
    count<T extends UserRegionCountArgs>(
      args?: Subset<T, UserRegionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserRegionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UserRegion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserRegionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserRegionAggregateArgs>(args: Subset<T, UserRegionAggregateArgs>): Prisma.PrismaPromise<GetUserRegionAggregateType<T>>

    /**
     * Group by UserRegion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserRegionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserRegionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserRegionGroupByArgs['orderBy'] }
        : { orderBy?: UserRegionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserRegionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserRegionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the UserRegion model
   */
  readonly fields: UserRegionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for UserRegion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserRegionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    region<T extends RegionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RegionDefaultArgs<ExtArgs>>): Prisma__RegionClient<$Result.GetResult<Prisma.$RegionPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the UserRegion model
   */ 
  interface UserRegionFieldRefs {
    readonly id: FieldRef<"UserRegion", 'String'>
    readonly userId: FieldRef<"UserRegion", 'String'>
    readonly regionId: FieldRef<"UserRegion", 'String'>
    readonly regionCode: FieldRef<"UserRegion", 'String'>
    readonly activeSubRegions: FieldRef<"UserRegion", 'Json'>
    readonly planType: FieldRef<"UserRegion", 'TariffType'>
    readonly paidUntil: FieldRef<"UserRegion", 'DateTime'>
    readonly isActive: FieldRef<"UserRegion", 'Boolean'>
    readonly createdAt: FieldRef<"UserRegion", 'DateTime'>
    readonly updatedAt: FieldRef<"UserRegion", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * UserRegion findUnique
   */
  export type UserRegionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserRegion
     */
    select?: UserRegionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserRegionInclude<ExtArgs> | null
    /**
     * Filter, which UserRegion to fetch.
     */
    where: UserRegionWhereUniqueInput
  }

  /**
   * UserRegion findUniqueOrThrow
   */
  export type UserRegionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserRegion
     */
    select?: UserRegionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserRegionInclude<ExtArgs> | null
    /**
     * Filter, which UserRegion to fetch.
     */
    where: UserRegionWhereUniqueInput
  }

  /**
   * UserRegion findFirst
   */
  export type UserRegionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserRegion
     */
    select?: UserRegionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserRegionInclude<ExtArgs> | null
    /**
     * Filter, which UserRegion to fetch.
     */
    where?: UserRegionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserRegions to fetch.
     */
    orderBy?: UserRegionOrderByWithRelationInput | UserRegionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserRegions.
     */
    cursor?: UserRegionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserRegions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserRegions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserRegions.
     */
    distinct?: UserRegionScalarFieldEnum | UserRegionScalarFieldEnum[]
  }

  /**
   * UserRegion findFirstOrThrow
   */
  export type UserRegionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserRegion
     */
    select?: UserRegionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserRegionInclude<ExtArgs> | null
    /**
     * Filter, which UserRegion to fetch.
     */
    where?: UserRegionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserRegions to fetch.
     */
    orderBy?: UserRegionOrderByWithRelationInput | UserRegionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserRegions.
     */
    cursor?: UserRegionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserRegions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserRegions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserRegions.
     */
    distinct?: UserRegionScalarFieldEnum | UserRegionScalarFieldEnum[]
  }

  /**
   * UserRegion findMany
   */
  export type UserRegionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserRegion
     */
    select?: UserRegionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserRegionInclude<ExtArgs> | null
    /**
     * Filter, which UserRegions to fetch.
     */
    where?: UserRegionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserRegions to fetch.
     */
    orderBy?: UserRegionOrderByWithRelationInput | UserRegionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UserRegions.
     */
    cursor?: UserRegionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserRegions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserRegions.
     */
    skip?: number
    distinct?: UserRegionScalarFieldEnum | UserRegionScalarFieldEnum[]
  }

  /**
   * UserRegion create
   */
  export type UserRegionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserRegion
     */
    select?: UserRegionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserRegionInclude<ExtArgs> | null
    /**
     * The data needed to create a UserRegion.
     */
    data: XOR<UserRegionCreateInput, UserRegionUncheckedCreateInput>
  }

  /**
   * UserRegion createMany
   */
  export type UserRegionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many UserRegions.
     */
    data: UserRegionCreateManyInput | UserRegionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UserRegion createManyAndReturn
   */
  export type UserRegionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserRegion
     */
    select?: UserRegionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many UserRegions.
     */
    data: UserRegionCreateManyInput | UserRegionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserRegionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * UserRegion update
   */
  export type UserRegionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserRegion
     */
    select?: UserRegionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserRegionInclude<ExtArgs> | null
    /**
     * The data needed to update a UserRegion.
     */
    data: XOR<UserRegionUpdateInput, UserRegionUncheckedUpdateInput>
    /**
     * Choose, which UserRegion to update.
     */
    where: UserRegionWhereUniqueInput
  }

  /**
   * UserRegion updateMany
   */
  export type UserRegionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update UserRegions.
     */
    data: XOR<UserRegionUpdateManyMutationInput, UserRegionUncheckedUpdateManyInput>
    /**
     * Filter which UserRegions to update
     */
    where?: UserRegionWhereInput
  }

  /**
   * UserRegion upsert
   */
  export type UserRegionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserRegion
     */
    select?: UserRegionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserRegionInclude<ExtArgs> | null
    /**
     * The filter to search for the UserRegion to update in case it exists.
     */
    where: UserRegionWhereUniqueInput
    /**
     * In case the UserRegion found by the `where` argument doesn't exist, create a new UserRegion with this data.
     */
    create: XOR<UserRegionCreateInput, UserRegionUncheckedCreateInput>
    /**
     * In case the UserRegion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserRegionUpdateInput, UserRegionUncheckedUpdateInput>
  }

  /**
   * UserRegion delete
   */
  export type UserRegionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserRegion
     */
    select?: UserRegionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserRegionInclude<ExtArgs> | null
    /**
     * Filter which UserRegion to delete.
     */
    where: UserRegionWhereUniqueInput
  }

  /**
   * UserRegion deleteMany
   */
  export type UserRegionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserRegions to delete
     */
    where?: UserRegionWhereInput
  }

  /**
   * UserRegion without action
   */
  export type UserRegionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserRegion
     */
    select?: UserRegionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserRegionInclude<ExtArgs> | null
  }


  /**
   * Model VehicleCategory
   */

  export type AggregateVehicleCategory = {
    _count: VehicleCategoryCountAggregateOutputType | null
    _avg: VehicleCategoryAvgAggregateOutputType | null
    _sum: VehicleCategorySumAggregateOutputType | null
    _min: VehicleCategoryMinAggregateOutputType | null
    _max: VehicleCategoryMaxAggregateOutputType | null
  }

  export type VehicleCategoryAvgAggregateOutputType = {
    sortOrder: number | null
  }

  export type VehicleCategorySumAggregateOutputType = {
    sortOrder: number | null
  }

  export type VehicleCategoryMinAggregateOutputType = {
    id: string | null
    name: string | null
    displayName: string | null
    description: string | null
    iconUrl: string | null
    sortOrder: number | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type VehicleCategoryMaxAggregateOutputType = {
    id: string | null
    name: string | null
    displayName: string | null
    description: string | null
    iconUrl: string | null
    sortOrder: number | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type VehicleCategoryCountAggregateOutputType = {
    id: number
    name: number
    displayName: number
    description: number
    iconUrl: number
    sortOrder: number
    isActive: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type VehicleCategoryAvgAggregateInputType = {
    sortOrder?: true
  }

  export type VehicleCategorySumAggregateInputType = {
    sortOrder?: true
  }

  export type VehicleCategoryMinAggregateInputType = {
    id?: true
    name?: true
    displayName?: true
    description?: true
    iconUrl?: true
    sortOrder?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
  }

  export type VehicleCategoryMaxAggregateInputType = {
    id?: true
    name?: true
    displayName?: true
    description?: true
    iconUrl?: true
    sortOrder?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
  }

  export type VehicleCategoryCountAggregateInputType = {
    id?: true
    name?: true
    displayName?: true
    description?: true
    iconUrl?: true
    sortOrder?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type VehicleCategoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which VehicleCategory to aggregate.
     */
    where?: VehicleCategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VehicleCategories to fetch.
     */
    orderBy?: VehicleCategoryOrderByWithRelationInput | VehicleCategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: VehicleCategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VehicleCategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VehicleCategories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned VehicleCategories
    **/
    _count?: true | VehicleCategoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: VehicleCategoryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: VehicleCategorySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: VehicleCategoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: VehicleCategoryMaxAggregateInputType
  }

  export type GetVehicleCategoryAggregateType<T extends VehicleCategoryAggregateArgs> = {
        [P in keyof T & keyof AggregateVehicleCategory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVehicleCategory[P]>
      : GetScalarType<T[P], AggregateVehicleCategory[P]>
  }




  export type VehicleCategoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VehicleCategoryWhereInput
    orderBy?: VehicleCategoryOrderByWithAggregationInput | VehicleCategoryOrderByWithAggregationInput[]
    by: VehicleCategoryScalarFieldEnum[] | VehicleCategoryScalarFieldEnum
    having?: VehicleCategoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: VehicleCategoryCountAggregateInputType | true
    _avg?: VehicleCategoryAvgAggregateInputType
    _sum?: VehicleCategorySumAggregateInputType
    _min?: VehicleCategoryMinAggregateInputType
    _max?: VehicleCategoryMaxAggregateInputType
  }

  export type VehicleCategoryGroupByOutputType = {
    id: string
    name: string
    displayName: string
    description: string | null
    iconUrl: string | null
    sortOrder: number
    isActive: boolean
    createdAt: Date
    updatedAt: Date
    _count: VehicleCategoryCountAggregateOutputType | null
    _avg: VehicleCategoryAvgAggregateOutputType | null
    _sum: VehicleCategorySumAggregateOutputType | null
    _min: VehicleCategoryMinAggregateOutputType | null
    _max: VehicleCategoryMaxAggregateOutputType | null
  }

  type GetVehicleCategoryGroupByPayload<T extends VehicleCategoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<VehicleCategoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof VehicleCategoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], VehicleCategoryGroupByOutputType[P]>
            : GetScalarType<T[P], VehicleCategoryGroupByOutputType[P]>
        }
      >
    >


  export type VehicleCategorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    displayName?: boolean
    description?: boolean
    iconUrl?: boolean
    sortOrder?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    vehicleTypes?: boolean | VehicleCategory$vehicleTypesArgs<ExtArgs>
    _count?: boolean | VehicleCategoryCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["vehicleCategory"]>

  export type VehicleCategorySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    displayName?: boolean
    description?: boolean
    iconUrl?: boolean
    sortOrder?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["vehicleCategory"]>

  export type VehicleCategorySelectScalar = {
    id?: boolean
    name?: boolean
    displayName?: boolean
    description?: boolean
    iconUrl?: boolean
    sortOrder?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type VehicleCategoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    vehicleTypes?: boolean | VehicleCategory$vehicleTypesArgs<ExtArgs>
    _count?: boolean | VehicleCategoryCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type VehicleCategoryIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $VehicleCategoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "VehicleCategory"
    objects: {
      vehicleTypes: Prisma.$VehicleTypePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      displayName: string
      description: string | null
      iconUrl: string | null
      sortOrder: number
      isActive: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["vehicleCategory"]>
    composites: {}
  }

  type VehicleCategoryGetPayload<S extends boolean | null | undefined | VehicleCategoryDefaultArgs> = $Result.GetResult<Prisma.$VehicleCategoryPayload, S>

  type VehicleCategoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<VehicleCategoryFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: VehicleCategoryCountAggregateInputType | true
    }

  export interface VehicleCategoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['VehicleCategory'], meta: { name: 'VehicleCategory' } }
    /**
     * Find zero or one VehicleCategory that matches the filter.
     * @param {VehicleCategoryFindUniqueArgs} args - Arguments to find a VehicleCategory
     * @example
     * // Get one VehicleCategory
     * const vehicleCategory = await prisma.vehicleCategory.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends VehicleCategoryFindUniqueArgs>(args: SelectSubset<T, VehicleCategoryFindUniqueArgs<ExtArgs>>): Prisma__VehicleCategoryClient<$Result.GetResult<Prisma.$VehicleCategoryPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one VehicleCategory that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {VehicleCategoryFindUniqueOrThrowArgs} args - Arguments to find a VehicleCategory
     * @example
     * // Get one VehicleCategory
     * const vehicleCategory = await prisma.vehicleCategory.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends VehicleCategoryFindUniqueOrThrowArgs>(args: SelectSubset<T, VehicleCategoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__VehicleCategoryClient<$Result.GetResult<Prisma.$VehicleCategoryPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first VehicleCategory that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VehicleCategoryFindFirstArgs} args - Arguments to find a VehicleCategory
     * @example
     * // Get one VehicleCategory
     * const vehicleCategory = await prisma.vehicleCategory.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends VehicleCategoryFindFirstArgs>(args?: SelectSubset<T, VehicleCategoryFindFirstArgs<ExtArgs>>): Prisma__VehicleCategoryClient<$Result.GetResult<Prisma.$VehicleCategoryPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first VehicleCategory that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VehicleCategoryFindFirstOrThrowArgs} args - Arguments to find a VehicleCategory
     * @example
     * // Get one VehicleCategory
     * const vehicleCategory = await prisma.vehicleCategory.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends VehicleCategoryFindFirstOrThrowArgs>(args?: SelectSubset<T, VehicleCategoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__VehicleCategoryClient<$Result.GetResult<Prisma.$VehicleCategoryPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more VehicleCategories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VehicleCategoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all VehicleCategories
     * const vehicleCategories = await prisma.vehicleCategory.findMany()
     * 
     * // Get first 10 VehicleCategories
     * const vehicleCategories = await prisma.vehicleCategory.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const vehicleCategoryWithIdOnly = await prisma.vehicleCategory.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends VehicleCategoryFindManyArgs>(args?: SelectSubset<T, VehicleCategoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VehicleCategoryPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a VehicleCategory.
     * @param {VehicleCategoryCreateArgs} args - Arguments to create a VehicleCategory.
     * @example
     * // Create one VehicleCategory
     * const VehicleCategory = await prisma.vehicleCategory.create({
     *   data: {
     *     // ... data to create a VehicleCategory
     *   }
     * })
     * 
     */
    create<T extends VehicleCategoryCreateArgs>(args: SelectSubset<T, VehicleCategoryCreateArgs<ExtArgs>>): Prisma__VehicleCategoryClient<$Result.GetResult<Prisma.$VehicleCategoryPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many VehicleCategories.
     * @param {VehicleCategoryCreateManyArgs} args - Arguments to create many VehicleCategories.
     * @example
     * // Create many VehicleCategories
     * const vehicleCategory = await prisma.vehicleCategory.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends VehicleCategoryCreateManyArgs>(args?: SelectSubset<T, VehicleCategoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many VehicleCategories and returns the data saved in the database.
     * @param {VehicleCategoryCreateManyAndReturnArgs} args - Arguments to create many VehicleCategories.
     * @example
     * // Create many VehicleCategories
     * const vehicleCategory = await prisma.vehicleCategory.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many VehicleCategories and only return the `id`
     * const vehicleCategoryWithIdOnly = await prisma.vehicleCategory.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends VehicleCategoryCreateManyAndReturnArgs>(args?: SelectSubset<T, VehicleCategoryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VehicleCategoryPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a VehicleCategory.
     * @param {VehicleCategoryDeleteArgs} args - Arguments to delete one VehicleCategory.
     * @example
     * // Delete one VehicleCategory
     * const VehicleCategory = await prisma.vehicleCategory.delete({
     *   where: {
     *     // ... filter to delete one VehicleCategory
     *   }
     * })
     * 
     */
    delete<T extends VehicleCategoryDeleteArgs>(args: SelectSubset<T, VehicleCategoryDeleteArgs<ExtArgs>>): Prisma__VehicleCategoryClient<$Result.GetResult<Prisma.$VehicleCategoryPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one VehicleCategory.
     * @param {VehicleCategoryUpdateArgs} args - Arguments to update one VehicleCategory.
     * @example
     * // Update one VehicleCategory
     * const vehicleCategory = await prisma.vehicleCategory.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends VehicleCategoryUpdateArgs>(args: SelectSubset<T, VehicleCategoryUpdateArgs<ExtArgs>>): Prisma__VehicleCategoryClient<$Result.GetResult<Prisma.$VehicleCategoryPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more VehicleCategories.
     * @param {VehicleCategoryDeleteManyArgs} args - Arguments to filter VehicleCategories to delete.
     * @example
     * // Delete a few VehicleCategories
     * const { count } = await prisma.vehicleCategory.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends VehicleCategoryDeleteManyArgs>(args?: SelectSubset<T, VehicleCategoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more VehicleCategories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VehicleCategoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many VehicleCategories
     * const vehicleCategory = await prisma.vehicleCategory.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends VehicleCategoryUpdateManyArgs>(args: SelectSubset<T, VehicleCategoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one VehicleCategory.
     * @param {VehicleCategoryUpsertArgs} args - Arguments to update or create a VehicleCategory.
     * @example
     * // Update or create a VehicleCategory
     * const vehicleCategory = await prisma.vehicleCategory.upsert({
     *   create: {
     *     // ... data to create a VehicleCategory
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the VehicleCategory we want to update
     *   }
     * })
     */
    upsert<T extends VehicleCategoryUpsertArgs>(args: SelectSubset<T, VehicleCategoryUpsertArgs<ExtArgs>>): Prisma__VehicleCategoryClient<$Result.GetResult<Prisma.$VehicleCategoryPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of VehicleCategories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VehicleCategoryCountArgs} args - Arguments to filter VehicleCategories to count.
     * @example
     * // Count the number of VehicleCategories
     * const count = await prisma.vehicleCategory.count({
     *   where: {
     *     // ... the filter for the VehicleCategories we want to count
     *   }
     * })
    **/
    count<T extends VehicleCategoryCountArgs>(
      args?: Subset<T, VehicleCategoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], VehicleCategoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a VehicleCategory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VehicleCategoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends VehicleCategoryAggregateArgs>(args: Subset<T, VehicleCategoryAggregateArgs>): Prisma.PrismaPromise<GetVehicleCategoryAggregateType<T>>

    /**
     * Group by VehicleCategory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VehicleCategoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends VehicleCategoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: VehicleCategoryGroupByArgs['orderBy'] }
        : { orderBy?: VehicleCategoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, VehicleCategoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVehicleCategoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the VehicleCategory model
   */
  readonly fields: VehicleCategoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for VehicleCategory.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__VehicleCategoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    vehicleTypes<T extends VehicleCategory$vehicleTypesArgs<ExtArgs> = {}>(args?: Subset<T, VehicleCategory$vehicleTypesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VehicleTypePayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the VehicleCategory model
   */ 
  interface VehicleCategoryFieldRefs {
    readonly id: FieldRef<"VehicleCategory", 'String'>
    readonly name: FieldRef<"VehicleCategory", 'String'>
    readonly displayName: FieldRef<"VehicleCategory", 'String'>
    readonly description: FieldRef<"VehicleCategory", 'String'>
    readonly iconUrl: FieldRef<"VehicleCategory", 'String'>
    readonly sortOrder: FieldRef<"VehicleCategory", 'Int'>
    readonly isActive: FieldRef<"VehicleCategory", 'Boolean'>
    readonly createdAt: FieldRef<"VehicleCategory", 'DateTime'>
    readonly updatedAt: FieldRef<"VehicleCategory", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * VehicleCategory findUnique
   */
  export type VehicleCategoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VehicleCategory
     */
    select?: VehicleCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VehicleCategoryInclude<ExtArgs> | null
    /**
     * Filter, which VehicleCategory to fetch.
     */
    where: VehicleCategoryWhereUniqueInput
  }

  /**
   * VehicleCategory findUniqueOrThrow
   */
  export type VehicleCategoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VehicleCategory
     */
    select?: VehicleCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VehicleCategoryInclude<ExtArgs> | null
    /**
     * Filter, which VehicleCategory to fetch.
     */
    where: VehicleCategoryWhereUniqueInput
  }

  /**
   * VehicleCategory findFirst
   */
  export type VehicleCategoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VehicleCategory
     */
    select?: VehicleCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VehicleCategoryInclude<ExtArgs> | null
    /**
     * Filter, which VehicleCategory to fetch.
     */
    where?: VehicleCategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VehicleCategories to fetch.
     */
    orderBy?: VehicleCategoryOrderByWithRelationInput | VehicleCategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for VehicleCategories.
     */
    cursor?: VehicleCategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VehicleCategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VehicleCategories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of VehicleCategories.
     */
    distinct?: VehicleCategoryScalarFieldEnum | VehicleCategoryScalarFieldEnum[]
  }

  /**
   * VehicleCategory findFirstOrThrow
   */
  export type VehicleCategoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VehicleCategory
     */
    select?: VehicleCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VehicleCategoryInclude<ExtArgs> | null
    /**
     * Filter, which VehicleCategory to fetch.
     */
    where?: VehicleCategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VehicleCategories to fetch.
     */
    orderBy?: VehicleCategoryOrderByWithRelationInput | VehicleCategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for VehicleCategories.
     */
    cursor?: VehicleCategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VehicleCategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VehicleCategories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of VehicleCategories.
     */
    distinct?: VehicleCategoryScalarFieldEnum | VehicleCategoryScalarFieldEnum[]
  }

  /**
   * VehicleCategory findMany
   */
  export type VehicleCategoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VehicleCategory
     */
    select?: VehicleCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VehicleCategoryInclude<ExtArgs> | null
    /**
     * Filter, which VehicleCategories to fetch.
     */
    where?: VehicleCategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VehicleCategories to fetch.
     */
    orderBy?: VehicleCategoryOrderByWithRelationInput | VehicleCategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing VehicleCategories.
     */
    cursor?: VehicleCategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VehicleCategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VehicleCategories.
     */
    skip?: number
    distinct?: VehicleCategoryScalarFieldEnum | VehicleCategoryScalarFieldEnum[]
  }

  /**
   * VehicleCategory create
   */
  export type VehicleCategoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VehicleCategory
     */
    select?: VehicleCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VehicleCategoryInclude<ExtArgs> | null
    /**
     * The data needed to create a VehicleCategory.
     */
    data: XOR<VehicleCategoryCreateInput, VehicleCategoryUncheckedCreateInput>
  }

  /**
   * VehicleCategory createMany
   */
  export type VehicleCategoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many VehicleCategories.
     */
    data: VehicleCategoryCreateManyInput | VehicleCategoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * VehicleCategory createManyAndReturn
   */
  export type VehicleCategoryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VehicleCategory
     */
    select?: VehicleCategorySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many VehicleCategories.
     */
    data: VehicleCategoryCreateManyInput | VehicleCategoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * VehicleCategory update
   */
  export type VehicleCategoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VehicleCategory
     */
    select?: VehicleCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VehicleCategoryInclude<ExtArgs> | null
    /**
     * The data needed to update a VehicleCategory.
     */
    data: XOR<VehicleCategoryUpdateInput, VehicleCategoryUncheckedUpdateInput>
    /**
     * Choose, which VehicleCategory to update.
     */
    where: VehicleCategoryWhereUniqueInput
  }

  /**
   * VehicleCategory updateMany
   */
  export type VehicleCategoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update VehicleCategories.
     */
    data: XOR<VehicleCategoryUpdateManyMutationInput, VehicleCategoryUncheckedUpdateManyInput>
    /**
     * Filter which VehicleCategories to update
     */
    where?: VehicleCategoryWhereInput
  }

  /**
   * VehicleCategory upsert
   */
  export type VehicleCategoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VehicleCategory
     */
    select?: VehicleCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VehicleCategoryInclude<ExtArgs> | null
    /**
     * The filter to search for the VehicleCategory to update in case it exists.
     */
    where: VehicleCategoryWhereUniqueInput
    /**
     * In case the VehicleCategory found by the `where` argument doesn't exist, create a new VehicleCategory with this data.
     */
    create: XOR<VehicleCategoryCreateInput, VehicleCategoryUncheckedCreateInput>
    /**
     * In case the VehicleCategory was found with the provided `where` argument, update it with this data.
     */
    update: XOR<VehicleCategoryUpdateInput, VehicleCategoryUncheckedUpdateInput>
  }

  /**
   * VehicleCategory delete
   */
  export type VehicleCategoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VehicleCategory
     */
    select?: VehicleCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VehicleCategoryInclude<ExtArgs> | null
    /**
     * Filter which VehicleCategory to delete.
     */
    where: VehicleCategoryWhereUniqueInput
  }

  /**
   * VehicleCategory deleteMany
   */
  export type VehicleCategoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which VehicleCategories to delete
     */
    where?: VehicleCategoryWhereInput
  }

  /**
   * VehicleCategory.vehicleTypes
   */
  export type VehicleCategory$vehicleTypesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VehicleType
     */
    select?: VehicleTypeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VehicleTypeInclude<ExtArgs> | null
    where?: VehicleTypeWhereInput
    orderBy?: VehicleTypeOrderByWithRelationInput | VehicleTypeOrderByWithRelationInput[]
    cursor?: VehicleTypeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VehicleTypeScalarFieldEnum | VehicleTypeScalarFieldEnum[]
  }

  /**
   * VehicleCategory without action
   */
  export type VehicleCategoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VehicleCategory
     */
    select?: VehicleCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VehicleCategoryInclude<ExtArgs> | null
  }


  /**
   * Model VehicleType
   */

  export type AggregateVehicleType = {
    _count: VehicleTypeCountAggregateOutputType | null
    _avg: VehicleTypeAvgAggregateOutputType | null
    _sum: VehicleTypeSumAggregateOutputType | null
    _min: VehicleTypeMinAggregateOutputType | null
    _max: VehicleTypeMaxAggregateOutputType | null
  }

  export type VehicleTypeAvgAggregateOutputType = {
    sortOrder: number | null
  }

  export type VehicleTypeSumAggregateOutputType = {
    sortOrder: number | null
  }

  export type VehicleTypeMinAggregateOutputType = {
    id: string | null
    categoryId: string | null
    name: string | null
    displayName: string | null
    description: string | null
    iconUrl: string | null
    sortOrder: number | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type VehicleTypeMaxAggregateOutputType = {
    id: string | null
    categoryId: string | null
    name: string | null
    displayName: string | null
    description: string | null
    iconUrl: string | null
    sortOrder: number | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type VehicleTypeCountAggregateOutputType = {
    id: number
    categoryId: number
    name: number
    displayName: number
    description: number
    iconUrl: number
    sortOrder: number
    isActive: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type VehicleTypeAvgAggregateInputType = {
    sortOrder?: true
  }

  export type VehicleTypeSumAggregateInputType = {
    sortOrder?: true
  }

  export type VehicleTypeMinAggregateInputType = {
    id?: true
    categoryId?: true
    name?: true
    displayName?: true
    description?: true
    iconUrl?: true
    sortOrder?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
  }

  export type VehicleTypeMaxAggregateInputType = {
    id?: true
    categoryId?: true
    name?: true
    displayName?: true
    description?: true
    iconUrl?: true
    sortOrder?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
  }

  export type VehicleTypeCountAggregateInputType = {
    id?: true
    categoryId?: true
    name?: true
    displayName?: true
    description?: true
    iconUrl?: true
    sortOrder?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type VehicleTypeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which VehicleType to aggregate.
     */
    where?: VehicleTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VehicleTypes to fetch.
     */
    orderBy?: VehicleTypeOrderByWithRelationInput | VehicleTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: VehicleTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VehicleTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VehicleTypes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned VehicleTypes
    **/
    _count?: true | VehicleTypeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: VehicleTypeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: VehicleTypeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: VehicleTypeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: VehicleTypeMaxAggregateInputType
  }

  export type GetVehicleTypeAggregateType<T extends VehicleTypeAggregateArgs> = {
        [P in keyof T & keyof AggregateVehicleType]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVehicleType[P]>
      : GetScalarType<T[P], AggregateVehicleType[P]>
  }




  export type VehicleTypeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VehicleTypeWhereInput
    orderBy?: VehicleTypeOrderByWithAggregationInput | VehicleTypeOrderByWithAggregationInput[]
    by: VehicleTypeScalarFieldEnum[] | VehicleTypeScalarFieldEnum
    having?: VehicleTypeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: VehicleTypeCountAggregateInputType | true
    _avg?: VehicleTypeAvgAggregateInputType
    _sum?: VehicleTypeSumAggregateInputType
    _min?: VehicleTypeMinAggregateInputType
    _max?: VehicleTypeMaxAggregateInputType
  }

  export type VehicleTypeGroupByOutputType = {
    id: string
    categoryId: string
    name: string
    displayName: string
    description: string | null
    iconUrl: string | null
    sortOrder: number
    isActive: boolean
    createdAt: Date
    updatedAt: Date
    _count: VehicleTypeCountAggregateOutputType | null
    _avg: VehicleTypeAvgAggregateOutputType | null
    _sum: VehicleTypeSumAggregateOutputType | null
    _min: VehicleTypeMinAggregateOutputType | null
    _max: VehicleTypeMaxAggregateOutputType | null
  }

  type GetVehicleTypeGroupByPayload<T extends VehicleTypeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<VehicleTypeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof VehicleTypeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], VehicleTypeGroupByOutputType[P]>
            : GetScalarType<T[P], VehicleTypeGroupByOutputType[P]>
        }
      >
    >


  export type VehicleTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    categoryId?: boolean
    name?: boolean
    displayName?: boolean
    description?: boolean
    iconUrl?: boolean
    sortOrder?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    category?: boolean | VehicleCategoryDefaultArgs<ExtArgs>
    vehicleSubtypes?: boolean | VehicleType$vehicleSubtypesArgs<ExtArgs>
    _count?: boolean | VehicleTypeCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["vehicleType"]>

  export type VehicleTypeSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    categoryId?: boolean
    name?: boolean
    displayName?: boolean
    description?: boolean
    iconUrl?: boolean
    sortOrder?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    category?: boolean | VehicleCategoryDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["vehicleType"]>

  export type VehicleTypeSelectScalar = {
    id?: boolean
    categoryId?: boolean
    name?: boolean
    displayName?: boolean
    description?: boolean
    iconUrl?: boolean
    sortOrder?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type VehicleTypeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    category?: boolean | VehicleCategoryDefaultArgs<ExtArgs>
    vehicleSubtypes?: boolean | VehicleType$vehicleSubtypesArgs<ExtArgs>
    _count?: boolean | VehicleTypeCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type VehicleTypeIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    category?: boolean | VehicleCategoryDefaultArgs<ExtArgs>
  }

  export type $VehicleTypePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "VehicleType"
    objects: {
      category: Prisma.$VehicleCategoryPayload<ExtArgs>
      vehicleSubtypes: Prisma.$VehicleSubtypePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      categoryId: string
      name: string
      displayName: string
      description: string | null
      iconUrl: string | null
      sortOrder: number
      isActive: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["vehicleType"]>
    composites: {}
  }

  type VehicleTypeGetPayload<S extends boolean | null | undefined | VehicleTypeDefaultArgs> = $Result.GetResult<Prisma.$VehicleTypePayload, S>

  type VehicleTypeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<VehicleTypeFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: VehicleTypeCountAggregateInputType | true
    }

  export interface VehicleTypeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['VehicleType'], meta: { name: 'VehicleType' } }
    /**
     * Find zero or one VehicleType that matches the filter.
     * @param {VehicleTypeFindUniqueArgs} args - Arguments to find a VehicleType
     * @example
     * // Get one VehicleType
     * const vehicleType = await prisma.vehicleType.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends VehicleTypeFindUniqueArgs>(args: SelectSubset<T, VehicleTypeFindUniqueArgs<ExtArgs>>): Prisma__VehicleTypeClient<$Result.GetResult<Prisma.$VehicleTypePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one VehicleType that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {VehicleTypeFindUniqueOrThrowArgs} args - Arguments to find a VehicleType
     * @example
     * // Get one VehicleType
     * const vehicleType = await prisma.vehicleType.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends VehicleTypeFindUniqueOrThrowArgs>(args: SelectSubset<T, VehicleTypeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__VehicleTypeClient<$Result.GetResult<Prisma.$VehicleTypePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first VehicleType that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VehicleTypeFindFirstArgs} args - Arguments to find a VehicleType
     * @example
     * // Get one VehicleType
     * const vehicleType = await prisma.vehicleType.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends VehicleTypeFindFirstArgs>(args?: SelectSubset<T, VehicleTypeFindFirstArgs<ExtArgs>>): Prisma__VehicleTypeClient<$Result.GetResult<Prisma.$VehicleTypePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first VehicleType that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VehicleTypeFindFirstOrThrowArgs} args - Arguments to find a VehicleType
     * @example
     * // Get one VehicleType
     * const vehicleType = await prisma.vehicleType.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends VehicleTypeFindFirstOrThrowArgs>(args?: SelectSubset<T, VehicleTypeFindFirstOrThrowArgs<ExtArgs>>): Prisma__VehicleTypeClient<$Result.GetResult<Prisma.$VehicleTypePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more VehicleTypes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VehicleTypeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all VehicleTypes
     * const vehicleTypes = await prisma.vehicleType.findMany()
     * 
     * // Get first 10 VehicleTypes
     * const vehicleTypes = await prisma.vehicleType.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const vehicleTypeWithIdOnly = await prisma.vehicleType.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends VehicleTypeFindManyArgs>(args?: SelectSubset<T, VehicleTypeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VehicleTypePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a VehicleType.
     * @param {VehicleTypeCreateArgs} args - Arguments to create a VehicleType.
     * @example
     * // Create one VehicleType
     * const VehicleType = await prisma.vehicleType.create({
     *   data: {
     *     // ... data to create a VehicleType
     *   }
     * })
     * 
     */
    create<T extends VehicleTypeCreateArgs>(args: SelectSubset<T, VehicleTypeCreateArgs<ExtArgs>>): Prisma__VehicleTypeClient<$Result.GetResult<Prisma.$VehicleTypePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many VehicleTypes.
     * @param {VehicleTypeCreateManyArgs} args - Arguments to create many VehicleTypes.
     * @example
     * // Create many VehicleTypes
     * const vehicleType = await prisma.vehicleType.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends VehicleTypeCreateManyArgs>(args?: SelectSubset<T, VehicleTypeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many VehicleTypes and returns the data saved in the database.
     * @param {VehicleTypeCreateManyAndReturnArgs} args - Arguments to create many VehicleTypes.
     * @example
     * // Create many VehicleTypes
     * const vehicleType = await prisma.vehicleType.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many VehicleTypes and only return the `id`
     * const vehicleTypeWithIdOnly = await prisma.vehicleType.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends VehicleTypeCreateManyAndReturnArgs>(args?: SelectSubset<T, VehicleTypeCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VehicleTypePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a VehicleType.
     * @param {VehicleTypeDeleteArgs} args - Arguments to delete one VehicleType.
     * @example
     * // Delete one VehicleType
     * const VehicleType = await prisma.vehicleType.delete({
     *   where: {
     *     // ... filter to delete one VehicleType
     *   }
     * })
     * 
     */
    delete<T extends VehicleTypeDeleteArgs>(args: SelectSubset<T, VehicleTypeDeleteArgs<ExtArgs>>): Prisma__VehicleTypeClient<$Result.GetResult<Prisma.$VehicleTypePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one VehicleType.
     * @param {VehicleTypeUpdateArgs} args - Arguments to update one VehicleType.
     * @example
     * // Update one VehicleType
     * const vehicleType = await prisma.vehicleType.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends VehicleTypeUpdateArgs>(args: SelectSubset<T, VehicleTypeUpdateArgs<ExtArgs>>): Prisma__VehicleTypeClient<$Result.GetResult<Prisma.$VehicleTypePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more VehicleTypes.
     * @param {VehicleTypeDeleteManyArgs} args - Arguments to filter VehicleTypes to delete.
     * @example
     * // Delete a few VehicleTypes
     * const { count } = await prisma.vehicleType.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends VehicleTypeDeleteManyArgs>(args?: SelectSubset<T, VehicleTypeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more VehicleTypes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VehicleTypeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many VehicleTypes
     * const vehicleType = await prisma.vehicleType.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends VehicleTypeUpdateManyArgs>(args: SelectSubset<T, VehicleTypeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one VehicleType.
     * @param {VehicleTypeUpsertArgs} args - Arguments to update or create a VehicleType.
     * @example
     * // Update or create a VehicleType
     * const vehicleType = await prisma.vehicleType.upsert({
     *   create: {
     *     // ... data to create a VehicleType
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the VehicleType we want to update
     *   }
     * })
     */
    upsert<T extends VehicleTypeUpsertArgs>(args: SelectSubset<T, VehicleTypeUpsertArgs<ExtArgs>>): Prisma__VehicleTypeClient<$Result.GetResult<Prisma.$VehicleTypePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of VehicleTypes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VehicleTypeCountArgs} args - Arguments to filter VehicleTypes to count.
     * @example
     * // Count the number of VehicleTypes
     * const count = await prisma.vehicleType.count({
     *   where: {
     *     // ... the filter for the VehicleTypes we want to count
     *   }
     * })
    **/
    count<T extends VehicleTypeCountArgs>(
      args?: Subset<T, VehicleTypeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], VehicleTypeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a VehicleType.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VehicleTypeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends VehicleTypeAggregateArgs>(args: Subset<T, VehicleTypeAggregateArgs>): Prisma.PrismaPromise<GetVehicleTypeAggregateType<T>>

    /**
     * Group by VehicleType.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VehicleTypeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends VehicleTypeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: VehicleTypeGroupByArgs['orderBy'] }
        : { orderBy?: VehicleTypeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, VehicleTypeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVehicleTypeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the VehicleType model
   */
  readonly fields: VehicleTypeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for VehicleType.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__VehicleTypeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    category<T extends VehicleCategoryDefaultArgs<ExtArgs> = {}>(args?: Subset<T, VehicleCategoryDefaultArgs<ExtArgs>>): Prisma__VehicleCategoryClient<$Result.GetResult<Prisma.$VehicleCategoryPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    vehicleSubtypes<T extends VehicleType$vehicleSubtypesArgs<ExtArgs> = {}>(args?: Subset<T, VehicleType$vehicleSubtypesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VehicleSubtypePayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the VehicleType model
   */ 
  interface VehicleTypeFieldRefs {
    readonly id: FieldRef<"VehicleType", 'String'>
    readonly categoryId: FieldRef<"VehicleType", 'String'>
    readonly name: FieldRef<"VehicleType", 'String'>
    readonly displayName: FieldRef<"VehicleType", 'String'>
    readonly description: FieldRef<"VehicleType", 'String'>
    readonly iconUrl: FieldRef<"VehicleType", 'String'>
    readonly sortOrder: FieldRef<"VehicleType", 'Int'>
    readonly isActive: FieldRef<"VehicleType", 'Boolean'>
    readonly createdAt: FieldRef<"VehicleType", 'DateTime'>
    readonly updatedAt: FieldRef<"VehicleType", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * VehicleType findUnique
   */
  export type VehicleTypeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VehicleType
     */
    select?: VehicleTypeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VehicleTypeInclude<ExtArgs> | null
    /**
     * Filter, which VehicleType to fetch.
     */
    where: VehicleTypeWhereUniqueInput
  }

  /**
   * VehicleType findUniqueOrThrow
   */
  export type VehicleTypeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VehicleType
     */
    select?: VehicleTypeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VehicleTypeInclude<ExtArgs> | null
    /**
     * Filter, which VehicleType to fetch.
     */
    where: VehicleTypeWhereUniqueInput
  }

  /**
   * VehicleType findFirst
   */
  export type VehicleTypeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VehicleType
     */
    select?: VehicleTypeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VehicleTypeInclude<ExtArgs> | null
    /**
     * Filter, which VehicleType to fetch.
     */
    where?: VehicleTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VehicleTypes to fetch.
     */
    orderBy?: VehicleTypeOrderByWithRelationInput | VehicleTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for VehicleTypes.
     */
    cursor?: VehicleTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VehicleTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VehicleTypes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of VehicleTypes.
     */
    distinct?: VehicleTypeScalarFieldEnum | VehicleTypeScalarFieldEnum[]
  }

  /**
   * VehicleType findFirstOrThrow
   */
  export type VehicleTypeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VehicleType
     */
    select?: VehicleTypeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VehicleTypeInclude<ExtArgs> | null
    /**
     * Filter, which VehicleType to fetch.
     */
    where?: VehicleTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VehicleTypes to fetch.
     */
    orderBy?: VehicleTypeOrderByWithRelationInput | VehicleTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for VehicleTypes.
     */
    cursor?: VehicleTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VehicleTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VehicleTypes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of VehicleTypes.
     */
    distinct?: VehicleTypeScalarFieldEnum | VehicleTypeScalarFieldEnum[]
  }

  /**
   * VehicleType findMany
   */
  export type VehicleTypeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VehicleType
     */
    select?: VehicleTypeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VehicleTypeInclude<ExtArgs> | null
    /**
     * Filter, which VehicleTypes to fetch.
     */
    where?: VehicleTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VehicleTypes to fetch.
     */
    orderBy?: VehicleTypeOrderByWithRelationInput | VehicleTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing VehicleTypes.
     */
    cursor?: VehicleTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VehicleTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VehicleTypes.
     */
    skip?: number
    distinct?: VehicleTypeScalarFieldEnum | VehicleTypeScalarFieldEnum[]
  }

  /**
   * VehicleType create
   */
  export type VehicleTypeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VehicleType
     */
    select?: VehicleTypeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VehicleTypeInclude<ExtArgs> | null
    /**
     * The data needed to create a VehicleType.
     */
    data: XOR<VehicleTypeCreateInput, VehicleTypeUncheckedCreateInput>
  }

  /**
   * VehicleType createMany
   */
  export type VehicleTypeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many VehicleTypes.
     */
    data: VehicleTypeCreateManyInput | VehicleTypeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * VehicleType createManyAndReturn
   */
  export type VehicleTypeCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VehicleType
     */
    select?: VehicleTypeSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many VehicleTypes.
     */
    data: VehicleTypeCreateManyInput | VehicleTypeCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VehicleTypeIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * VehicleType update
   */
  export type VehicleTypeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VehicleType
     */
    select?: VehicleTypeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VehicleTypeInclude<ExtArgs> | null
    /**
     * The data needed to update a VehicleType.
     */
    data: XOR<VehicleTypeUpdateInput, VehicleTypeUncheckedUpdateInput>
    /**
     * Choose, which VehicleType to update.
     */
    where: VehicleTypeWhereUniqueInput
  }

  /**
   * VehicleType updateMany
   */
  export type VehicleTypeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update VehicleTypes.
     */
    data: XOR<VehicleTypeUpdateManyMutationInput, VehicleTypeUncheckedUpdateManyInput>
    /**
     * Filter which VehicleTypes to update
     */
    where?: VehicleTypeWhereInput
  }

  /**
   * VehicleType upsert
   */
  export type VehicleTypeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VehicleType
     */
    select?: VehicleTypeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VehicleTypeInclude<ExtArgs> | null
    /**
     * The filter to search for the VehicleType to update in case it exists.
     */
    where: VehicleTypeWhereUniqueInput
    /**
     * In case the VehicleType found by the `where` argument doesn't exist, create a new VehicleType with this data.
     */
    create: XOR<VehicleTypeCreateInput, VehicleTypeUncheckedCreateInput>
    /**
     * In case the VehicleType was found with the provided `where` argument, update it with this data.
     */
    update: XOR<VehicleTypeUpdateInput, VehicleTypeUncheckedUpdateInput>
  }

  /**
   * VehicleType delete
   */
  export type VehicleTypeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VehicleType
     */
    select?: VehicleTypeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VehicleTypeInclude<ExtArgs> | null
    /**
     * Filter which VehicleType to delete.
     */
    where: VehicleTypeWhereUniqueInput
  }

  /**
   * VehicleType deleteMany
   */
  export type VehicleTypeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which VehicleTypes to delete
     */
    where?: VehicleTypeWhereInput
  }

  /**
   * VehicleType.vehicleSubtypes
   */
  export type VehicleType$vehicleSubtypesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VehicleSubtype
     */
    select?: VehicleSubtypeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VehicleSubtypeInclude<ExtArgs> | null
    where?: VehicleSubtypeWhereInput
    orderBy?: VehicleSubtypeOrderByWithRelationInput | VehicleSubtypeOrderByWithRelationInput[]
    cursor?: VehicleSubtypeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VehicleSubtypeScalarFieldEnum | VehicleSubtypeScalarFieldEnum[]
  }

  /**
   * VehicleType without action
   */
  export type VehicleTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VehicleType
     */
    select?: VehicleTypeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VehicleTypeInclude<ExtArgs> | null
  }


  /**
   * Model VehicleSubtype
   */

  export type AggregateVehicleSubtype = {
    _count: VehicleSubtypeCountAggregateOutputType | null
    _avg: VehicleSubtypeAvgAggregateOutputType | null
    _sum: VehicleSubtypeSumAggregateOutputType | null
    _min: VehicleSubtypeMinAggregateOutputType | null
    _max: VehicleSubtypeMaxAggregateOutputType | null
  }

  export type VehicleSubtypeAvgAggregateOutputType = {
    sortOrder: number | null
  }

  export type VehicleSubtypeSumAggregateOutputType = {
    sortOrder: number | null
  }

  export type VehicleSubtypeMinAggregateOutputType = {
    id: string | null
    typeId: string | null
    name: string | null
    displayName: string | null
    description: string | null
    iconUrl: string | null
    sortOrder: number | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type VehicleSubtypeMaxAggregateOutputType = {
    id: string | null
    typeId: string | null
    name: string | null
    displayName: string | null
    description: string | null
    iconUrl: string | null
    sortOrder: number | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type VehicleSubtypeCountAggregateOutputType = {
    id: number
    typeId: number
    name: number
    displayName: number
    description: number
    iconUrl: number
    sortOrder: number
    isActive: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type VehicleSubtypeAvgAggregateInputType = {
    sortOrder?: true
  }

  export type VehicleSubtypeSumAggregateInputType = {
    sortOrder?: true
  }

  export type VehicleSubtypeMinAggregateInputType = {
    id?: true
    typeId?: true
    name?: true
    displayName?: true
    description?: true
    iconUrl?: true
    sortOrder?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
  }

  export type VehicleSubtypeMaxAggregateInputType = {
    id?: true
    typeId?: true
    name?: true
    displayName?: true
    description?: true
    iconUrl?: true
    sortOrder?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
  }

  export type VehicleSubtypeCountAggregateInputType = {
    id?: true
    typeId?: true
    name?: true
    displayName?: true
    description?: true
    iconUrl?: true
    sortOrder?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type VehicleSubtypeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which VehicleSubtype to aggregate.
     */
    where?: VehicleSubtypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VehicleSubtypes to fetch.
     */
    orderBy?: VehicleSubtypeOrderByWithRelationInput | VehicleSubtypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: VehicleSubtypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VehicleSubtypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VehicleSubtypes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned VehicleSubtypes
    **/
    _count?: true | VehicleSubtypeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: VehicleSubtypeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: VehicleSubtypeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: VehicleSubtypeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: VehicleSubtypeMaxAggregateInputType
  }

  export type GetVehicleSubtypeAggregateType<T extends VehicleSubtypeAggregateArgs> = {
        [P in keyof T & keyof AggregateVehicleSubtype]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVehicleSubtype[P]>
      : GetScalarType<T[P], AggregateVehicleSubtype[P]>
  }




  export type VehicleSubtypeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VehicleSubtypeWhereInput
    orderBy?: VehicleSubtypeOrderByWithAggregationInput | VehicleSubtypeOrderByWithAggregationInput[]
    by: VehicleSubtypeScalarFieldEnum[] | VehicleSubtypeScalarFieldEnum
    having?: VehicleSubtypeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: VehicleSubtypeCountAggregateInputType | true
    _avg?: VehicleSubtypeAvgAggregateInputType
    _sum?: VehicleSubtypeSumAggregateInputType
    _min?: VehicleSubtypeMinAggregateInputType
    _max?: VehicleSubtypeMaxAggregateInputType
  }

  export type VehicleSubtypeGroupByOutputType = {
    id: string
    typeId: string
    name: string
    displayName: string
    description: string | null
    iconUrl: string | null
    sortOrder: number
    isActive: boolean
    createdAt: Date
    updatedAt: Date
    _count: VehicleSubtypeCountAggregateOutputType | null
    _avg: VehicleSubtypeAvgAggregateOutputType | null
    _sum: VehicleSubtypeSumAggregateOutputType | null
    _min: VehicleSubtypeMinAggregateOutputType | null
    _max: VehicleSubtypeMaxAggregateOutputType | null
  }

  type GetVehicleSubtypeGroupByPayload<T extends VehicleSubtypeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<VehicleSubtypeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof VehicleSubtypeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], VehicleSubtypeGroupByOutputType[P]>
            : GetScalarType<T[P], VehicleSubtypeGroupByOutputType[P]>
        }
      >
    >


  export type VehicleSubtypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    typeId?: boolean
    name?: boolean
    displayName?: boolean
    description?: boolean
    iconUrl?: boolean
    sortOrder?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    type?: boolean | VehicleTypeDefaultArgs<ExtArgs>
    userVehicles?: boolean | VehicleSubtype$userVehiclesArgs<ExtArgs>
    orders?: boolean | VehicleSubtype$ordersArgs<ExtArgs>
    _count?: boolean | VehicleSubtypeCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["vehicleSubtype"]>

  export type VehicleSubtypeSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    typeId?: boolean
    name?: boolean
    displayName?: boolean
    description?: boolean
    iconUrl?: boolean
    sortOrder?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    type?: boolean | VehicleTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["vehicleSubtype"]>

  export type VehicleSubtypeSelectScalar = {
    id?: boolean
    typeId?: boolean
    name?: boolean
    displayName?: boolean
    description?: boolean
    iconUrl?: boolean
    sortOrder?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type VehicleSubtypeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    type?: boolean | VehicleTypeDefaultArgs<ExtArgs>
    userVehicles?: boolean | VehicleSubtype$userVehiclesArgs<ExtArgs>
    orders?: boolean | VehicleSubtype$ordersArgs<ExtArgs>
    _count?: boolean | VehicleSubtypeCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type VehicleSubtypeIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    type?: boolean | VehicleTypeDefaultArgs<ExtArgs>
  }

  export type $VehicleSubtypePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "VehicleSubtype"
    objects: {
      type: Prisma.$VehicleTypePayload<ExtArgs>
      userVehicles: Prisma.$UserVehiclePayload<ExtArgs>[]
      orders: Prisma.$OrderPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      typeId: string
      name: string
      displayName: string
      description: string | null
      iconUrl: string | null
      sortOrder: number
      isActive: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["vehicleSubtype"]>
    composites: {}
  }

  type VehicleSubtypeGetPayload<S extends boolean | null | undefined | VehicleSubtypeDefaultArgs> = $Result.GetResult<Prisma.$VehicleSubtypePayload, S>

  type VehicleSubtypeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<VehicleSubtypeFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: VehicleSubtypeCountAggregateInputType | true
    }

  export interface VehicleSubtypeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['VehicleSubtype'], meta: { name: 'VehicleSubtype' } }
    /**
     * Find zero or one VehicleSubtype that matches the filter.
     * @param {VehicleSubtypeFindUniqueArgs} args - Arguments to find a VehicleSubtype
     * @example
     * // Get one VehicleSubtype
     * const vehicleSubtype = await prisma.vehicleSubtype.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends VehicleSubtypeFindUniqueArgs>(args: SelectSubset<T, VehicleSubtypeFindUniqueArgs<ExtArgs>>): Prisma__VehicleSubtypeClient<$Result.GetResult<Prisma.$VehicleSubtypePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one VehicleSubtype that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {VehicleSubtypeFindUniqueOrThrowArgs} args - Arguments to find a VehicleSubtype
     * @example
     * // Get one VehicleSubtype
     * const vehicleSubtype = await prisma.vehicleSubtype.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends VehicleSubtypeFindUniqueOrThrowArgs>(args: SelectSubset<T, VehicleSubtypeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__VehicleSubtypeClient<$Result.GetResult<Prisma.$VehicleSubtypePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first VehicleSubtype that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VehicleSubtypeFindFirstArgs} args - Arguments to find a VehicleSubtype
     * @example
     * // Get one VehicleSubtype
     * const vehicleSubtype = await prisma.vehicleSubtype.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends VehicleSubtypeFindFirstArgs>(args?: SelectSubset<T, VehicleSubtypeFindFirstArgs<ExtArgs>>): Prisma__VehicleSubtypeClient<$Result.GetResult<Prisma.$VehicleSubtypePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first VehicleSubtype that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VehicleSubtypeFindFirstOrThrowArgs} args - Arguments to find a VehicleSubtype
     * @example
     * // Get one VehicleSubtype
     * const vehicleSubtype = await prisma.vehicleSubtype.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends VehicleSubtypeFindFirstOrThrowArgs>(args?: SelectSubset<T, VehicleSubtypeFindFirstOrThrowArgs<ExtArgs>>): Prisma__VehicleSubtypeClient<$Result.GetResult<Prisma.$VehicleSubtypePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more VehicleSubtypes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VehicleSubtypeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all VehicleSubtypes
     * const vehicleSubtypes = await prisma.vehicleSubtype.findMany()
     * 
     * // Get first 10 VehicleSubtypes
     * const vehicleSubtypes = await prisma.vehicleSubtype.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const vehicleSubtypeWithIdOnly = await prisma.vehicleSubtype.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends VehicleSubtypeFindManyArgs>(args?: SelectSubset<T, VehicleSubtypeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VehicleSubtypePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a VehicleSubtype.
     * @param {VehicleSubtypeCreateArgs} args - Arguments to create a VehicleSubtype.
     * @example
     * // Create one VehicleSubtype
     * const VehicleSubtype = await prisma.vehicleSubtype.create({
     *   data: {
     *     // ... data to create a VehicleSubtype
     *   }
     * })
     * 
     */
    create<T extends VehicleSubtypeCreateArgs>(args: SelectSubset<T, VehicleSubtypeCreateArgs<ExtArgs>>): Prisma__VehicleSubtypeClient<$Result.GetResult<Prisma.$VehicleSubtypePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many VehicleSubtypes.
     * @param {VehicleSubtypeCreateManyArgs} args - Arguments to create many VehicleSubtypes.
     * @example
     * // Create many VehicleSubtypes
     * const vehicleSubtype = await prisma.vehicleSubtype.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends VehicleSubtypeCreateManyArgs>(args?: SelectSubset<T, VehicleSubtypeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many VehicleSubtypes and returns the data saved in the database.
     * @param {VehicleSubtypeCreateManyAndReturnArgs} args - Arguments to create many VehicleSubtypes.
     * @example
     * // Create many VehicleSubtypes
     * const vehicleSubtype = await prisma.vehicleSubtype.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many VehicleSubtypes and only return the `id`
     * const vehicleSubtypeWithIdOnly = await prisma.vehicleSubtype.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends VehicleSubtypeCreateManyAndReturnArgs>(args?: SelectSubset<T, VehicleSubtypeCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VehicleSubtypePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a VehicleSubtype.
     * @param {VehicleSubtypeDeleteArgs} args - Arguments to delete one VehicleSubtype.
     * @example
     * // Delete one VehicleSubtype
     * const VehicleSubtype = await prisma.vehicleSubtype.delete({
     *   where: {
     *     // ... filter to delete one VehicleSubtype
     *   }
     * })
     * 
     */
    delete<T extends VehicleSubtypeDeleteArgs>(args: SelectSubset<T, VehicleSubtypeDeleteArgs<ExtArgs>>): Prisma__VehicleSubtypeClient<$Result.GetResult<Prisma.$VehicleSubtypePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one VehicleSubtype.
     * @param {VehicleSubtypeUpdateArgs} args - Arguments to update one VehicleSubtype.
     * @example
     * // Update one VehicleSubtype
     * const vehicleSubtype = await prisma.vehicleSubtype.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends VehicleSubtypeUpdateArgs>(args: SelectSubset<T, VehicleSubtypeUpdateArgs<ExtArgs>>): Prisma__VehicleSubtypeClient<$Result.GetResult<Prisma.$VehicleSubtypePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more VehicleSubtypes.
     * @param {VehicleSubtypeDeleteManyArgs} args - Arguments to filter VehicleSubtypes to delete.
     * @example
     * // Delete a few VehicleSubtypes
     * const { count } = await prisma.vehicleSubtype.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends VehicleSubtypeDeleteManyArgs>(args?: SelectSubset<T, VehicleSubtypeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more VehicleSubtypes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VehicleSubtypeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many VehicleSubtypes
     * const vehicleSubtype = await prisma.vehicleSubtype.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends VehicleSubtypeUpdateManyArgs>(args: SelectSubset<T, VehicleSubtypeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one VehicleSubtype.
     * @param {VehicleSubtypeUpsertArgs} args - Arguments to update or create a VehicleSubtype.
     * @example
     * // Update or create a VehicleSubtype
     * const vehicleSubtype = await prisma.vehicleSubtype.upsert({
     *   create: {
     *     // ... data to create a VehicleSubtype
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the VehicleSubtype we want to update
     *   }
     * })
     */
    upsert<T extends VehicleSubtypeUpsertArgs>(args: SelectSubset<T, VehicleSubtypeUpsertArgs<ExtArgs>>): Prisma__VehicleSubtypeClient<$Result.GetResult<Prisma.$VehicleSubtypePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of VehicleSubtypes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VehicleSubtypeCountArgs} args - Arguments to filter VehicleSubtypes to count.
     * @example
     * // Count the number of VehicleSubtypes
     * const count = await prisma.vehicleSubtype.count({
     *   where: {
     *     // ... the filter for the VehicleSubtypes we want to count
     *   }
     * })
    **/
    count<T extends VehicleSubtypeCountArgs>(
      args?: Subset<T, VehicleSubtypeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], VehicleSubtypeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a VehicleSubtype.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VehicleSubtypeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends VehicleSubtypeAggregateArgs>(args: Subset<T, VehicleSubtypeAggregateArgs>): Prisma.PrismaPromise<GetVehicleSubtypeAggregateType<T>>

    /**
     * Group by VehicleSubtype.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VehicleSubtypeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends VehicleSubtypeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: VehicleSubtypeGroupByArgs['orderBy'] }
        : { orderBy?: VehicleSubtypeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, VehicleSubtypeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVehicleSubtypeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the VehicleSubtype model
   */
  readonly fields: VehicleSubtypeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for VehicleSubtype.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__VehicleSubtypeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    type<T extends VehicleTypeDefaultArgs<ExtArgs> = {}>(args?: Subset<T, VehicleTypeDefaultArgs<ExtArgs>>): Prisma__VehicleTypeClient<$Result.GetResult<Prisma.$VehicleTypePayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    userVehicles<T extends VehicleSubtype$userVehiclesArgs<ExtArgs> = {}>(args?: Subset<T, VehicleSubtype$userVehiclesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserVehiclePayload<ExtArgs>, T, "findMany"> | Null>
    orders<T extends VehicleSubtype$ordersArgs<ExtArgs> = {}>(args?: Subset<T, VehicleSubtype$ordersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the VehicleSubtype model
   */ 
  interface VehicleSubtypeFieldRefs {
    readonly id: FieldRef<"VehicleSubtype", 'String'>
    readonly typeId: FieldRef<"VehicleSubtype", 'String'>
    readonly name: FieldRef<"VehicleSubtype", 'String'>
    readonly displayName: FieldRef<"VehicleSubtype", 'String'>
    readonly description: FieldRef<"VehicleSubtype", 'String'>
    readonly iconUrl: FieldRef<"VehicleSubtype", 'String'>
    readonly sortOrder: FieldRef<"VehicleSubtype", 'Int'>
    readonly isActive: FieldRef<"VehicleSubtype", 'Boolean'>
    readonly createdAt: FieldRef<"VehicleSubtype", 'DateTime'>
    readonly updatedAt: FieldRef<"VehicleSubtype", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * VehicleSubtype findUnique
   */
  export type VehicleSubtypeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VehicleSubtype
     */
    select?: VehicleSubtypeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VehicleSubtypeInclude<ExtArgs> | null
    /**
     * Filter, which VehicleSubtype to fetch.
     */
    where: VehicleSubtypeWhereUniqueInput
  }

  /**
   * VehicleSubtype findUniqueOrThrow
   */
  export type VehicleSubtypeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VehicleSubtype
     */
    select?: VehicleSubtypeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VehicleSubtypeInclude<ExtArgs> | null
    /**
     * Filter, which VehicleSubtype to fetch.
     */
    where: VehicleSubtypeWhereUniqueInput
  }

  /**
   * VehicleSubtype findFirst
   */
  export type VehicleSubtypeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VehicleSubtype
     */
    select?: VehicleSubtypeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VehicleSubtypeInclude<ExtArgs> | null
    /**
     * Filter, which VehicleSubtype to fetch.
     */
    where?: VehicleSubtypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VehicleSubtypes to fetch.
     */
    orderBy?: VehicleSubtypeOrderByWithRelationInput | VehicleSubtypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for VehicleSubtypes.
     */
    cursor?: VehicleSubtypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VehicleSubtypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VehicleSubtypes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of VehicleSubtypes.
     */
    distinct?: VehicleSubtypeScalarFieldEnum | VehicleSubtypeScalarFieldEnum[]
  }

  /**
   * VehicleSubtype findFirstOrThrow
   */
  export type VehicleSubtypeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VehicleSubtype
     */
    select?: VehicleSubtypeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VehicleSubtypeInclude<ExtArgs> | null
    /**
     * Filter, which VehicleSubtype to fetch.
     */
    where?: VehicleSubtypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VehicleSubtypes to fetch.
     */
    orderBy?: VehicleSubtypeOrderByWithRelationInput | VehicleSubtypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for VehicleSubtypes.
     */
    cursor?: VehicleSubtypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VehicleSubtypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VehicleSubtypes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of VehicleSubtypes.
     */
    distinct?: VehicleSubtypeScalarFieldEnum | VehicleSubtypeScalarFieldEnum[]
  }

  /**
   * VehicleSubtype findMany
   */
  export type VehicleSubtypeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VehicleSubtype
     */
    select?: VehicleSubtypeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VehicleSubtypeInclude<ExtArgs> | null
    /**
     * Filter, which VehicleSubtypes to fetch.
     */
    where?: VehicleSubtypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VehicleSubtypes to fetch.
     */
    orderBy?: VehicleSubtypeOrderByWithRelationInput | VehicleSubtypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing VehicleSubtypes.
     */
    cursor?: VehicleSubtypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VehicleSubtypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VehicleSubtypes.
     */
    skip?: number
    distinct?: VehicleSubtypeScalarFieldEnum | VehicleSubtypeScalarFieldEnum[]
  }

  /**
   * VehicleSubtype create
   */
  export type VehicleSubtypeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VehicleSubtype
     */
    select?: VehicleSubtypeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VehicleSubtypeInclude<ExtArgs> | null
    /**
     * The data needed to create a VehicleSubtype.
     */
    data: XOR<VehicleSubtypeCreateInput, VehicleSubtypeUncheckedCreateInput>
  }

  /**
   * VehicleSubtype createMany
   */
  export type VehicleSubtypeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many VehicleSubtypes.
     */
    data: VehicleSubtypeCreateManyInput | VehicleSubtypeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * VehicleSubtype createManyAndReturn
   */
  export type VehicleSubtypeCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VehicleSubtype
     */
    select?: VehicleSubtypeSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many VehicleSubtypes.
     */
    data: VehicleSubtypeCreateManyInput | VehicleSubtypeCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VehicleSubtypeIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * VehicleSubtype update
   */
  export type VehicleSubtypeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VehicleSubtype
     */
    select?: VehicleSubtypeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VehicleSubtypeInclude<ExtArgs> | null
    /**
     * The data needed to update a VehicleSubtype.
     */
    data: XOR<VehicleSubtypeUpdateInput, VehicleSubtypeUncheckedUpdateInput>
    /**
     * Choose, which VehicleSubtype to update.
     */
    where: VehicleSubtypeWhereUniqueInput
  }

  /**
   * VehicleSubtype updateMany
   */
  export type VehicleSubtypeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update VehicleSubtypes.
     */
    data: XOR<VehicleSubtypeUpdateManyMutationInput, VehicleSubtypeUncheckedUpdateManyInput>
    /**
     * Filter which VehicleSubtypes to update
     */
    where?: VehicleSubtypeWhereInput
  }

  /**
   * VehicleSubtype upsert
   */
  export type VehicleSubtypeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VehicleSubtype
     */
    select?: VehicleSubtypeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VehicleSubtypeInclude<ExtArgs> | null
    /**
     * The filter to search for the VehicleSubtype to update in case it exists.
     */
    where: VehicleSubtypeWhereUniqueInput
    /**
     * In case the VehicleSubtype found by the `where` argument doesn't exist, create a new VehicleSubtype with this data.
     */
    create: XOR<VehicleSubtypeCreateInput, VehicleSubtypeUncheckedCreateInput>
    /**
     * In case the VehicleSubtype was found with the provided `where` argument, update it with this data.
     */
    update: XOR<VehicleSubtypeUpdateInput, VehicleSubtypeUncheckedUpdateInput>
  }

  /**
   * VehicleSubtype delete
   */
  export type VehicleSubtypeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VehicleSubtype
     */
    select?: VehicleSubtypeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VehicleSubtypeInclude<ExtArgs> | null
    /**
     * Filter which VehicleSubtype to delete.
     */
    where: VehicleSubtypeWhereUniqueInput
  }

  /**
   * VehicleSubtype deleteMany
   */
  export type VehicleSubtypeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which VehicleSubtypes to delete
     */
    where?: VehicleSubtypeWhereInput
  }

  /**
   * VehicleSubtype.userVehicles
   */
  export type VehicleSubtype$userVehiclesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserVehicle
     */
    select?: UserVehicleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserVehicleInclude<ExtArgs> | null
    where?: UserVehicleWhereInput
    orderBy?: UserVehicleOrderByWithRelationInput | UserVehicleOrderByWithRelationInput[]
    cursor?: UserVehicleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserVehicleScalarFieldEnum | UserVehicleScalarFieldEnum[]
  }

  /**
   * VehicleSubtype.orders
   */
  export type VehicleSubtype$ordersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    where?: OrderWhereInput
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    cursor?: OrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * VehicleSubtype without action
   */
  export type VehicleSubtypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VehicleSubtype
     */
    select?: VehicleSubtypeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VehicleSubtypeInclude<ExtArgs> | null
  }


  /**
   * Model UserVehicle
   */

  export type AggregateUserVehicle = {
    _count: UserVehicleCountAggregateOutputType | null
    _avg: UserVehicleAvgAggregateOutputType | null
    _sum: UserVehicleSumAggregateOutputType | null
    _min: UserVehicleMinAggregateOutputType | null
    _max: UserVehicleMaxAggregateOutputType | null
  }

  export type UserVehicleAvgAggregateOutputType = {
    year: number | null
    loadCapacity: Decimal | null
    volumeCapacity: Decimal | null
  }

  export type UserVehicleSumAggregateOutputType = {
    year: number | null
    loadCapacity: Decimal | null
    volumeCapacity: Decimal | null
  }

  export type UserVehicleMinAggregateOutputType = {
    id: string | null
    userId: string | null
    subtypeId: string | null
    brand: string | null
    model: string | null
    year: number | null
    licensePlate: string | null
    color: string | null
    loadCapacity: Decimal | null
    volumeCapacity: Decimal | null
    hasRefrigerator: boolean | null
    hasLifting: boolean | null
    canCarryFragile: boolean | null
    isActive: boolean | null
    isVerified: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserVehicleMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    subtypeId: string | null
    brand: string | null
    model: string | null
    year: number | null
    licensePlate: string | null
    color: string | null
    loadCapacity: Decimal | null
    volumeCapacity: Decimal | null
    hasRefrigerator: boolean | null
    hasLifting: boolean | null
    canCarryFragile: boolean | null
    isActive: boolean | null
    isVerified: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserVehicleCountAggregateOutputType = {
    id: number
    userId: number
    subtypeId: number
    brand: number
    model: number
    year: number
    licensePlate: number
    color: number
    loadCapacity: number
    volumeCapacity: number
    hasRefrigerator: number
    hasLifting: number
    canCarryFragile: number
    photos: number
    documents: number
    isActive: number
    isVerified: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type UserVehicleAvgAggregateInputType = {
    year?: true
    loadCapacity?: true
    volumeCapacity?: true
  }

  export type UserVehicleSumAggregateInputType = {
    year?: true
    loadCapacity?: true
    volumeCapacity?: true
  }

  export type UserVehicleMinAggregateInputType = {
    id?: true
    userId?: true
    subtypeId?: true
    brand?: true
    model?: true
    year?: true
    licensePlate?: true
    color?: true
    loadCapacity?: true
    volumeCapacity?: true
    hasRefrigerator?: true
    hasLifting?: true
    canCarryFragile?: true
    isActive?: true
    isVerified?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserVehicleMaxAggregateInputType = {
    id?: true
    userId?: true
    subtypeId?: true
    brand?: true
    model?: true
    year?: true
    licensePlate?: true
    color?: true
    loadCapacity?: true
    volumeCapacity?: true
    hasRefrigerator?: true
    hasLifting?: true
    canCarryFragile?: true
    isActive?: true
    isVerified?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserVehicleCountAggregateInputType = {
    id?: true
    userId?: true
    subtypeId?: true
    brand?: true
    model?: true
    year?: true
    licensePlate?: true
    color?: true
    loadCapacity?: true
    volumeCapacity?: true
    hasRefrigerator?: true
    hasLifting?: true
    canCarryFragile?: true
    photos?: true
    documents?: true
    isActive?: true
    isVerified?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type UserVehicleAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserVehicle to aggregate.
     */
    where?: UserVehicleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserVehicles to fetch.
     */
    orderBy?: UserVehicleOrderByWithRelationInput | UserVehicleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserVehicleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserVehicles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserVehicles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UserVehicles
    **/
    _count?: true | UserVehicleCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserVehicleAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserVehicleSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserVehicleMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserVehicleMaxAggregateInputType
  }

  export type GetUserVehicleAggregateType<T extends UserVehicleAggregateArgs> = {
        [P in keyof T & keyof AggregateUserVehicle]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUserVehicle[P]>
      : GetScalarType<T[P], AggregateUserVehicle[P]>
  }




  export type UserVehicleGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserVehicleWhereInput
    orderBy?: UserVehicleOrderByWithAggregationInput | UserVehicleOrderByWithAggregationInput[]
    by: UserVehicleScalarFieldEnum[] | UserVehicleScalarFieldEnum
    having?: UserVehicleScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserVehicleCountAggregateInputType | true
    _avg?: UserVehicleAvgAggregateInputType
    _sum?: UserVehicleSumAggregateInputType
    _min?: UserVehicleMinAggregateInputType
    _max?: UserVehicleMaxAggregateInputType
  }

  export type UserVehicleGroupByOutputType = {
    id: string
    userId: string
    subtypeId: string
    brand: string | null
    model: string | null
    year: number | null
    licensePlate: string | null
    color: string | null
    loadCapacity: Decimal | null
    volumeCapacity: Decimal | null
    hasRefrigerator: boolean
    hasLifting: boolean
    canCarryFragile: boolean
    photos: JsonValue
    documents: JsonValue
    isActive: boolean
    isVerified: boolean
    createdAt: Date
    updatedAt: Date
    _count: UserVehicleCountAggregateOutputType | null
    _avg: UserVehicleAvgAggregateOutputType | null
    _sum: UserVehicleSumAggregateOutputType | null
    _min: UserVehicleMinAggregateOutputType | null
    _max: UserVehicleMaxAggregateOutputType | null
  }

  type GetUserVehicleGroupByPayload<T extends UserVehicleGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserVehicleGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserVehicleGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserVehicleGroupByOutputType[P]>
            : GetScalarType<T[P], UserVehicleGroupByOutputType[P]>
        }
      >
    >


  export type UserVehicleSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    subtypeId?: boolean
    brand?: boolean
    model?: boolean
    year?: boolean
    licensePlate?: boolean
    color?: boolean
    loadCapacity?: boolean
    volumeCapacity?: boolean
    hasRefrigerator?: boolean
    hasLifting?: boolean
    canCarryFragile?: boolean
    photos?: boolean
    documents?: boolean
    isActive?: boolean
    isVerified?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    subtype?: boolean | VehicleSubtypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userVehicle"]>

  export type UserVehicleSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    subtypeId?: boolean
    brand?: boolean
    model?: boolean
    year?: boolean
    licensePlate?: boolean
    color?: boolean
    loadCapacity?: boolean
    volumeCapacity?: boolean
    hasRefrigerator?: boolean
    hasLifting?: boolean
    canCarryFragile?: boolean
    photos?: boolean
    documents?: boolean
    isActive?: boolean
    isVerified?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    subtype?: boolean | VehicleSubtypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userVehicle"]>

  export type UserVehicleSelectScalar = {
    id?: boolean
    userId?: boolean
    subtypeId?: boolean
    brand?: boolean
    model?: boolean
    year?: boolean
    licensePlate?: boolean
    color?: boolean
    loadCapacity?: boolean
    volumeCapacity?: boolean
    hasRefrigerator?: boolean
    hasLifting?: boolean
    canCarryFragile?: boolean
    photos?: boolean
    documents?: boolean
    isActive?: boolean
    isVerified?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type UserVehicleInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    subtype?: boolean | VehicleSubtypeDefaultArgs<ExtArgs>
  }
  export type UserVehicleIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    subtype?: boolean | VehicleSubtypeDefaultArgs<ExtArgs>
  }

  export type $UserVehiclePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "UserVehicle"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      subtype: Prisma.$VehicleSubtypePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      subtypeId: string
      brand: string | null
      model: string | null
      year: number | null
      licensePlate: string | null
      color: string | null
      loadCapacity: Prisma.Decimal | null
      volumeCapacity: Prisma.Decimal | null
      hasRefrigerator: boolean
      hasLifting: boolean
      canCarryFragile: boolean
      photos: Prisma.JsonValue
      documents: Prisma.JsonValue
      isActive: boolean
      isVerified: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["userVehicle"]>
    composites: {}
  }

  type UserVehicleGetPayload<S extends boolean | null | undefined | UserVehicleDefaultArgs> = $Result.GetResult<Prisma.$UserVehiclePayload, S>

  type UserVehicleCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<UserVehicleFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UserVehicleCountAggregateInputType | true
    }

  export interface UserVehicleDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UserVehicle'], meta: { name: 'UserVehicle' } }
    /**
     * Find zero or one UserVehicle that matches the filter.
     * @param {UserVehicleFindUniqueArgs} args - Arguments to find a UserVehicle
     * @example
     * // Get one UserVehicle
     * const userVehicle = await prisma.userVehicle.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserVehicleFindUniqueArgs>(args: SelectSubset<T, UserVehicleFindUniqueArgs<ExtArgs>>): Prisma__UserVehicleClient<$Result.GetResult<Prisma.$UserVehiclePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one UserVehicle that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {UserVehicleFindUniqueOrThrowArgs} args - Arguments to find a UserVehicle
     * @example
     * // Get one UserVehicle
     * const userVehicle = await prisma.userVehicle.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserVehicleFindUniqueOrThrowArgs>(args: SelectSubset<T, UserVehicleFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserVehicleClient<$Result.GetResult<Prisma.$UserVehiclePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first UserVehicle that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserVehicleFindFirstArgs} args - Arguments to find a UserVehicle
     * @example
     * // Get one UserVehicle
     * const userVehicle = await prisma.userVehicle.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserVehicleFindFirstArgs>(args?: SelectSubset<T, UserVehicleFindFirstArgs<ExtArgs>>): Prisma__UserVehicleClient<$Result.GetResult<Prisma.$UserVehiclePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first UserVehicle that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserVehicleFindFirstOrThrowArgs} args - Arguments to find a UserVehicle
     * @example
     * // Get one UserVehicle
     * const userVehicle = await prisma.userVehicle.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserVehicleFindFirstOrThrowArgs>(args?: SelectSubset<T, UserVehicleFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserVehicleClient<$Result.GetResult<Prisma.$UserVehiclePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more UserVehicles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserVehicleFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UserVehicles
     * const userVehicles = await prisma.userVehicle.findMany()
     * 
     * // Get first 10 UserVehicles
     * const userVehicles = await prisma.userVehicle.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userVehicleWithIdOnly = await prisma.userVehicle.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserVehicleFindManyArgs>(args?: SelectSubset<T, UserVehicleFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserVehiclePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a UserVehicle.
     * @param {UserVehicleCreateArgs} args - Arguments to create a UserVehicle.
     * @example
     * // Create one UserVehicle
     * const UserVehicle = await prisma.userVehicle.create({
     *   data: {
     *     // ... data to create a UserVehicle
     *   }
     * })
     * 
     */
    create<T extends UserVehicleCreateArgs>(args: SelectSubset<T, UserVehicleCreateArgs<ExtArgs>>): Prisma__UserVehicleClient<$Result.GetResult<Prisma.$UserVehiclePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many UserVehicles.
     * @param {UserVehicleCreateManyArgs} args - Arguments to create many UserVehicles.
     * @example
     * // Create many UserVehicles
     * const userVehicle = await prisma.userVehicle.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserVehicleCreateManyArgs>(args?: SelectSubset<T, UserVehicleCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many UserVehicles and returns the data saved in the database.
     * @param {UserVehicleCreateManyAndReturnArgs} args - Arguments to create many UserVehicles.
     * @example
     * // Create many UserVehicles
     * const userVehicle = await prisma.userVehicle.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many UserVehicles and only return the `id`
     * const userVehicleWithIdOnly = await prisma.userVehicle.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserVehicleCreateManyAndReturnArgs>(args?: SelectSubset<T, UserVehicleCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserVehiclePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a UserVehicle.
     * @param {UserVehicleDeleteArgs} args - Arguments to delete one UserVehicle.
     * @example
     * // Delete one UserVehicle
     * const UserVehicle = await prisma.userVehicle.delete({
     *   where: {
     *     // ... filter to delete one UserVehicle
     *   }
     * })
     * 
     */
    delete<T extends UserVehicleDeleteArgs>(args: SelectSubset<T, UserVehicleDeleteArgs<ExtArgs>>): Prisma__UserVehicleClient<$Result.GetResult<Prisma.$UserVehiclePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one UserVehicle.
     * @param {UserVehicleUpdateArgs} args - Arguments to update one UserVehicle.
     * @example
     * // Update one UserVehicle
     * const userVehicle = await prisma.userVehicle.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserVehicleUpdateArgs>(args: SelectSubset<T, UserVehicleUpdateArgs<ExtArgs>>): Prisma__UserVehicleClient<$Result.GetResult<Prisma.$UserVehiclePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more UserVehicles.
     * @param {UserVehicleDeleteManyArgs} args - Arguments to filter UserVehicles to delete.
     * @example
     * // Delete a few UserVehicles
     * const { count } = await prisma.userVehicle.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserVehicleDeleteManyArgs>(args?: SelectSubset<T, UserVehicleDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserVehicles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserVehicleUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UserVehicles
     * const userVehicle = await prisma.userVehicle.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserVehicleUpdateManyArgs>(args: SelectSubset<T, UserVehicleUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one UserVehicle.
     * @param {UserVehicleUpsertArgs} args - Arguments to update or create a UserVehicle.
     * @example
     * // Update or create a UserVehicle
     * const userVehicle = await prisma.userVehicle.upsert({
     *   create: {
     *     // ... data to create a UserVehicle
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UserVehicle we want to update
     *   }
     * })
     */
    upsert<T extends UserVehicleUpsertArgs>(args: SelectSubset<T, UserVehicleUpsertArgs<ExtArgs>>): Prisma__UserVehicleClient<$Result.GetResult<Prisma.$UserVehiclePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of UserVehicles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserVehicleCountArgs} args - Arguments to filter UserVehicles to count.
     * @example
     * // Count the number of UserVehicles
     * const count = await prisma.userVehicle.count({
     *   where: {
     *     // ... the filter for the UserVehicles we want to count
     *   }
     * })
    **/
    count<T extends UserVehicleCountArgs>(
      args?: Subset<T, UserVehicleCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserVehicleCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UserVehicle.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserVehicleAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserVehicleAggregateArgs>(args: Subset<T, UserVehicleAggregateArgs>): Prisma.PrismaPromise<GetUserVehicleAggregateType<T>>

    /**
     * Group by UserVehicle.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserVehicleGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserVehicleGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserVehicleGroupByArgs['orderBy'] }
        : { orderBy?: UserVehicleGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserVehicleGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserVehicleGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the UserVehicle model
   */
  readonly fields: UserVehicleFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for UserVehicle.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserVehicleClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    subtype<T extends VehicleSubtypeDefaultArgs<ExtArgs> = {}>(args?: Subset<T, VehicleSubtypeDefaultArgs<ExtArgs>>): Prisma__VehicleSubtypeClient<$Result.GetResult<Prisma.$VehicleSubtypePayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the UserVehicle model
   */ 
  interface UserVehicleFieldRefs {
    readonly id: FieldRef<"UserVehicle", 'String'>
    readonly userId: FieldRef<"UserVehicle", 'String'>
    readonly subtypeId: FieldRef<"UserVehicle", 'String'>
    readonly brand: FieldRef<"UserVehicle", 'String'>
    readonly model: FieldRef<"UserVehicle", 'String'>
    readonly year: FieldRef<"UserVehicle", 'Int'>
    readonly licensePlate: FieldRef<"UserVehicle", 'String'>
    readonly color: FieldRef<"UserVehicle", 'String'>
    readonly loadCapacity: FieldRef<"UserVehicle", 'Decimal'>
    readonly volumeCapacity: FieldRef<"UserVehicle", 'Decimal'>
    readonly hasRefrigerator: FieldRef<"UserVehicle", 'Boolean'>
    readonly hasLifting: FieldRef<"UserVehicle", 'Boolean'>
    readonly canCarryFragile: FieldRef<"UserVehicle", 'Boolean'>
    readonly photos: FieldRef<"UserVehicle", 'Json'>
    readonly documents: FieldRef<"UserVehicle", 'Json'>
    readonly isActive: FieldRef<"UserVehicle", 'Boolean'>
    readonly isVerified: FieldRef<"UserVehicle", 'Boolean'>
    readonly createdAt: FieldRef<"UserVehicle", 'DateTime'>
    readonly updatedAt: FieldRef<"UserVehicle", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * UserVehicle findUnique
   */
  export type UserVehicleFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserVehicle
     */
    select?: UserVehicleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserVehicleInclude<ExtArgs> | null
    /**
     * Filter, which UserVehicle to fetch.
     */
    where: UserVehicleWhereUniqueInput
  }

  /**
   * UserVehicle findUniqueOrThrow
   */
  export type UserVehicleFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserVehicle
     */
    select?: UserVehicleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserVehicleInclude<ExtArgs> | null
    /**
     * Filter, which UserVehicle to fetch.
     */
    where: UserVehicleWhereUniqueInput
  }

  /**
   * UserVehicle findFirst
   */
  export type UserVehicleFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserVehicle
     */
    select?: UserVehicleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserVehicleInclude<ExtArgs> | null
    /**
     * Filter, which UserVehicle to fetch.
     */
    where?: UserVehicleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserVehicles to fetch.
     */
    orderBy?: UserVehicleOrderByWithRelationInput | UserVehicleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserVehicles.
     */
    cursor?: UserVehicleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserVehicles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserVehicles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserVehicles.
     */
    distinct?: UserVehicleScalarFieldEnum | UserVehicleScalarFieldEnum[]
  }

  /**
   * UserVehicle findFirstOrThrow
   */
  export type UserVehicleFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserVehicle
     */
    select?: UserVehicleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserVehicleInclude<ExtArgs> | null
    /**
     * Filter, which UserVehicle to fetch.
     */
    where?: UserVehicleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserVehicles to fetch.
     */
    orderBy?: UserVehicleOrderByWithRelationInput | UserVehicleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserVehicles.
     */
    cursor?: UserVehicleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserVehicles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserVehicles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserVehicles.
     */
    distinct?: UserVehicleScalarFieldEnum | UserVehicleScalarFieldEnum[]
  }

  /**
   * UserVehicle findMany
   */
  export type UserVehicleFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserVehicle
     */
    select?: UserVehicleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserVehicleInclude<ExtArgs> | null
    /**
     * Filter, which UserVehicles to fetch.
     */
    where?: UserVehicleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserVehicles to fetch.
     */
    orderBy?: UserVehicleOrderByWithRelationInput | UserVehicleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UserVehicles.
     */
    cursor?: UserVehicleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserVehicles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserVehicles.
     */
    skip?: number
    distinct?: UserVehicleScalarFieldEnum | UserVehicleScalarFieldEnum[]
  }

  /**
   * UserVehicle create
   */
  export type UserVehicleCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserVehicle
     */
    select?: UserVehicleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserVehicleInclude<ExtArgs> | null
    /**
     * The data needed to create a UserVehicle.
     */
    data: XOR<UserVehicleCreateInput, UserVehicleUncheckedCreateInput>
  }

  /**
   * UserVehicle createMany
   */
  export type UserVehicleCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many UserVehicles.
     */
    data: UserVehicleCreateManyInput | UserVehicleCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UserVehicle createManyAndReturn
   */
  export type UserVehicleCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserVehicle
     */
    select?: UserVehicleSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many UserVehicles.
     */
    data: UserVehicleCreateManyInput | UserVehicleCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserVehicleIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * UserVehicle update
   */
  export type UserVehicleUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserVehicle
     */
    select?: UserVehicleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserVehicleInclude<ExtArgs> | null
    /**
     * The data needed to update a UserVehicle.
     */
    data: XOR<UserVehicleUpdateInput, UserVehicleUncheckedUpdateInput>
    /**
     * Choose, which UserVehicle to update.
     */
    where: UserVehicleWhereUniqueInput
  }

  /**
   * UserVehicle updateMany
   */
  export type UserVehicleUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update UserVehicles.
     */
    data: XOR<UserVehicleUpdateManyMutationInput, UserVehicleUncheckedUpdateManyInput>
    /**
     * Filter which UserVehicles to update
     */
    where?: UserVehicleWhereInput
  }

  /**
   * UserVehicle upsert
   */
  export type UserVehicleUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserVehicle
     */
    select?: UserVehicleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserVehicleInclude<ExtArgs> | null
    /**
     * The filter to search for the UserVehicle to update in case it exists.
     */
    where: UserVehicleWhereUniqueInput
    /**
     * In case the UserVehicle found by the `where` argument doesn't exist, create a new UserVehicle with this data.
     */
    create: XOR<UserVehicleCreateInput, UserVehicleUncheckedCreateInput>
    /**
     * In case the UserVehicle was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserVehicleUpdateInput, UserVehicleUncheckedUpdateInput>
  }

  /**
   * UserVehicle delete
   */
  export type UserVehicleDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserVehicle
     */
    select?: UserVehicleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserVehicleInclude<ExtArgs> | null
    /**
     * Filter which UserVehicle to delete.
     */
    where: UserVehicleWhereUniqueInput
  }

  /**
   * UserVehicle deleteMany
   */
  export type UserVehicleDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserVehicles to delete
     */
    where?: UserVehicleWhereInput
  }

  /**
   * UserVehicle without action
   */
  export type UserVehicleDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserVehicle
     */
    select?: UserVehicleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserVehicleInclude<ExtArgs> | null
  }


  /**
   * Model Order
   */

  export type AggregateOrder = {
    _count: OrderCountAggregateOutputType | null
    _avg: OrderAvgAggregateOutputType | null
    _sum: OrderSumAggregateOutputType | null
    _min: OrderMinAggregateOutputType | null
    _max: OrderMaxAggregateOutputType | null
  }

  export type OrderAvgAggregateOutputType = {
    pickupLatitude: Decimal | null
    pickupLongitude: Decimal | null
    deliveryLatitude: Decimal | null
    deliveryLongitude: Decimal | null
    budgetFrom: Decimal | null
    budgetTo: Decimal | null
    proposedPrice: Decimal | null
    agreedPrice: Decimal | null
    cargoWeight: Decimal | null
    cargoVolume: Decimal | null
    estimatedDistance: Decimal | null
    passengerCount: number | null
    viewsCount: number | null
    responsesCount: number | null
  }

  export type OrderSumAggregateOutputType = {
    pickupLatitude: Decimal | null
    pickupLongitude: Decimal | null
    deliveryLatitude: Decimal | null
    deliveryLongitude: Decimal | null
    budgetFrom: Decimal | null
    budgetTo: Decimal | null
    proposedPrice: Decimal | null
    agreedPrice: Decimal | null
    cargoWeight: Decimal | null
    cargoVolume: Decimal | null
    estimatedDistance: Decimal | null
    passengerCount: number | null
    viewsCount: number | null
    responsesCount: number | null
  }

  export type OrderMinAggregateOutputType = {
    id: string | null
    orderNumber: string | null
    customerId: string | null
    executorId: string | null
    regionId: string | null
    vehicleSubtypeId: string | null
    type: $Enums.OrderType | null
    title: string | null
    description: string | null
    pickupAddress: string | null
    deliveryAddress: string | null
    workAddress: string | null
    pickupLatitude: Decimal | null
    pickupLongitude: Decimal | null
    deliveryLatitude: Decimal | null
    deliveryLongitude: Decimal | null
    regionCode: string | null
    subRegion: string | null
    scheduledDate: Date | null
    scheduledTime: string | null
    deadlineDate: Date | null
    isUrgent: boolean | null
    budgetFrom: Decimal | null
    budgetTo: Decimal | null
    proposedPrice: Decimal | null
    agreedPrice: Decimal | null
    isPriceFixed: boolean | null
    cargoWeight: Decimal | null
    cargoVolume: Decimal | null
    cargoDescription: string | null
    estimatedDistance: Decimal | null
    needsRefrigerator: boolean | null
    needsLifting: boolean | null
    isFragile: boolean | null
    passengerCount: number | null
    requirements: string | null
    customerComment: string | null
    executorComment: string | null
    status: $Enums.OrderStatus | null
    moderationComment: string | null
    moderatedAt: Date | null
    moderatedById: string | null
    isSentToExecutors: boolean | null
    sentToAllRegions: boolean | null
    viewsCount: number | null
    responsesCount: number | null
    contactPhone: string | null
    contactName: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type OrderMaxAggregateOutputType = {
    id: string | null
    orderNumber: string | null
    customerId: string | null
    executorId: string | null
    regionId: string | null
    vehicleSubtypeId: string | null
    type: $Enums.OrderType | null
    title: string | null
    description: string | null
    pickupAddress: string | null
    deliveryAddress: string | null
    workAddress: string | null
    pickupLatitude: Decimal | null
    pickupLongitude: Decimal | null
    deliveryLatitude: Decimal | null
    deliveryLongitude: Decimal | null
    regionCode: string | null
    subRegion: string | null
    scheduledDate: Date | null
    scheduledTime: string | null
    deadlineDate: Date | null
    isUrgent: boolean | null
    budgetFrom: Decimal | null
    budgetTo: Decimal | null
    proposedPrice: Decimal | null
    agreedPrice: Decimal | null
    isPriceFixed: boolean | null
    cargoWeight: Decimal | null
    cargoVolume: Decimal | null
    cargoDescription: string | null
    estimatedDistance: Decimal | null
    needsRefrigerator: boolean | null
    needsLifting: boolean | null
    isFragile: boolean | null
    passengerCount: number | null
    requirements: string | null
    customerComment: string | null
    executorComment: string | null
    status: $Enums.OrderStatus | null
    moderationComment: string | null
    moderatedAt: Date | null
    moderatedById: string | null
    isSentToExecutors: boolean | null
    sentToAllRegions: boolean | null
    viewsCount: number | null
    responsesCount: number | null
    contactPhone: string | null
    contactName: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type OrderCountAggregateOutputType = {
    id: number
    orderNumber: number
    customerId: number
    executorId: number
    regionId: number
    vehicleSubtypeId: number
    type: number
    title: number
    description: number
    pickupAddress: number
    deliveryAddress: number
    workAddress: number
    pickupLatitude: number
    pickupLongitude: number
    deliveryLatitude: number
    deliveryLongitude: number
    regionCode: number
    subRegion: number
    scheduledDate: number
    scheduledTime: number
    deadlineDate: number
    isUrgent: number
    budgetFrom: number
    budgetTo: number
    proposedPrice: number
    agreedPrice: number
    isPriceFixed: number
    cargoWeight: number
    cargoVolume: number
    cargoDescription: number
    estimatedDistance: number
    needsRefrigerator: number
    needsLifting: number
    isFragile: number
    passengerCount: number
    requirements: number
    customerComment: number
    executorComment: number
    status: number
    moderationComment: number
    moderatedAt: number
    moderatedById: number
    isSentToExecutors: number
    sentToAllRegions: number
    viewsCount: number
    responsesCount: number
    contactPhone: number
    contactName: number
    photos: number
    documents: number
    activityLog: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type OrderAvgAggregateInputType = {
    pickupLatitude?: true
    pickupLongitude?: true
    deliveryLatitude?: true
    deliveryLongitude?: true
    budgetFrom?: true
    budgetTo?: true
    proposedPrice?: true
    agreedPrice?: true
    cargoWeight?: true
    cargoVolume?: true
    estimatedDistance?: true
    passengerCount?: true
    viewsCount?: true
    responsesCount?: true
  }

  export type OrderSumAggregateInputType = {
    pickupLatitude?: true
    pickupLongitude?: true
    deliveryLatitude?: true
    deliveryLongitude?: true
    budgetFrom?: true
    budgetTo?: true
    proposedPrice?: true
    agreedPrice?: true
    cargoWeight?: true
    cargoVolume?: true
    estimatedDistance?: true
    passengerCount?: true
    viewsCount?: true
    responsesCount?: true
  }

  export type OrderMinAggregateInputType = {
    id?: true
    orderNumber?: true
    customerId?: true
    executorId?: true
    regionId?: true
    vehicleSubtypeId?: true
    type?: true
    title?: true
    description?: true
    pickupAddress?: true
    deliveryAddress?: true
    workAddress?: true
    pickupLatitude?: true
    pickupLongitude?: true
    deliveryLatitude?: true
    deliveryLongitude?: true
    regionCode?: true
    subRegion?: true
    scheduledDate?: true
    scheduledTime?: true
    deadlineDate?: true
    isUrgent?: true
    budgetFrom?: true
    budgetTo?: true
    proposedPrice?: true
    agreedPrice?: true
    isPriceFixed?: true
    cargoWeight?: true
    cargoVolume?: true
    cargoDescription?: true
    estimatedDistance?: true
    needsRefrigerator?: true
    needsLifting?: true
    isFragile?: true
    passengerCount?: true
    requirements?: true
    customerComment?: true
    executorComment?: true
    status?: true
    moderationComment?: true
    moderatedAt?: true
    moderatedById?: true
    isSentToExecutors?: true
    sentToAllRegions?: true
    viewsCount?: true
    responsesCount?: true
    contactPhone?: true
    contactName?: true
    createdAt?: true
    updatedAt?: true
  }

  export type OrderMaxAggregateInputType = {
    id?: true
    orderNumber?: true
    customerId?: true
    executorId?: true
    regionId?: true
    vehicleSubtypeId?: true
    type?: true
    title?: true
    description?: true
    pickupAddress?: true
    deliveryAddress?: true
    workAddress?: true
    pickupLatitude?: true
    pickupLongitude?: true
    deliveryLatitude?: true
    deliveryLongitude?: true
    regionCode?: true
    subRegion?: true
    scheduledDate?: true
    scheduledTime?: true
    deadlineDate?: true
    isUrgent?: true
    budgetFrom?: true
    budgetTo?: true
    proposedPrice?: true
    agreedPrice?: true
    isPriceFixed?: true
    cargoWeight?: true
    cargoVolume?: true
    cargoDescription?: true
    estimatedDistance?: true
    needsRefrigerator?: true
    needsLifting?: true
    isFragile?: true
    passengerCount?: true
    requirements?: true
    customerComment?: true
    executorComment?: true
    status?: true
    moderationComment?: true
    moderatedAt?: true
    moderatedById?: true
    isSentToExecutors?: true
    sentToAllRegions?: true
    viewsCount?: true
    responsesCount?: true
    contactPhone?: true
    contactName?: true
    createdAt?: true
    updatedAt?: true
  }

  export type OrderCountAggregateInputType = {
    id?: true
    orderNumber?: true
    customerId?: true
    executorId?: true
    regionId?: true
    vehicleSubtypeId?: true
    type?: true
    title?: true
    description?: true
    pickupAddress?: true
    deliveryAddress?: true
    workAddress?: true
    pickupLatitude?: true
    pickupLongitude?: true
    deliveryLatitude?: true
    deliveryLongitude?: true
    regionCode?: true
    subRegion?: true
    scheduledDate?: true
    scheduledTime?: true
    deadlineDate?: true
    isUrgent?: true
    budgetFrom?: true
    budgetTo?: true
    proposedPrice?: true
    agreedPrice?: true
    isPriceFixed?: true
    cargoWeight?: true
    cargoVolume?: true
    cargoDescription?: true
    estimatedDistance?: true
    needsRefrigerator?: true
    needsLifting?: true
    isFragile?: true
    passengerCount?: true
    requirements?: true
    customerComment?: true
    executorComment?: true
    status?: true
    moderationComment?: true
    moderatedAt?: true
    moderatedById?: true
    isSentToExecutors?: true
    sentToAllRegions?: true
    viewsCount?: true
    responsesCount?: true
    contactPhone?: true
    contactName?: true
    photos?: true
    documents?: true
    activityLog?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type OrderAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Order to aggregate.
     */
    where?: OrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Orders to fetch.
     */
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Orders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Orders
    **/
    _count?: true | OrderCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OrderAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OrderSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OrderMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OrderMaxAggregateInputType
  }

  export type GetOrderAggregateType<T extends OrderAggregateArgs> = {
        [P in keyof T & keyof AggregateOrder]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrder[P]>
      : GetScalarType<T[P], AggregateOrder[P]>
  }




  export type OrderGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderWhereInput
    orderBy?: OrderOrderByWithAggregationInput | OrderOrderByWithAggregationInput[]
    by: OrderScalarFieldEnum[] | OrderScalarFieldEnum
    having?: OrderScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OrderCountAggregateInputType | true
    _avg?: OrderAvgAggregateInputType
    _sum?: OrderSumAggregateInputType
    _min?: OrderMinAggregateInputType
    _max?: OrderMaxAggregateInputType
  }

  export type OrderGroupByOutputType = {
    id: string
    orderNumber: string
    customerId: string
    executorId: string | null
    regionId: string
    vehicleSubtypeId: string | null
    type: $Enums.OrderType
    title: string
    description: string
    pickupAddress: string | null
    deliveryAddress: string | null
    workAddress: string | null
    pickupLatitude: Decimal | null
    pickupLongitude: Decimal | null
    deliveryLatitude: Decimal | null
    deliveryLongitude: Decimal | null
    regionCode: string
    subRegion: string | null
    scheduledDate: Date | null
    scheduledTime: string | null
    deadlineDate: Date | null
    isUrgent: boolean
    budgetFrom: Decimal | null
    budgetTo: Decimal | null
    proposedPrice: Decimal | null
    agreedPrice: Decimal | null
    isPriceFixed: boolean
    cargoWeight: Decimal | null
    cargoVolume: Decimal | null
    cargoDescription: string | null
    estimatedDistance: Decimal | null
    needsRefrigerator: boolean
    needsLifting: boolean
    isFragile: boolean
    passengerCount: number | null
    requirements: string | null
    customerComment: string | null
    executorComment: string | null
    status: $Enums.OrderStatus
    moderationComment: string | null
    moderatedAt: Date | null
    moderatedById: string | null
    isSentToExecutors: boolean
    sentToAllRegions: boolean
    viewsCount: number
    responsesCount: number
    contactPhone: string | null
    contactName: string | null
    photos: JsonValue
    documents: JsonValue
    activityLog: JsonValue
    createdAt: Date
    updatedAt: Date
    _count: OrderCountAggregateOutputType | null
    _avg: OrderAvgAggregateOutputType | null
    _sum: OrderSumAggregateOutputType | null
    _min: OrderMinAggregateOutputType | null
    _max: OrderMaxAggregateOutputType | null
  }

  type GetOrderGroupByPayload<T extends OrderGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OrderGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OrderGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OrderGroupByOutputType[P]>
            : GetScalarType<T[P], OrderGroupByOutputType[P]>
        }
      >
    >


  export type OrderSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderNumber?: boolean
    customerId?: boolean
    executorId?: boolean
    regionId?: boolean
    vehicleSubtypeId?: boolean
    type?: boolean
    title?: boolean
    description?: boolean
    pickupAddress?: boolean
    deliveryAddress?: boolean
    workAddress?: boolean
    pickupLatitude?: boolean
    pickupLongitude?: boolean
    deliveryLatitude?: boolean
    deliveryLongitude?: boolean
    regionCode?: boolean
    subRegion?: boolean
    scheduledDate?: boolean
    scheduledTime?: boolean
    deadlineDate?: boolean
    isUrgent?: boolean
    budgetFrom?: boolean
    budgetTo?: boolean
    proposedPrice?: boolean
    agreedPrice?: boolean
    isPriceFixed?: boolean
    cargoWeight?: boolean
    cargoVolume?: boolean
    cargoDescription?: boolean
    estimatedDistance?: boolean
    needsRefrigerator?: boolean
    needsLifting?: boolean
    isFragile?: boolean
    passengerCount?: boolean
    requirements?: boolean
    customerComment?: boolean
    executorComment?: boolean
    status?: boolean
    moderationComment?: boolean
    moderatedAt?: boolean
    moderatedById?: boolean
    isSentToExecutors?: boolean
    sentToAllRegions?: boolean
    viewsCount?: boolean
    responsesCount?: boolean
    contactPhone?: boolean
    contactName?: boolean
    photos?: boolean
    documents?: boolean
    activityLog?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    customer?: boolean | UserDefaultArgs<ExtArgs>
    executor?: boolean | Order$executorArgs<ExtArgs>
    region?: boolean | RegionDefaultArgs<ExtArgs>
    vehicleSubtype?: boolean | Order$vehicleSubtypeArgs<ExtArgs>
    responses?: boolean | Order$responsesArgs<ExtArgs>
    _count?: boolean | OrderCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["order"]>

  export type OrderSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderNumber?: boolean
    customerId?: boolean
    executorId?: boolean
    regionId?: boolean
    vehicleSubtypeId?: boolean
    type?: boolean
    title?: boolean
    description?: boolean
    pickupAddress?: boolean
    deliveryAddress?: boolean
    workAddress?: boolean
    pickupLatitude?: boolean
    pickupLongitude?: boolean
    deliveryLatitude?: boolean
    deliveryLongitude?: boolean
    regionCode?: boolean
    subRegion?: boolean
    scheduledDate?: boolean
    scheduledTime?: boolean
    deadlineDate?: boolean
    isUrgent?: boolean
    budgetFrom?: boolean
    budgetTo?: boolean
    proposedPrice?: boolean
    agreedPrice?: boolean
    isPriceFixed?: boolean
    cargoWeight?: boolean
    cargoVolume?: boolean
    cargoDescription?: boolean
    estimatedDistance?: boolean
    needsRefrigerator?: boolean
    needsLifting?: boolean
    isFragile?: boolean
    passengerCount?: boolean
    requirements?: boolean
    customerComment?: boolean
    executorComment?: boolean
    status?: boolean
    moderationComment?: boolean
    moderatedAt?: boolean
    moderatedById?: boolean
    isSentToExecutors?: boolean
    sentToAllRegions?: boolean
    viewsCount?: boolean
    responsesCount?: boolean
    contactPhone?: boolean
    contactName?: boolean
    photos?: boolean
    documents?: boolean
    activityLog?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    customer?: boolean | UserDefaultArgs<ExtArgs>
    executor?: boolean | Order$executorArgs<ExtArgs>
    region?: boolean | RegionDefaultArgs<ExtArgs>
    vehicleSubtype?: boolean | Order$vehicleSubtypeArgs<ExtArgs>
  }, ExtArgs["result"]["order"]>

  export type OrderSelectScalar = {
    id?: boolean
    orderNumber?: boolean
    customerId?: boolean
    executorId?: boolean
    regionId?: boolean
    vehicleSubtypeId?: boolean
    type?: boolean
    title?: boolean
    description?: boolean
    pickupAddress?: boolean
    deliveryAddress?: boolean
    workAddress?: boolean
    pickupLatitude?: boolean
    pickupLongitude?: boolean
    deliveryLatitude?: boolean
    deliveryLongitude?: boolean
    regionCode?: boolean
    subRegion?: boolean
    scheduledDate?: boolean
    scheduledTime?: boolean
    deadlineDate?: boolean
    isUrgent?: boolean
    budgetFrom?: boolean
    budgetTo?: boolean
    proposedPrice?: boolean
    agreedPrice?: boolean
    isPriceFixed?: boolean
    cargoWeight?: boolean
    cargoVolume?: boolean
    cargoDescription?: boolean
    estimatedDistance?: boolean
    needsRefrigerator?: boolean
    needsLifting?: boolean
    isFragile?: boolean
    passengerCount?: boolean
    requirements?: boolean
    customerComment?: boolean
    executorComment?: boolean
    status?: boolean
    moderationComment?: boolean
    moderatedAt?: boolean
    moderatedById?: boolean
    isSentToExecutors?: boolean
    sentToAllRegions?: boolean
    viewsCount?: boolean
    responsesCount?: boolean
    contactPhone?: boolean
    contactName?: boolean
    photos?: boolean
    documents?: boolean
    activityLog?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type OrderInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    customer?: boolean | UserDefaultArgs<ExtArgs>
    executor?: boolean | Order$executorArgs<ExtArgs>
    region?: boolean | RegionDefaultArgs<ExtArgs>
    vehicleSubtype?: boolean | Order$vehicleSubtypeArgs<ExtArgs>
    responses?: boolean | Order$responsesArgs<ExtArgs>
    _count?: boolean | OrderCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type OrderIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    customer?: boolean | UserDefaultArgs<ExtArgs>
    executor?: boolean | Order$executorArgs<ExtArgs>
    region?: boolean | RegionDefaultArgs<ExtArgs>
    vehicleSubtype?: boolean | Order$vehicleSubtypeArgs<ExtArgs>
  }

  export type $OrderPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Order"
    objects: {
      customer: Prisma.$UserPayload<ExtArgs>
      executor: Prisma.$UserPayload<ExtArgs> | null
      region: Prisma.$RegionPayload<ExtArgs>
      vehicleSubtype: Prisma.$VehicleSubtypePayload<ExtArgs> | null
      responses: Prisma.$OrderResponsePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      orderNumber: string
      customerId: string
      executorId: string | null
      regionId: string
      vehicleSubtypeId: string | null
      type: $Enums.OrderType
      title: string
      description: string
      pickupAddress: string | null
      deliveryAddress: string | null
      workAddress: string | null
      pickupLatitude: Prisma.Decimal | null
      pickupLongitude: Prisma.Decimal | null
      deliveryLatitude: Prisma.Decimal | null
      deliveryLongitude: Prisma.Decimal | null
      regionCode: string
      subRegion: string | null
      scheduledDate: Date | null
      scheduledTime: string | null
      deadlineDate: Date | null
      isUrgent: boolean
      budgetFrom: Prisma.Decimal | null
      budgetTo: Prisma.Decimal | null
      proposedPrice: Prisma.Decimal | null
      agreedPrice: Prisma.Decimal | null
      isPriceFixed: boolean
      cargoWeight: Prisma.Decimal | null
      cargoVolume: Prisma.Decimal | null
      cargoDescription: string | null
      estimatedDistance: Prisma.Decimal | null
      needsRefrigerator: boolean
      needsLifting: boolean
      isFragile: boolean
      passengerCount: number | null
      requirements: string | null
      customerComment: string | null
      executorComment: string | null
      status: $Enums.OrderStatus
      moderationComment: string | null
      moderatedAt: Date | null
      moderatedById: string | null
      isSentToExecutors: boolean
      sentToAllRegions: boolean
      viewsCount: number
      responsesCount: number
      contactPhone: string | null
      contactName: string | null
      photos: Prisma.JsonValue
      documents: Prisma.JsonValue
      activityLog: Prisma.JsonValue
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["order"]>
    composites: {}
  }

  type OrderGetPayload<S extends boolean | null | undefined | OrderDefaultArgs> = $Result.GetResult<Prisma.$OrderPayload, S>

  type OrderCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<OrderFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: OrderCountAggregateInputType | true
    }

  export interface OrderDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Order'], meta: { name: 'Order' } }
    /**
     * Find zero or one Order that matches the filter.
     * @param {OrderFindUniqueArgs} args - Arguments to find a Order
     * @example
     * // Get one Order
     * const order = await prisma.order.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OrderFindUniqueArgs>(args: SelectSubset<T, OrderFindUniqueArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Order that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {OrderFindUniqueOrThrowArgs} args - Arguments to find a Order
     * @example
     * // Get one Order
     * const order = await prisma.order.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OrderFindUniqueOrThrowArgs>(args: SelectSubset<T, OrderFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Order that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderFindFirstArgs} args - Arguments to find a Order
     * @example
     * // Get one Order
     * const order = await prisma.order.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OrderFindFirstArgs>(args?: SelectSubset<T, OrderFindFirstArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Order that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderFindFirstOrThrowArgs} args - Arguments to find a Order
     * @example
     * // Get one Order
     * const order = await prisma.order.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OrderFindFirstOrThrowArgs>(args?: SelectSubset<T, OrderFindFirstOrThrowArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Orders that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Orders
     * const orders = await prisma.order.findMany()
     * 
     * // Get first 10 Orders
     * const orders = await prisma.order.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const orderWithIdOnly = await prisma.order.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends OrderFindManyArgs>(args?: SelectSubset<T, OrderFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Order.
     * @param {OrderCreateArgs} args - Arguments to create a Order.
     * @example
     * // Create one Order
     * const Order = await prisma.order.create({
     *   data: {
     *     // ... data to create a Order
     *   }
     * })
     * 
     */
    create<T extends OrderCreateArgs>(args: SelectSubset<T, OrderCreateArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Orders.
     * @param {OrderCreateManyArgs} args - Arguments to create many Orders.
     * @example
     * // Create many Orders
     * const order = await prisma.order.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OrderCreateManyArgs>(args?: SelectSubset<T, OrderCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Orders and returns the data saved in the database.
     * @param {OrderCreateManyAndReturnArgs} args - Arguments to create many Orders.
     * @example
     * // Create many Orders
     * const order = await prisma.order.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Orders and only return the `id`
     * const orderWithIdOnly = await prisma.order.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends OrderCreateManyAndReturnArgs>(args?: SelectSubset<T, OrderCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Order.
     * @param {OrderDeleteArgs} args - Arguments to delete one Order.
     * @example
     * // Delete one Order
     * const Order = await prisma.order.delete({
     *   where: {
     *     // ... filter to delete one Order
     *   }
     * })
     * 
     */
    delete<T extends OrderDeleteArgs>(args: SelectSubset<T, OrderDeleteArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Order.
     * @param {OrderUpdateArgs} args - Arguments to update one Order.
     * @example
     * // Update one Order
     * const order = await prisma.order.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OrderUpdateArgs>(args: SelectSubset<T, OrderUpdateArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Orders.
     * @param {OrderDeleteManyArgs} args - Arguments to filter Orders to delete.
     * @example
     * // Delete a few Orders
     * const { count } = await prisma.order.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OrderDeleteManyArgs>(args?: SelectSubset<T, OrderDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Orders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Orders
     * const order = await prisma.order.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OrderUpdateManyArgs>(args: SelectSubset<T, OrderUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Order.
     * @param {OrderUpsertArgs} args - Arguments to update or create a Order.
     * @example
     * // Update or create a Order
     * const order = await prisma.order.upsert({
     *   create: {
     *     // ... data to create a Order
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Order we want to update
     *   }
     * })
     */
    upsert<T extends OrderUpsertArgs>(args: SelectSubset<T, OrderUpsertArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Orders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderCountArgs} args - Arguments to filter Orders to count.
     * @example
     * // Count the number of Orders
     * const count = await prisma.order.count({
     *   where: {
     *     // ... the filter for the Orders we want to count
     *   }
     * })
    **/
    count<T extends OrderCountArgs>(
      args?: Subset<T, OrderCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OrderCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Order.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OrderAggregateArgs>(args: Subset<T, OrderAggregateArgs>): Prisma.PrismaPromise<GetOrderAggregateType<T>>

    /**
     * Group by Order.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OrderGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OrderGroupByArgs['orderBy'] }
        : { orderBy?: OrderGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OrderGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrderGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Order model
   */
  readonly fields: OrderFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Order.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OrderClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    customer<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    executor<T extends Order$executorArgs<ExtArgs> = {}>(args?: Subset<T, Order$executorArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    region<T extends RegionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RegionDefaultArgs<ExtArgs>>): Prisma__RegionClient<$Result.GetResult<Prisma.$RegionPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    vehicleSubtype<T extends Order$vehicleSubtypeArgs<ExtArgs> = {}>(args?: Subset<T, Order$vehicleSubtypeArgs<ExtArgs>>): Prisma__VehicleSubtypeClient<$Result.GetResult<Prisma.$VehicleSubtypePayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    responses<T extends Order$responsesArgs<ExtArgs> = {}>(args?: Subset<T, Order$responsesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderResponsePayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Order model
   */ 
  interface OrderFieldRefs {
    readonly id: FieldRef<"Order", 'String'>
    readonly orderNumber: FieldRef<"Order", 'String'>
    readonly customerId: FieldRef<"Order", 'String'>
    readonly executorId: FieldRef<"Order", 'String'>
    readonly regionId: FieldRef<"Order", 'String'>
    readonly vehicleSubtypeId: FieldRef<"Order", 'String'>
    readonly type: FieldRef<"Order", 'OrderType'>
    readonly title: FieldRef<"Order", 'String'>
    readonly description: FieldRef<"Order", 'String'>
    readonly pickupAddress: FieldRef<"Order", 'String'>
    readonly deliveryAddress: FieldRef<"Order", 'String'>
    readonly workAddress: FieldRef<"Order", 'String'>
    readonly pickupLatitude: FieldRef<"Order", 'Decimal'>
    readonly pickupLongitude: FieldRef<"Order", 'Decimal'>
    readonly deliveryLatitude: FieldRef<"Order", 'Decimal'>
    readonly deliveryLongitude: FieldRef<"Order", 'Decimal'>
    readonly regionCode: FieldRef<"Order", 'String'>
    readonly subRegion: FieldRef<"Order", 'String'>
    readonly scheduledDate: FieldRef<"Order", 'DateTime'>
    readonly scheduledTime: FieldRef<"Order", 'String'>
    readonly deadlineDate: FieldRef<"Order", 'DateTime'>
    readonly isUrgent: FieldRef<"Order", 'Boolean'>
    readonly budgetFrom: FieldRef<"Order", 'Decimal'>
    readonly budgetTo: FieldRef<"Order", 'Decimal'>
    readonly proposedPrice: FieldRef<"Order", 'Decimal'>
    readonly agreedPrice: FieldRef<"Order", 'Decimal'>
    readonly isPriceFixed: FieldRef<"Order", 'Boolean'>
    readonly cargoWeight: FieldRef<"Order", 'Decimal'>
    readonly cargoVolume: FieldRef<"Order", 'Decimal'>
    readonly cargoDescription: FieldRef<"Order", 'String'>
    readonly estimatedDistance: FieldRef<"Order", 'Decimal'>
    readonly needsRefrigerator: FieldRef<"Order", 'Boolean'>
    readonly needsLifting: FieldRef<"Order", 'Boolean'>
    readonly isFragile: FieldRef<"Order", 'Boolean'>
    readonly passengerCount: FieldRef<"Order", 'Int'>
    readonly requirements: FieldRef<"Order", 'String'>
    readonly customerComment: FieldRef<"Order", 'String'>
    readonly executorComment: FieldRef<"Order", 'String'>
    readonly status: FieldRef<"Order", 'OrderStatus'>
    readonly moderationComment: FieldRef<"Order", 'String'>
    readonly moderatedAt: FieldRef<"Order", 'DateTime'>
    readonly moderatedById: FieldRef<"Order", 'String'>
    readonly isSentToExecutors: FieldRef<"Order", 'Boolean'>
    readonly sentToAllRegions: FieldRef<"Order", 'Boolean'>
    readonly viewsCount: FieldRef<"Order", 'Int'>
    readonly responsesCount: FieldRef<"Order", 'Int'>
    readonly contactPhone: FieldRef<"Order", 'String'>
    readonly contactName: FieldRef<"Order", 'String'>
    readonly photos: FieldRef<"Order", 'Json'>
    readonly documents: FieldRef<"Order", 'Json'>
    readonly activityLog: FieldRef<"Order", 'Json'>
    readonly createdAt: FieldRef<"Order", 'DateTime'>
    readonly updatedAt: FieldRef<"Order", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Order findUnique
   */
  export type OrderFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Order to fetch.
     */
    where: OrderWhereUniqueInput
  }

  /**
   * Order findUniqueOrThrow
   */
  export type OrderFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Order to fetch.
     */
    where: OrderWhereUniqueInput
  }

  /**
   * Order findFirst
   */
  export type OrderFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Order to fetch.
     */
    where?: OrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Orders to fetch.
     */
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Orders.
     */
    cursor?: OrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Orders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Orders.
     */
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * Order findFirstOrThrow
   */
  export type OrderFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Order to fetch.
     */
    where?: OrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Orders to fetch.
     */
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Orders.
     */
    cursor?: OrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Orders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Orders.
     */
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * Order findMany
   */
  export type OrderFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Orders to fetch.
     */
    where?: OrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Orders to fetch.
     */
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Orders.
     */
    cursor?: OrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Orders.
     */
    skip?: number
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * Order create
   */
  export type OrderCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * The data needed to create a Order.
     */
    data: XOR<OrderCreateInput, OrderUncheckedCreateInput>
  }

  /**
   * Order createMany
   */
  export type OrderCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Orders.
     */
    data: OrderCreateManyInput | OrderCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Order createManyAndReturn
   */
  export type OrderCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Orders.
     */
    data: OrderCreateManyInput | OrderCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Order update
   */
  export type OrderUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * The data needed to update a Order.
     */
    data: XOR<OrderUpdateInput, OrderUncheckedUpdateInput>
    /**
     * Choose, which Order to update.
     */
    where: OrderWhereUniqueInput
  }

  /**
   * Order updateMany
   */
  export type OrderUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Orders.
     */
    data: XOR<OrderUpdateManyMutationInput, OrderUncheckedUpdateManyInput>
    /**
     * Filter which Orders to update
     */
    where?: OrderWhereInput
  }

  /**
   * Order upsert
   */
  export type OrderUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * The filter to search for the Order to update in case it exists.
     */
    where: OrderWhereUniqueInput
    /**
     * In case the Order found by the `where` argument doesn't exist, create a new Order with this data.
     */
    create: XOR<OrderCreateInput, OrderUncheckedCreateInput>
    /**
     * In case the Order was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OrderUpdateInput, OrderUncheckedUpdateInput>
  }

  /**
   * Order delete
   */
  export type OrderDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter which Order to delete.
     */
    where: OrderWhereUniqueInput
  }

  /**
   * Order deleteMany
   */
  export type OrderDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Orders to delete
     */
    where?: OrderWhereInput
  }

  /**
   * Order.executor
   */
  export type Order$executorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Order.vehicleSubtype
   */
  export type Order$vehicleSubtypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VehicleSubtype
     */
    select?: VehicleSubtypeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VehicleSubtypeInclude<ExtArgs> | null
    where?: VehicleSubtypeWhereInput
  }

  /**
   * Order.responses
   */
  export type Order$responsesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderResponse
     */
    select?: OrderResponseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderResponseInclude<ExtArgs> | null
    where?: OrderResponseWhereInput
    orderBy?: OrderResponseOrderByWithRelationInput | OrderResponseOrderByWithRelationInput[]
    cursor?: OrderResponseWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderResponseScalarFieldEnum | OrderResponseScalarFieldEnum[]
  }

  /**
   * Order without action
   */
  export type OrderDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
  }


  /**
   * Model OrderResponse
   */

  export type AggregateOrderResponse = {
    _count: OrderResponseCountAggregateOutputType | null
    _avg: OrderResponseAvgAggregateOutputType | null
    _sum: OrderResponseSumAggregateOutputType | null
    _min: OrderResponseMinAggregateOutputType | null
    _max: OrderResponseMaxAggregateOutputType | null
  }

  export type OrderResponseAvgAggregateOutputType = {
    proposedPrice: Decimal | null
  }

  export type OrderResponseSumAggregateOutputType = {
    proposedPrice: Decimal | null
  }

  export type OrderResponseMinAggregateOutputType = {
    id: string | null
    orderId: string | null
    executorId: string | null
    proposedPrice: Decimal | null
    comment: string | null
    estimatedDuration: string | null
    status: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type OrderResponseMaxAggregateOutputType = {
    id: string | null
    orderId: string | null
    executorId: string | null
    proposedPrice: Decimal | null
    comment: string | null
    estimatedDuration: string | null
    status: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type OrderResponseCountAggregateOutputType = {
    id: number
    orderId: number
    executorId: number
    proposedPrice: number
    comment: number
    estimatedDuration: number
    status: number
    vehiclePhotos: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type OrderResponseAvgAggregateInputType = {
    proposedPrice?: true
  }

  export type OrderResponseSumAggregateInputType = {
    proposedPrice?: true
  }

  export type OrderResponseMinAggregateInputType = {
    id?: true
    orderId?: true
    executorId?: true
    proposedPrice?: true
    comment?: true
    estimatedDuration?: true
    status?: true
    createdAt?: true
    updatedAt?: true
  }

  export type OrderResponseMaxAggregateInputType = {
    id?: true
    orderId?: true
    executorId?: true
    proposedPrice?: true
    comment?: true
    estimatedDuration?: true
    status?: true
    createdAt?: true
    updatedAt?: true
  }

  export type OrderResponseCountAggregateInputType = {
    id?: true
    orderId?: true
    executorId?: true
    proposedPrice?: true
    comment?: true
    estimatedDuration?: true
    status?: true
    vehiclePhotos?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type OrderResponseAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OrderResponse to aggregate.
     */
    where?: OrderResponseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderResponses to fetch.
     */
    orderBy?: OrderResponseOrderByWithRelationInput | OrderResponseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OrderResponseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderResponses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderResponses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned OrderResponses
    **/
    _count?: true | OrderResponseCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OrderResponseAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OrderResponseSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OrderResponseMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OrderResponseMaxAggregateInputType
  }

  export type GetOrderResponseAggregateType<T extends OrderResponseAggregateArgs> = {
        [P in keyof T & keyof AggregateOrderResponse]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrderResponse[P]>
      : GetScalarType<T[P], AggregateOrderResponse[P]>
  }




  export type OrderResponseGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderResponseWhereInput
    orderBy?: OrderResponseOrderByWithAggregationInput | OrderResponseOrderByWithAggregationInput[]
    by: OrderResponseScalarFieldEnum[] | OrderResponseScalarFieldEnum
    having?: OrderResponseScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OrderResponseCountAggregateInputType | true
    _avg?: OrderResponseAvgAggregateInputType
    _sum?: OrderResponseSumAggregateInputType
    _min?: OrderResponseMinAggregateInputType
    _max?: OrderResponseMaxAggregateInputType
  }

  export type OrderResponseGroupByOutputType = {
    id: string
    orderId: string
    executorId: string
    proposedPrice: Decimal | null
    comment: string | null
    estimatedDuration: string | null
    status: string
    vehiclePhotos: JsonValue
    createdAt: Date
    updatedAt: Date
    _count: OrderResponseCountAggregateOutputType | null
    _avg: OrderResponseAvgAggregateOutputType | null
    _sum: OrderResponseSumAggregateOutputType | null
    _min: OrderResponseMinAggregateOutputType | null
    _max: OrderResponseMaxAggregateOutputType | null
  }

  type GetOrderResponseGroupByPayload<T extends OrderResponseGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OrderResponseGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OrderResponseGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OrderResponseGroupByOutputType[P]>
            : GetScalarType<T[P], OrderResponseGroupByOutputType[P]>
        }
      >
    >


  export type OrderResponseSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    executorId?: boolean
    proposedPrice?: boolean
    comment?: boolean
    estimatedDuration?: boolean
    status?: boolean
    vehiclePhotos?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    order?: boolean | OrderDefaultArgs<ExtArgs>
    executor?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["orderResponse"]>

  export type OrderResponseSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    executorId?: boolean
    proposedPrice?: boolean
    comment?: boolean
    estimatedDuration?: boolean
    status?: boolean
    vehiclePhotos?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    order?: boolean | OrderDefaultArgs<ExtArgs>
    executor?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["orderResponse"]>

  export type OrderResponseSelectScalar = {
    id?: boolean
    orderId?: boolean
    executorId?: boolean
    proposedPrice?: boolean
    comment?: boolean
    estimatedDuration?: boolean
    status?: boolean
    vehiclePhotos?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type OrderResponseInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | OrderDefaultArgs<ExtArgs>
    executor?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type OrderResponseIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | OrderDefaultArgs<ExtArgs>
    executor?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $OrderResponsePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "OrderResponse"
    objects: {
      order: Prisma.$OrderPayload<ExtArgs>
      executor: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      orderId: string
      executorId: string
      proposedPrice: Prisma.Decimal | null
      comment: string | null
      estimatedDuration: string | null
      status: string
      vehiclePhotos: Prisma.JsonValue
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["orderResponse"]>
    composites: {}
  }

  type OrderResponseGetPayload<S extends boolean | null | undefined | OrderResponseDefaultArgs> = $Result.GetResult<Prisma.$OrderResponsePayload, S>

  type OrderResponseCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<OrderResponseFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: OrderResponseCountAggregateInputType | true
    }

  export interface OrderResponseDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['OrderResponse'], meta: { name: 'OrderResponse' } }
    /**
     * Find zero or one OrderResponse that matches the filter.
     * @param {OrderResponseFindUniqueArgs} args - Arguments to find a OrderResponse
     * @example
     * // Get one OrderResponse
     * const orderResponse = await prisma.orderResponse.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OrderResponseFindUniqueArgs>(args: SelectSubset<T, OrderResponseFindUniqueArgs<ExtArgs>>): Prisma__OrderResponseClient<$Result.GetResult<Prisma.$OrderResponsePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one OrderResponse that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {OrderResponseFindUniqueOrThrowArgs} args - Arguments to find a OrderResponse
     * @example
     * // Get one OrderResponse
     * const orderResponse = await prisma.orderResponse.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OrderResponseFindUniqueOrThrowArgs>(args: SelectSubset<T, OrderResponseFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OrderResponseClient<$Result.GetResult<Prisma.$OrderResponsePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first OrderResponse that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderResponseFindFirstArgs} args - Arguments to find a OrderResponse
     * @example
     * // Get one OrderResponse
     * const orderResponse = await prisma.orderResponse.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OrderResponseFindFirstArgs>(args?: SelectSubset<T, OrderResponseFindFirstArgs<ExtArgs>>): Prisma__OrderResponseClient<$Result.GetResult<Prisma.$OrderResponsePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first OrderResponse that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderResponseFindFirstOrThrowArgs} args - Arguments to find a OrderResponse
     * @example
     * // Get one OrderResponse
     * const orderResponse = await prisma.orderResponse.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OrderResponseFindFirstOrThrowArgs>(args?: SelectSubset<T, OrderResponseFindFirstOrThrowArgs<ExtArgs>>): Prisma__OrderResponseClient<$Result.GetResult<Prisma.$OrderResponsePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more OrderResponses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderResponseFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all OrderResponses
     * const orderResponses = await prisma.orderResponse.findMany()
     * 
     * // Get first 10 OrderResponses
     * const orderResponses = await prisma.orderResponse.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const orderResponseWithIdOnly = await prisma.orderResponse.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends OrderResponseFindManyArgs>(args?: SelectSubset<T, OrderResponseFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderResponsePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a OrderResponse.
     * @param {OrderResponseCreateArgs} args - Arguments to create a OrderResponse.
     * @example
     * // Create one OrderResponse
     * const OrderResponse = await prisma.orderResponse.create({
     *   data: {
     *     // ... data to create a OrderResponse
     *   }
     * })
     * 
     */
    create<T extends OrderResponseCreateArgs>(args: SelectSubset<T, OrderResponseCreateArgs<ExtArgs>>): Prisma__OrderResponseClient<$Result.GetResult<Prisma.$OrderResponsePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many OrderResponses.
     * @param {OrderResponseCreateManyArgs} args - Arguments to create many OrderResponses.
     * @example
     * // Create many OrderResponses
     * const orderResponse = await prisma.orderResponse.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OrderResponseCreateManyArgs>(args?: SelectSubset<T, OrderResponseCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many OrderResponses and returns the data saved in the database.
     * @param {OrderResponseCreateManyAndReturnArgs} args - Arguments to create many OrderResponses.
     * @example
     * // Create many OrderResponses
     * const orderResponse = await prisma.orderResponse.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many OrderResponses and only return the `id`
     * const orderResponseWithIdOnly = await prisma.orderResponse.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends OrderResponseCreateManyAndReturnArgs>(args?: SelectSubset<T, OrderResponseCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderResponsePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a OrderResponse.
     * @param {OrderResponseDeleteArgs} args - Arguments to delete one OrderResponse.
     * @example
     * // Delete one OrderResponse
     * const OrderResponse = await prisma.orderResponse.delete({
     *   where: {
     *     // ... filter to delete one OrderResponse
     *   }
     * })
     * 
     */
    delete<T extends OrderResponseDeleteArgs>(args: SelectSubset<T, OrderResponseDeleteArgs<ExtArgs>>): Prisma__OrderResponseClient<$Result.GetResult<Prisma.$OrderResponsePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one OrderResponse.
     * @param {OrderResponseUpdateArgs} args - Arguments to update one OrderResponse.
     * @example
     * // Update one OrderResponse
     * const orderResponse = await prisma.orderResponse.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OrderResponseUpdateArgs>(args: SelectSubset<T, OrderResponseUpdateArgs<ExtArgs>>): Prisma__OrderResponseClient<$Result.GetResult<Prisma.$OrderResponsePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more OrderResponses.
     * @param {OrderResponseDeleteManyArgs} args - Arguments to filter OrderResponses to delete.
     * @example
     * // Delete a few OrderResponses
     * const { count } = await prisma.orderResponse.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OrderResponseDeleteManyArgs>(args?: SelectSubset<T, OrderResponseDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OrderResponses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderResponseUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many OrderResponses
     * const orderResponse = await prisma.orderResponse.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OrderResponseUpdateManyArgs>(args: SelectSubset<T, OrderResponseUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one OrderResponse.
     * @param {OrderResponseUpsertArgs} args - Arguments to update or create a OrderResponse.
     * @example
     * // Update or create a OrderResponse
     * const orderResponse = await prisma.orderResponse.upsert({
     *   create: {
     *     // ... data to create a OrderResponse
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the OrderResponse we want to update
     *   }
     * })
     */
    upsert<T extends OrderResponseUpsertArgs>(args: SelectSubset<T, OrderResponseUpsertArgs<ExtArgs>>): Prisma__OrderResponseClient<$Result.GetResult<Prisma.$OrderResponsePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of OrderResponses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderResponseCountArgs} args - Arguments to filter OrderResponses to count.
     * @example
     * // Count the number of OrderResponses
     * const count = await prisma.orderResponse.count({
     *   where: {
     *     // ... the filter for the OrderResponses we want to count
     *   }
     * })
    **/
    count<T extends OrderResponseCountArgs>(
      args?: Subset<T, OrderResponseCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OrderResponseCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a OrderResponse.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderResponseAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OrderResponseAggregateArgs>(args: Subset<T, OrderResponseAggregateArgs>): Prisma.PrismaPromise<GetOrderResponseAggregateType<T>>

    /**
     * Group by OrderResponse.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderResponseGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OrderResponseGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OrderResponseGroupByArgs['orderBy'] }
        : { orderBy?: OrderResponseGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OrderResponseGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrderResponseGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the OrderResponse model
   */
  readonly fields: OrderResponseFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for OrderResponse.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OrderResponseClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    order<T extends OrderDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrderDefaultArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    executor<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the OrderResponse model
   */ 
  interface OrderResponseFieldRefs {
    readonly id: FieldRef<"OrderResponse", 'String'>
    readonly orderId: FieldRef<"OrderResponse", 'String'>
    readonly executorId: FieldRef<"OrderResponse", 'String'>
    readonly proposedPrice: FieldRef<"OrderResponse", 'Decimal'>
    readonly comment: FieldRef<"OrderResponse", 'String'>
    readonly estimatedDuration: FieldRef<"OrderResponse", 'String'>
    readonly status: FieldRef<"OrderResponse", 'String'>
    readonly vehiclePhotos: FieldRef<"OrderResponse", 'Json'>
    readonly createdAt: FieldRef<"OrderResponse", 'DateTime'>
    readonly updatedAt: FieldRef<"OrderResponse", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * OrderResponse findUnique
   */
  export type OrderResponseFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderResponse
     */
    select?: OrderResponseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderResponseInclude<ExtArgs> | null
    /**
     * Filter, which OrderResponse to fetch.
     */
    where: OrderResponseWhereUniqueInput
  }

  /**
   * OrderResponse findUniqueOrThrow
   */
  export type OrderResponseFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderResponse
     */
    select?: OrderResponseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderResponseInclude<ExtArgs> | null
    /**
     * Filter, which OrderResponse to fetch.
     */
    where: OrderResponseWhereUniqueInput
  }

  /**
   * OrderResponse findFirst
   */
  export type OrderResponseFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderResponse
     */
    select?: OrderResponseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderResponseInclude<ExtArgs> | null
    /**
     * Filter, which OrderResponse to fetch.
     */
    where?: OrderResponseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderResponses to fetch.
     */
    orderBy?: OrderResponseOrderByWithRelationInput | OrderResponseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OrderResponses.
     */
    cursor?: OrderResponseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderResponses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderResponses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OrderResponses.
     */
    distinct?: OrderResponseScalarFieldEnum | OrderResponseScalarFieldEnum[]
  }

  /**
   * OrderResponse findFirstOrThrow
   */
  export type OrderResponseFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderResponse
     */
    select?: OrderResponseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderResponseInclude<ExtArgs> | null
    /**
     * Filter, which OrderResponse to fetch.
     */
    where?: OrderResponseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderResponses to fetch.
     */
    orderBy?: OrderResponseOrderByWithRelationInput | OrderResponseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OrderResponses.
     */
    cursor?: OrderResponseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderResponses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderResponses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OrderResponses.
     */
    distinct?: OrderResponseScalarFieldEnum | OrderResponseScalarFieldEnum[]
  }

  /**
   * OrderResponse findMany
   */
  export type OrderResponseFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderResponse
     */
    select?: OrderResponseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderResponseInclude<ExtArgs> | null
    /**
     * Filter, which OrderResponses to fetch.
     */
    where?: OrderResponseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderResponses to fetch.
     */
    orderBy?: OrderResponseOrderByWithRelationInput | OrderResponseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing OrderResponses.
     */
    cursor?: OrderResponseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderResponses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderResponses.
     */
    skip?: number
    distinct?: OrderResponseScalarFieldEnum | OrderResponseScalarFieldEnum[]
  }

  /**
   * OrderResponse create
   */
  export type OrderResponseCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderResponse
     */
    select?: OrderResponseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderResponseInclude<ExtArgs> | null
    /**
     * The data needed to create a OrderResponse.
     */
    data: XOR<OrderResponseCreateInput, OrderResponseUncheckedCreateInput>
  }

  /**
   * OrderResponse createMany
   */
  export type OrderResponseCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many OrderResponses.
     */
    data: OrderResponseCreateManyInput | OrderResponseCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * OrderResponse createManyAndReturn
   */
  export type OrderResponseCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderResponse
     */
    select?: OrderResponseSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many OrderResponses.
     */
    data: OrderResponseCreateManyInput | OrderResponseCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderResponseIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * OrderResponse update
   */
  export type OrderResponseUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderResponse
     */
    select?: OrderResponseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderResponseInclude<ExtArgs> | null
    /**
     * The data needed to update a OrderResponse.
     */
    data: XOR<OrderResponseUpdateInput, OrderResponseUncheckedUpdateInput>
    /**
     * Choose, which OrderResponse to update.
     */
    where: OrderResponseWhereUniqueInput
  }

  /**
   * OrderResponse updateMany
   */
  export type OrderResponseUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update OrderResponses.
     */
    data: XOR<OrderResponseUpdateManyMutationInput, OrderResponseUncheckedUpdateManyInput>
    /**
     * Filter which OrderResponses to update
     */
    where?: OrderResponseWhereInput
  }

  /**
   * OrderResponse upsert
   */
  export type OrderResponseUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderResponse
     */
    select?: OrderResponseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderResponseInclude<ExtArgs> | null
    /**
     * The filter to search for the OrderResponse to update in case it exists.
     */
    where: OrderResponseWhereUniqueInput
    /**
     * In case the OrderResponse found by the `where` argument doesn't exist, create a new OrderResponse with this data.
     */
    create: XOR<OrderResponseCreateInput, OrderResponseUncheckedCreateInput>
    /**
     * In case the OrderResponse was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OrderResponseUpdateInput, OrderResponseUncheckedUpdateInput>
  }

  /**
   * OrderResponse delete
   */
  export type OrderResponseDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderResponse
     */
    select?: OrderResponseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderResponseInclude<ExtArgs> | null
    /**
     * Filter which OrderResponse to delete.
     */
    where: OrderResponseWhereUniqueInput
  }

  /**
   * OrderResponse deleteMany
   */
  export type OrderResponseDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OrderResponses to delete
     */
    where?: OrderResponseWhereInput
  }

  /**
   * OrderResponse without action
   */
  export type OrderResponseDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderResponse
     */
    select?: OrderResponseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderResponseInclude<ExtArgs> | null
  }


  /**
   * Model Payment
   */

  export type AggregatePayment = {
    _count: PaymentCountAggregateOutputType | null
    _avg: PaymentAvgAggregateOutputType | null
    _sum: PaymentSumAggregateOutputType | null
    _min: PaymentMinAggregateOutputType | null
    _max: PaymentMaxAggregateOutputType | null
  }

  export type PaymentAvgAggregateOutputType = {
    amount: Decimal | null
  }

  export type PaymentSumAggregateOutputType = {
    amount: Decimal | null
  }

  export type PaymentMinAggregateOutputType = {
    id: string | null
    userId: string | null
    tinkoffPaymentId: string | null
    tinkoffStatus: string | null
    amount: Decimal | null
    description: string | null
    status: $Enums.PaymentStatus | null
    paidAt: Date | null
    expiresAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type PaymentMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    tinkoffPaymentId: string | null
    tinkoffStatus: string | null
    amount: Decimal | null
    description: string | null
    status: $Enums.PaymentStatus | null
    paidAt: Date | null
    expiresAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type PaymentCountAggregateOutputType = {
    id: number
    userId: number
    tinkoffPaymentId: number
    tinkoffStatus: number
    amount: number
    description: number
    status: number
    metadata: number
    paidAt: number
    expiresAt: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type PaymentAvgAggregateInputType = {
    amount?: true
  }

  export type PaymentSumAggregateInputType = {
    amount?: true
  }

  export type PaymentMinAggregateInputType = {
    id?: true
    userId?: true
    tinkoffPaymentId?: true
    tinkoffStatus?: true
    amount?: true
    description?: true
    status?: true
    paidAt?: true
    expiresAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type PaymentMaxAggregateInputType = {
    id?: true
    userId?: true
    tinkoffPaymentId?: true
    tinkoffStatus?: true
    amount?: true
    description?: true
    status?: true
    paidAt?: true
    expiresAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type PaymentCountAggregateInputType = {
    id?: true
    userId?: true
    tinkoffPaymentId?: true
    tinkoffStatus?: true
    amount?: true
    description?: true
    status?: true
    metadata?: true
    paidAt?: true
    expiresAt?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type PaymentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Payment to aggregate.
     */
    where?: PaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Payments to fetch.
     */
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Payments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Payments
    **/
    _count?: true | PaymentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PaymentAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PaymentSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PaymentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PaymentMaxAggregateInputType
  }

  export type GetPaymentAggregateType<T extends PaymentAggregateArgs> = {
        [P in keyof T & keyof AggregatePayment]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePayment[P]>
      : GetScalarType<T[P], AggregatePayment[P]>
  }




  export type PaymentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaymentWhereInput
    orderBy?: PaymentOrderByWithAggregationInput | PaymentOrderByWithAggregationInput[]
    by: PaymentScalarFieldEnum[] | PaymentScalarFieldEnum
    having?: PaymentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PaymentCountAggregateInputType | true
    _avg?: PaymentAvgAggregateInputType
    _sum?: PaymentSumAggregateInputType
    _min?: PaymentMinAggregateInputType
    _max?: PaymentMaxAggregateInputType
  }

  export type PaymentGroupByOutputType = {
    id: string
    userId: string
    tinkoffPaymentId: string | null
    tinkoffStatus: string | null
    amount: Decimal
    description: string
    status: $Enums.PaymentStatus
    metadata: JsonValue | null
    paidAt: Date | null
    expiresAt: Date | null
    createdAt: Date
    updatedAt: Date
    _count: PaymentCountAggregateOutputType | null
    _avg: PaymentAvgAggregateOutputType | null
    _sum: PaymentSumAggregateOutputType | null
    _min: PaymentMinAggregateOutputType | null
    _max: PaymentMaxAggregateOutputType | null
  }

  type GetPaymentGroupByPayload<T extends PaymentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PaymentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PaymentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PaymentGroupByOutputType[P]>
            : GetScalarType<T[P], PaymentGroupByOutputType[P]>
        }
      >
    >


  export type PaymentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    tinkoffPaymentId?: boolean
    tinkoffStatus?: boolean
    amount?: boolean
    description?: boolean
    status?: boolean
    metadata?: boolean
    paidAt?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["payment"]>

  export type PaymentSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    tinkoffPaymentId?: boolean
    tinkoffStatus?: boolean
    amount?: boolean
    description?: boolean
    status?: boolean
    metadata?: boolean
    paidAt?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["payment"]>

  export type PaymentSelectScalar = {
    id?: boolean
    userId?: boolean
    tinkoffPaymentId?: boolean
    tinkoffStatus?: boolean
    amount?: boolean
    description?: boolean
    status?: boolean
    metadata?: boolean
    paidAt?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type PaymentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type PaymentIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $PaymentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Payment"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      tinkoffPaymentId: string | null
      tinkoffStatus: string | null
      amount: Prisma.Decimal
      description: string
      status: $Enums.PaymentStatus
      metadata: Prisma.JsonValue | null
      paidAt: Date | null
      expiresAt: Date | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["payment"]>
    composites: {}
  }

  type PaymentGetPayload<S extends boolean | null | undefined | PaymentDefaultArgs> = $Result.GetResult<Prisma.$PaymentPayload, S>

  type PaymentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PaymentFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PaymentCountAggregateInputType | true
    }

  export interface PaymentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Payment'], meta: { name: 'Payment' } }
    /**
     * Find zero or one Payment that matches the filter.
     * @param {PaymentFindUniqueArgs} args - Arguments to find a Payment
     * @example
     * // Get one Payment
     * const payment = await prisma.payment.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PaymentFindUniqueArgs>(args: SelectSubset<T, PaymentFindUniqueArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Payment that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {PaymentFindUniqueOrThrowArgs} args - Arguments to find a Payment
     * @example
     * // Get one Payment
     * const payment = await prisma.payment.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PaymentFindUniqueOrThrowArgs>(args: SelectSubset<T, PaymentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Payment that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentFindFirstArgs} args - Arguments to find a Payment
     * @example
     * // Get one Payment
     * const payment = await prisma.payment.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PaymentFindFirstArgs>(args?: SelectSubset<T, PaymentFindFirstArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Payment that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentFindFirstOrThrowArgs} args - Arguments to find a Payment
     * @example
     * // Get one Payment
     * const payment = await prisma.payment.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PaymentFindFirstOrThrowArgs>(args?: SelectSubset<T, PaymentFindFirstOrThrowArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Payments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Payments
     * const payments = await prisma.payment.findMany()
     * 
     * // Get first 10 Payments
     * const payments = await prisma.payment.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const paymentWithIdOnly = await prisma.payment.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PaymentFindManyArgs>(args?: SelectSubset<T, PaymentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Payment.
     * @param {PaymentCreateArgs} args - Arguments to create a Payment.
     * @example
     * // Create one Payment
     * const Payment = await prisma.payment.create({
     *   data: {
     *     // ... data to create a Payment
     *   }
     * })
     * 
     */
    create<T extends PaymentCreateArgs>(args: SelectSubset<T, PaymentCreateArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Payments.
     * @param {PaymentCreateManyArgs} args - Arguments to create many Payments.
     * @example
     * // Create many Payments
     * const payment = await prisma.payment.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PaymentCreateManyArgs>(args?: SelectSubset<T, PaymentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Payments and returns the data saved in the database.
     * @param {PaymentCreateManyAndReturnArgs} args - Arguments to create many Payments.
     * @example
     * // Create many Payments
     * const payment = await prisma.payment.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Payments and only return the `id`
     * const paymentWithIdOnly = await prisma.payment.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PaymentCreateManyAndReturnArgs>(args?: SelectSubset<T, PaymentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Payment.
     * @param {PaymentDeleteArgs} args - Arguments to delete one Payment.
     * @example
     * // Delete one Payment
     * const Payment = await prisma.payment.delete({
     *   where: {
     *     // ... filter to delete one Payment
     *   }
     * })
     * 
     */
    delete<T extends PaymentDeleteArgs>(args: SelectSubset<T, PaymentDeleteArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Payment.
     * @param {PaymentUpdateArgs} args - Arguments to update one Payment.
     * @example
     * // Update one Payment
     * const payment = await prisma.payment.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PaymentUpdateArgs>(args: SelectSubset<T, PaymentUpdateArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Payments.
     * @param {PaymentDeleteManyArgs} args - Arguments to filter Payments to delete.
     * @example
     * // Delete a few Payments
     * const { count } = await prisma.payment.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PaymentDeleteManyArgs>(args?: SelectSubset<T, PaymentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Payments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Payments
     * const payment = await prisma.payment.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PaymentUpdateManyArgs>(args: SelectSubset<T, PaymentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Payment.
     * @param {PaymentUpsertArgs} args - Arguments to update or create a Payment.
     * @example
     * // Update or create a Payment
     * const payment = await prisma.payment.upsert({
     *   create: {
     *     // ... data to create a Payment
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Payment we want to update
     *   }
     * })
     */
    upsert<T extends PaymentUpsertArgs>(args: SelectSubset<T, PaymentUpsertArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Payments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentCountArgs} args - Arguments to filter Payments to count.
     * @example
     * // Count the number of Payments
     * const count = await prisma.payment.count({
     *   where: {
     *     // ... the filter for the Payments we want to count
     *   }
     * })
    **/
    count<T extends PaymentCountArgs>(
      args?: Subset<T, PaymentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PaymentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Payment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PaymentAggregateArgs>(args: Subset<T, PaymentAggregateArgs>): Prisma.PrismaPromise<GetPaymentAggregateType<T>>

    /**
     * Group by Payment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PaymentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PaymentGroupByArgs['orderBy'] }
        : { orderBy?: PaymentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PaymentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPaymentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Payment model
   */
  readonly fields: PaymentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Payment.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PaymentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Payment model
   */ 
  interface PaymentFieldRefs {
    readonly id: FieldRef<"Payment", 'String'>
    readonly userId: FieldRef<"Payment", 'String'>
    readonly tinkoffPaymentId: FieldRef<"Payment", 'String'>
    readonly tinkoffStatus: FieldRef<"Payment", 'String'>
    readonly amount: FieldRef<"Payment", 'Decimal'>
    readonly description: FieldRef<"Payment", 'String'>
    readonly status: FieldRef<"Payment", 'PaymentStatus'>
    readonly metadata: FieldRef<"Payment", 'Json'>
    readonly paidAt: FieldRef<"Payment", 'DateTime'>
    readonly expiresAt: FieldRef<"Payment", 'DateTime'>
    readonly createdAt: FieldRef<"Payment", 'DateTime'>
    readonly updatedAt: FieldRef<"Payment", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Payment findUnique
   */
  export type PaymentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payment to fetch.
     */
    where: PaymentWhereUniqueInput
  }

  /**
   * Payment findUniqueOrThrow
   */
  export type PaymentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payment to fetch.
     */
    where: PaymentWhereUniqueInput
  }

  /**
   * Payment findFirst
   */
  export type PaymentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payment to fetch.
     */
    where?: PaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Payments to fetch.
     */
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Payments.
     */
    cursor?: PaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Payments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Payments.
     */
    distinct?: PaymentScalarFieldEnum | PaymentScalarFieldEnum[]
  }

  /**
   * Payment findFirstOrThrow
   */
  export type PaymentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payment to fetch.
     */
    where?: PaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Payments to fetch.
     */
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Payments.
     */
    cursor?: PaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Payments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Payments.
     */
    distinct?: PaymentScalarFieldEnum | PaymentScalarFieldEnum[]
  }

  /**
   * Payment findMany
   */
  export type PaymentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payments to fetch.
     */
    where?: PaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Payments to fetch.
     */
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Payments.
     */
    cursor?: PaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Payments.
     */
    skip?: number
    distinct?: PaymentScalarFieldEnum | PaymentScalarFieldEnum[]
  }

  /**
   * Payment create
   */
  export type PaymentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * The data needed to create a Payment.
     */
    data: XOR<PaymentCreateInput, PaymentUncheckedCreateInput>
  }

  /**
   * Payment createMany
   */
  export type PaymentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Payments.
     */
    data: PaymentCreateManyInput | PaymentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Payment createManyAndReturn
   */
  export type PaymentCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Payments.
     */
    data: PaymentCreateManyInput | PaymentCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Payment update
   */
  export type PaymentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * The data needed to update a Payment.
     */
    data: XOR<PaymentUpdateInput, PaymentUncheckedUpdateInput>
    /**
     * Choose, which Payment to update.
     */
    where: PaymentWhereUniqueInput
  }

  /**
   * Payment updateMany
   */
  export type PaymentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Payments.
     */
    data: XOR<PaymentUpdateManyMutationInput, PaymentUncheckedUpdateManyInput>
    /**
     * Filter which Payments to update
     */
    where?: PaymentWhereInput
  }

  /**
   * Payment upsert
   */
  export type PaymentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * The filter to search for the Payment to update in case it exists.
     */
    where: PaymentWhereUniqueInput
    /**
     * In case the Payment found by the `where` argument doesn't exist, create a new Payment with this data.
     */
    create: XOR<PaymentCreateInput, PaymentUncheckedCreateInput>
    /**
     * In case the Payment was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PaymentUpdateInput, PaymentUncheckedUpdateInput>
  }

  /**
   * Payment delete
   */
  export type PaymentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter which Payment to delete.
     */
    where: PaymentWhereUniqueInput
  }

  /**
   * Payment deleteMany
   */
  export type PaymentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Payments to delete
     */
    where?: PaymentWhereInput
  }

  /**
   * Payment without action
   */
  export type PaymentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
  }


  /**
   * Model PaymentTransaction
   */

  export type AggregatePaymentTransaction = {
    _count: PaymentTransactionCountAggregateOutputType | null
    _avg: PaymentTransactionAvgAggregateOutputType | null
    _sum: PaymentTransactionSumAggregateOutputType | null
    _min: PaymentTransactionMinAggregateOutputType | null
    _max: PaymentTransactionMaxAggregateOutputType | null
  }

  export type PaymentTransactionAvgAggregateOutputType = {
    amount: Decimal | null
  }

  export type PaymentTransactionSumAggregateOutputType = {
    amount: Decimal | null
  }

  export type PaymentTransactionMinAggregateOutputType = {
    id: string | null
    userId: string | null
    orderId: string | null
    type: string | null
    amount: Decimal | null
    description: string | null
    status: string | null
    paymentMethod: string | null
    externalId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type PaymentTransactionMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    orderId: string | null
    type: string | null
    amount: Decimal | null
    description: string | null
    status: string | null
    paymentMethod: string | null
    externalId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type PaymentTransactionCountAggregateOutputType = {
    id: number
    userId: number
    orderId: number
    type: number
    amount: number
    description: number
    status: number
    paymentMethod: number
    externalId: number
    metadata: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type PaymentTransactionAvgAggregateInputType = {
    amount?: true
  }

  export type PaymentTransactionSumAggregateInputType = {
    amount?: true
  }

  export type PaymentTransactionMinAggregateInputType = {
    id?: true
    userId?: true
    orderId?: true
    type?: true
    amount?: true
    description?: true
    status?: true
    paymentMethod?: true
    externalId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type PaymentTransactionMaxAggregateInputType = {
    id?: true
    userId?: true
    orderId?: true
    type?: true
    amount?: true
    description?: true
    status?: true
    paymentMethod?: true
    externalId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type PaymentTransactionCountAggregateInputType = {
    id?: true
    userId?: true
    orderId?: true
    type?: true
    amount?: true
    description?: true
    status?: true
    paymentMethod?: true
    externalId?: true
    metadata?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type PaymentTransactionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PaymentTransaction to aggregate.
     */
    where?: PaymentTransactionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentTransactions to fetch.
     */
    orderBy?: PaymentTransactionOrderByWithRelationInput | PaymentTransactionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PaymentTransactionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentTransactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentTransactions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PaymentTransactions
    **/
    _count?: true | PaymentTransactionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PaymentTransactionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PaymentTransactionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PaymentTransactionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PaymentTransactionMaxAggregateInputType
  }

  export type GetPaymentTransactionAggregateType<T extends PaymentTransactionAggregateArgs> = {
        [P in keyof T & keyof AggregatePaymentTransaction]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePaymentTransaction[P]>
      : GetScalarType<T[P], AggregatePaymentTransaction[P]>
  }




  export type PaymentTransactionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaymentTransactionWhereInput
    orderBy?: PaymentTransactionOrderByWithAggregationInput | PaymentTransactionOrderByWithAggregationInput[]
    by: PaymentTransactionScalarFieldEnum[] | PaymentTransactionScalarFieldEnum
    having?: PaymentTransactionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PaymentTransactionCountAggregateInputType | true
    _avg?: PaymentTransactionAvgAggregateInputType
    _sum?: PaymentTransactionSumAggregateInputType
    _min?: PaymentTransactionMinAggregateInputType
    _max?: PaymentTransactionMaxAggregateInputType
  }

  export type PaymentTransactionGroupByOutputType = {
    id: string
    userId: string
    orderId: string | null
    type: string
    amount: Decimal
    description: string
    status: string
    paymentMethod: string | null
    externalId: string | null
    metadata: JsonValue | null
    createdAt: Date
    updatedAt: Date
    _count: PaymentTransactionCountAggregateOutputType | null
    _avg: PaymentTransactionAvgAggregateOutputType | null
    _sum: PaymentTransactionSumAggregateOutputType | null
    _min: PaymentTransactionMinAggregateOutputType | null
    _max: PaymentTransactionMaxAggregateOutputType | null
  }

  type GetPaymentTransactionGroupByPayload<T extends PaymentTransactionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PaymentTransactionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PaymentTransactionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PaymentTransactionGroupByOutputType[P]>
            : GetScalarType<T[P], PaymentTransactionGroupByOutputType[P]>
        }
      >
    >


  export type PaymentTransactionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    orderId?: boolean
    type?: boolean
    amount?: boolean
    description?: boolean
    status?: boolean
    paymentMethod?: boolean
    externalId?: boolean
    metadata?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["paymentTransaction"]>

  export type PaymentTransactionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    orderId?: boolean
    type?: boolean
    amount?: boolean
    description?: boolean
    status?: boolean
    paymentMethod?: boolean
    externalId?: boolean
    metadata?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["paymentTransaction"]>

  export type PaymentTransactionSelectScalar = {
    id?: boolean
    userId?: boolean
    orderId?: boolean
    type?: boolean
    amount?: boolean
    description?: boolean
    status?: boolean
    paymentMethod?: boolean
    externalId?: boolean
    metadata?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type PaymentTransactionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type PaymentTransactionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $PaymentTransactionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PaymentTransaction"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      orderId: string | null
      type: string
      amount: Prisma.Decimal
      description: string
      status: string
      paymentMethod: string | null
      externalId: string | null
      metadata: Prisma.JsonValue | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["paymentTransaction"]>
    composites: {}
  }

  type PaymentTransactionGetPayload<S extends boolean | null | undefined | PaymentTransactionDefaultArgs> = $Result.GetResult<Prisma.$PaymentTransactionPayload, S>

  type PaymentTransactionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PaymentTransactionFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PaymentTransactionCountAggregateInputType | true
    }

  export interface PaymentTransactionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PaymentTransaction'], meta: { name: 'PaymentTransaction' } }
    /**
     * Find zero or one PaymentTransaction that matches the filter.
     * @param {PaymentTransactionFindUniqueArgs} args - Arguments to find a PaymentTransaction
     * @example
     * // Get one PaymentTransaction
     * const paymentTransaction = await prisma.paymentTransaction.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PaymentTransactionFindUniqueArgs>(args: SelectSubset<T, PaymentTransactionFindUniqueArgs<ExtArgs>>): Prisma__PaymentTransactionClient<$Result.GetResult<Prisma.$PaymentTransactionPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one PaymentTransaction that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {PaymentTransactionFindUniqueOrThrowArgs} args - Arguments to find a PaymentTransaction
     * @example
     * // Get one PaymentTransaction
     * const paymentTransaction = await prisma.paymentTransaction.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PaymentTransactionFindUniqueOrThrowArgs>(args: SelectSubset<T, PaymentTransactionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PaymentTransactionClient<$Result.GetResult<Prisma.$PaymentTransactionPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first PaymentTransaction that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentTransactionFindFirstArgs} args - Arguments to find a PaymentTransaction
     * @example
     * // Get one PaymentTransaction
     * const paymentTransaction = await prisma.paymentTransaction.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PaymentTransactionFindFirstArgs>(args?: SelectSubset<T, PaymentTransactionFindFirstArgs<ExtArgs>>): Prisma__PaymentTransactionClient<$Result.GetResult<Prisma.$PaymentTransactionPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first PaymentTransaction that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentTransactionFindFirstOrThrowArgs} args - Arguments to find a PaymentTransaction
     * @example
     * // Get one PaymentTransaction
     * const paymentTransaction = await prisma.paymentTransaction.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PaymentTransactionFindFirstOrThrowArgs>(args?: SelectSubset<T, PaymentTransactionFindFirstOrThrowArgs<ExtArgs>>): Prisma__PaymentTransactionClient<$Result.GetResult<Prisma.$PaymentTransactionPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more PaymentTransactions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentTransactionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PaymentTransactions
     * const paymentTransactions = await prisma.paymentTransaction.findMany()
     * 
     * // Get first 10 PaymentTransactions
     * const paymentTransactions = await prisma.paymentTransaction.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const paymentTransactionWithIdOnly = await prisma.paymentTransaction.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PaymentTransactionFindManyArgs>(args?: SelectSubset<T, PaymentTransactionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentTransactionPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a PaymentTransaction.
     * @param {PaymentTransactionCreateArgs} args - Arguments to create a PaymentTransaction.
     * @example
     * // Create one PaymentTransaction
     * const PaymentTransaction = await prisma.paymentTransaction.create({
     *   data: {
     *     // ... data to create a PaymentTransaction
     *   }
     * })
     * 
     */
    create<T extends PaymentTransactionCreateArgs>(args: SelectSubset<T, PaymentTransactionCreateArgs<ExtArgs>>): Prisma__PaymentTransactionClient<$Result.GetResult<Prisma.$PaymentTransactionPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many PaymentTransactions.
     * @param {PaymentTransactionCreateManyArgs} args - Arguments to create many PaymentTransactions.
     * @example
     * // Create many PaymentTransactions
     * const paymentTransaction = await prisma.paymentTransaction.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PaymentTransactionCreateManyArgs>(args?: SelectSubset<T, PaymentTransactionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PaymentTransactions and returns the data saved in the database.
     * @param {PaymentTransactionCreateManyAndReturnArgs} args - Arguments to create many PaymentTransactions.
     * @example
     * // Create many PaymentTransactions
     * const paymentTransaction = await prisma.paymentTransaction.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PaymentTransactions and only return the `id`
     * const paymentTransactionWithIdOnly = await prisma.paymentTransaction.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PaymentTransactionCreateManyAndReturnArgs>(args?: SelectSubset<T, PaymentTransactionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentTransactionPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a PaymentTransaction.
     * @param {PaymentTransactionDeleteArgs} args - Arguments to delete one PaymentTransaction.
     * @example
     * // Delete one PaymentTransaction
     * const PaymentTransaction = await prisma.paymentTransaction.delete({
     *   where: {
     *     // ... filter to delete one PaymentTransaction
     *   }
     * })
     * 
     */
    delete<T extends PaymentTransactionDeleteArgs>(args: SelectSubset<T, PaymentTransactionDeleteArgs<ExtArgs>>): Prisma__PaymentTransactionClient<$Result.GetResult<Prisma.$PaymentTransactionPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one PaymentTransaction.
     * @param {PaymentTransactionUpdateArgs} args - Arguments to update one PaymentTransaction.
     * @example
     * // Update one PaymentTransaction
     * const paymentTransaction = await prisma.paymentTransaction.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PaymentTransactionUpdateArgs>(args: SelectSubset<T, PaymentTransactionUpdateArgs<ExtArgs>>): Prisma__PaymentTransactionClient<$Result.GetResult<Prisma.$PaymentTransactionPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more PaymentTransactions.
     * @param {PaymentTransactionDeleteManyArgs} args - Arguments to filter PaymentTransactions to delete.
     * @example
     * // Delete a few PaymentTransactions
     * const { count } = await prisma.paymentTransaction.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PaymentTransactionDeleteManyArgs>(args?: SelectSubset<T, PaymentTransactionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PaymentTransactions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentTransactionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PaymentTransactions
     * const paymentTransaction = await prisma.paymentTransaction.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PaymentTransactionUpdateManyArgs>(args: SelectSubset<T, PaymentTransactionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one PaymentTransaction.
     * @param {PaymentTransactionUpsertArgs} args - Arguments to update or create a PaymentTransaction.
     * @example
     * // Update or create a PaymentTransaction
     * const paymentTransaction = await prisma.paymentTransaction.upsert({
     *   create: {
     *     // ... data to create a PaymentTransaction
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PaymentTransaction we want to update
     *   }
     * })
     */
    upsert<T extends PaymentTransactionUpsertArgs>(args: SelectSubset<T, PaymentTransactionUpsertArgs<ExtArgs>>): Prisma__PaymentTransactionClient<$Result.GetResult<Prisma.$PaymentTransactionPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of PaymentTransactions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentTransactionCountArgs} args - Arguments to filter PaymentTransactions to count.
     * @example
     * // Count the number of PaymentTransactions
     * const count = await prisma.paymentTransaction.count({
     *   where: {
     *     // ... the filter for the PaymentTransactions we want to count
     *   }
     * })
    **/
    count<T extends PaymentTransactionCountArgs>(
      args?: Subset<T, PaymentTransactionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PaymentTransactionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PaymentTransaction.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentTransactionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PaymentTransactionAggregateArgs>(args: Subset<T, PaymentTransactionAggregateArgs>): Prisma.PrismaPromise<GetPaymentTransactionAggregateType<T>>

    /**
     * Group by PaymentTransaction.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentTransactionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PaymentTransactionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PaymentTransactionGroupByArgs['orderBy'] }
        : { orderBy?: PaymentTransactionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PaymentTransactionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPaymentTransactionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PaymentTransaction model
   */
  readonly fields: PaymentTransactionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PaymentTransaction.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PaymentTransactionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PaymentTransaction model
   */ 
  interface PaymentTransactionFieldRefs {
    readonly id: FieldRef<"PaymentTransaction", 'String'>
    readonly userId: FieldRef<"PaymentTransaction", 'String'>
    readonly orderId: FieldRef<"PaymentTransaction", 'String'>
    readonly type: FieldRef<"PaymentTransaction", 'String'>
    readonly amount: FieldRef<"PaymentTransaction", 'Decimal'>
    readonly description: FieldRef<"PaymentTransaction", 'String'>
    readonly status: FieldRef<"PaymentTransaction", 'String'>
    readonly paymentMethod: FieldRef<"PaymentTransaction", 'String'>
    readonly externalId: FieldRef<"PaymentTransaction", 'String'>
    readonly metadata: FieldRef<"PaymentTransaction", 'Json'>
    readonly createdAt: FieldRef<"PaymentTransaction", 'DateTime'>
    readonly updatedAt: FieldRef<"PaymentTransaction", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * PaymentTransaction findUnique
   */
  export type PaymentTransactionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentTransaction
     */
    select?: PaymentTransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentTransactionInclude<ExtArgs> | null
    /**
     * Filter, which PaymentTransaction to fetch.
     */
    where: PaymentTransactionWhereUniqueInput
  }

  /**
   * PaymentTransaction findUniqueOrThrow
   */
  export type PaymentTransactionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentTransaction
     */
    select?: PaymentTransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentTransactionInclude<ExtArgs> | null
    /**
     * Filter, which PaymentTransaction to fetch.
     */
    where: PaymentTransactionWhereUniqueInput
  }

  /**
   * PaymentTransaction findFirst
   */
  export type PaymentTransactionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentTransaction
     */
    select?: PaymentTransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentTransactionInclude<ExtArgs> | null
    /**
     * Filter, which PaymentTransaction to fetch.
     */
    where?: PaymentTransactionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentTransactions to fetch.
     */
    orderBy?: PaymentTransactionOrderByWithRelationInput | PaymentTransactionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PaymentTransactions.
     */
    cursor?: PaymentTransactionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentTransactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentTransactions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PaymentTransactions.
     */
    distinct?: PaymentTransactionScalarFieldEnum | PaymentTransactionScalarFieldEnum[]
  }

  /**
   * PaymentTransaction findFirstOrThrow
   */
  export type PaymentTransactionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentTransaction
     */
    select?: PaymentTransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentTransactionInclude<ExtArgs> | null
    /**
     * Filter, which PaymentTransaction to fetch.
     */
    where?: PaymentTransactionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentTransactions to fetch.
     */
    orderBy?: PaymentTransactionOrderByWithRelationInput | PaymentTransactionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PaymentTransactions.
     */
    cursor?: PaymentTransactionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentTransactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentTransactions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PaymentTransactions.
     */
    distinct?: PaymentTransactionScalarFieldEnum | PaymentTransactionScalarFieldEnum[]
  }

  /**
   * PaymentTransaction findMany
   */
  export type PaymentTransactionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentTransaction
     */
    select?: PaymentTransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentTransactionInclude<ExtArgs> | null
    /**
     * Filter, which PaymentTransactions to fetch.
     */
    where?: PaymentTransactionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentTransactions to fetch.
     */
    orderBy?: PaymentTransactionOrderByWithRelationInput | PaymentTransactionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PaymentTransactions.
     */
    cursor?: PaymentTransactionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentTransactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentTransactions.
     */
    skip?: number
    distinct?: PaymentTransactionScalarFieldEnum | PaymentTransactionScalarFieldEnum[]
  }

  /**
   * PaymentTransaction create
   */
  export type PaymentTransactionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentTransaction
     */
    select?: PaymentTransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentTransactionInclude<ExtArgs> | null
    /**
     * The data needed to create a PaymentTransaction.
     */
    data: XOR<PaymentTransactionCreateInput, PaymentTransactionUncheckedCreateInput>
  }

  /**
   * PaymentTransaction createMany
   */
  export type PaymentTransactionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PaymentTransactions.
     */
    data: PaymentTransactionCreateManyInput | PaymentTransactionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PaymentTransaction createManyAndReturn
   */
  export type PaymentTransactionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentTransaction
     */
    select?: PaymentTransactionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many PaymentTransactions.
     */
    data: PaymentTransactionCreateManyInput | PaymentTransactionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentTransactionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * PaymentTransaction update
   */
  export type PaymentTransactionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentTransaction
     */
    select?: PaymentTransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentTransactionInclude<ExtArgs> | null
    /**
     * The data needed to update a PaymentTransaction.
     */
    data: XOR<PaymentTransactionUpdateInput, PaymentTransactionUncheckedUpdateInput>
    /**
     * Choose, which PaymentTransaction to update.
     */
    where: PaymentTransactionWhereUniqueInput
  }

  /**
   * PaymentTransaction updateMany
   */
  export type PaymentTransactionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PaymentTransactions.
     */
    data: XOR<PaymentTransactionUpdateManyMutationInput, PaymentTransactionUncheckedUpdateManyInput>
    /**
     * Filter which PaymentTransactions to update
     */
    where?: PaymentTransactionWhereInput
  }

  /**
   * PaymentTransaction upsert
   */
  export type PaymentTransactionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentTransaction
     */
    select?: PaymentTransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentTransactionInclude<ExtArgs> | null
    /**
     * The filter to search for the PaymentTransaction to update in case it exists.
     */
    where: PaymentTransactionWhereUniqueInput
    /**
     * In case the PaymentTransaction found by the `where` argument doesn't exist, create a new PaymentTransaction with this data.
     */
    create: XOR<PaymentTransactionCreateInput, PaymentTransactionUncheckedCreateInput>
    /**
     * In case the PaymentTransaction was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PaymentTransactionUpdateInput, PaymentTransactionUncheckedUpdateInput>
  }

  /**
   * PaymentTransaction delete
   */
  export type PaymentTransactionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentTransaction
     */
    select?: PaymentTransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentTransactionInclude<ExtArgs> | null
    /**
     * Filter which PaymentTransaction to delete.
     */
    where: PaymentTransactionWhereUniqueInput
  }

  /**
   * PaymentTransaction deleteMany
   */
  export type PaymentTransactionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PaymentTransactions to delete
     */
    where?: PaymentTransactionWhereInput
  }

  /**
   * PaymentTransaction without action
   */
  export type PaymentTransactionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentTransaction
     */
    select?: PaymentTransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentTransactionInclude<ExtArgs> | null
  }


  /**
   * Model Session
   */

  export type AggregateSession = {
    _count: SessionCountAggregateOutputType | null
    _avg: SessionAvgAggregateOutputType | null
    _sum: SessionSumAggregateOutputType | null
    _min: SessionMinAggregateOutputType | null
    _max: SessionMaxAggregateOutputType | null
  }

  export type SessionAvgAggregateOutputType = {
    chatId: number | null
  }

  export type SessionSumAggregateOutputType = {
    chatId: bigint | null
  }

  export type SessionMinAggregateOutputType = {
    id: string | null
    userId: string | null
    clientType: $Enums.ClientType | null
    chatId: bigint | null
    webAppInitData: string | null
    userAgent: string | null
    ipAddress: string | null
    currentState: string | null
    lastActivity: Date | null
    expiresAt: Date | null
    status: $Enums.SessionStatus | null
    timezone: string | null
    language: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SessionMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    clientType: $Enums.ClientType | null
    chatId: bigint | null
    webAppInitData: string | null
    userAgent: string | null
    ipAddress: string | null
    currentState: string | null
    lastActivity: Date | null
    expiresAt: Date | null
    status: $Enums.SessionStatus | null
    timezone: string | null
    language: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SessionCountAggregateOutputType = {
    id: number
    userId: number
    clientType: number
    chatId: number
    webAppInitData: number
    userAgent: number
    ipAddress: number
    currentState: number
    contextData: number
    lastActivity: number
    expiresAt: number
    status: number
    deviceInfo: number
    timezone: number
    language: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type SessionAvgAggregateInputType = {
    chatId?: true
  }

  export type SessionSumAggregateInputType = {
    chatId?: true
  }

  export type SessionMinAggregateInputType = {
    id?: true
    userId?: true
    clientType?: true
    chatId?: true
    webAppInitData?: true
    userAgent?: true
    ipAddress?: true
    currentState?: true
    lastActivity?: true
    expiresAt?: true
    status?: true
    timezone?: true
    language?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SessionMaxAggregateInputType = {
    id?: true
    userId?: true
    clientType?: true
    chatId?: true
    webAppInitData?: true
    userAgent?: true
    ipAddress?: true
    currentState?: true
    lastActivity?: true
    expiresAt?: true
    status?: true
    timezone?: true
    language?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SessionCountAggregateInputType = {
    id?: true
    userId?: true
    clientType?: true
    chatId?: true
    webAppInitData?: true
    userAgent?: true
    ipAddress?: true
    currentState?: true
    contextData?: true
    lastActivity?: true
    expiresAt?: true
    status?: true
    deviceInfo?: true
    timezone?: true
    language?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type SessionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Session to aggregate.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Sessions
    **/
    _count?: true | SessionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SessionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SessionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SessionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SessionMaxAggregateInputType
  }

  export type GetSessionAggregateType<T extends SessionAggregateArgs> = {
        [P in keyof T & keyof AggregateSession]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSession[P]>
      : GetScalarType<T[P], AggregateSession[P]>
  }




  export type SessionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SessionWhereInput
    orderBy?: SessionOrderByWithAggregationInput | SessionOrderByWithAggregationInput[]
    by: SessionScalarFieldEnum[] | SessionScalarFieldEnum
    having?: SessionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SessionCountAggregateInputType | true
    _avg?: SessionAvgAggregateInputType
    _sum?: SessionSumAggregateInputType
    _min?: SessionMinAggregateInputType
    _max?: SessionMaxAggregateInputType
  }

  export type SessionGroupByOutputType = {
    id: string
    userId: string
    clientType: $Enums.ClientType
    chatId: bigint | null
    webAppInitData: string | null
    userAgent: string | null
    ipAddress: string | null
    currentState: string | null
    contextData: JsonValue | null
    lastActivity: Date
    expiresAt: Date
    status: $Enums.SessionStatus
    deviceInfo: JsonValue | null
    timezone: string | null
    language: string | null
    createdAt: Date
    updatedAt: Date
    _count: SessionCountAggregateOutputType | null
    _avg: SessionAvgAggregateOutputType | null
    _sum: SessionSumAggregateOutputType | null
    _min: SessionMinAggregateOutputType | null
    _max: SessionMaxAggregateOutputType | null
  }

  type GetSessionGroupByPayload<T extends SessionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SessionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SessionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SessionGroupByOutputType[P]>
            : GetScalarType<T[P], SessionGroupByOutputType[P]>
        }
      >
    >


  export type SessionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    clientType?: boolean
    chatId?: boolean
    webAppInitData?: boolean
    userAgent?: boolean
    ipAddress?: boolean
    currentState?: boolean
    contextData?: boolean
    lastActivity?: boolean
    expiresAt?: boolean
    status?: boolean
    deviceInfo?: boolean
    timezone?: boolean
    language?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["session"]>

  export type SessionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    clientType?: boolean
    chatId?: boolean
    webAppInitData?: boolean
    userAgent?: boolean
    ipAddress?: boolean
    currentState?: boolean
    contextData?: boolean
    lastActivity?: boolean
    expiresAt?: boolean
    status?: boolean
    deviceInfo?: boolean
    timezone?: boolean
    language?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["session"]>

  export type SessionSelectScalar = {
    id?: boolean
    userId?: boolean
    clientType?: boolean
    chatId?: boolean
    webAppInitData?: boolean
    userAgent?: boolean
    ipAddress?: boolean
    currentState?: boolean
    contextData?: boolean
    lastActivity?: boolean
    expiresAt?: boolean
    status?: boolean
    deviceInfo?: boolean
    timezone?: boolean
    language?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type SessionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type SessionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $SessionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Session"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      clientType: $Enums.ClientType
      chatId: bigint | null
      webAppInitData: string | null
      userAgent: string | null
      ipAddress: string | null
      currentState: string | null
      contextData: Prisma.JsonValue | null
      lastActivity: Date
      expiresAt: Date
      status: $Enums.SessionStatus
      deviceInfo: Prisma.JsonValue | null
      timezone: string | null
      language: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["session"]>
    composites: {}
  }

  type SessionGetPayload<S extends boolean | null | undefined | SessionDefaultArgs> = $Result.GetResult<Prisma.$SessionPayload, S>

  type SessionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<SessionFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: SessionCountAggregateInputType | true
    }

  export interface SessionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Session'], meta: { name: 'Session' } }
    /**
     * Find zero or one Session that matches the filter.
     * @param {SessionFindUniqueArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SessionFindUniqueArgs>(args: SelectSubset<T, SessionFindUniqueArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Session that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {SessionFindUniqueOrThrowArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SessionFindUniqueOrThrowArgs>(args: SelectSubset<T, SessionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Session that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionFindFirstArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SessionFindFirstArgs>(args?: SelectSubset<T, SessionFindFirstArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Session that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionFindFirstOrThrowArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SessionFindFirstOrThrowArgs>(args?: SelectSubset<T, SessionFindFirstOrThrowArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Sessions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sessions
     * const sessions = await prisma.session.findMany()
     * 
     * // Get first 10 Sessions
     * const sessions = await prisma.session.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sessionWithIdOnly = await prisma.session.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SessionFindManyArgs>(args?: SelectSubset<T, SessionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Session.
     * @param {SessionCreateArgs} args - Arguments to create a Session.
     * @example
     * // Create one Session
     * const Session = await prisma.session.create({
     *   data: {
     *     // ... data to create a Session
     *   }
     * })
     * 
     */
    create<T extends SessionCreateArgs>(args: SelectSubset<T, SessionCreateArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Sessions.
     * @param {SessionCreateManyArgs} args - Arguments to create many Sessions.
     * @example
     * // Create many Sessions
     * const session = await prisma.session.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SessionCreateManyArgs>(args?: SelectSubset<T, SessionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Sessions and returns the data saved in the database.
     * @param {SessionCreateManyAndReturnArgs} args - Arguments to create many Sessions.
     * @example
     * // Create many Sessions
     * const session = await prisma.session.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Sessions and only return the `id`
     * const sessionWithIdOnly = await prisma.session.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SessionCreateManyAndReturnArgs>(args?: SelectSubset<T, SessionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Session.
     * @param {SessionDeleteArgs} args - Arguments to delete one Session.
     * @example
     * // Delete one Session
     * const Session = await prisma.session.delete({
     *   where: {
     *     // ... filter to delete one Session
     *   }
     * })
     * 
     */
    delete<T extends SessionDeleteArgs>(args: SelectSubset<T, SessionDeleteArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Session.
     * @param {SessionUpdateArgs} args - Arguments to update one Session.
     * @example
     * // Update one Session
     * const session = await prisma.session.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SessionUpdateArgs>(args: SelectSubset<T, SessionUpdateArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Sessions.
     * @param {SessionDeleteManyArgs} args - Arguments to filter Sessions to delete.
     * @example
     * // Delete a few Sessions
     * const { count } = await prisma.session.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SessionDeleteManyArgs>(args?: SelectSubset<T, SessionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sessions
     * const session = await prisma.session.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SessionUpdateManyArgs>(args: SelectSubset<T, SessionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Session.
     * @param {SessionUpsertArgs} args - Arguments to update or create a Session.
     * @example
     * // Update or create a Session
     * const session = await prisma.session.upsert({
     *   create: {
     *     // ... data to create a Session
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Session we want to update
     *   }
     * })
     */
    upsert<T extends SessionUpsertArgs>(args: SelectSubset<T, SessionUpsertArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionCountArgs} args - Arguments to filter Sessions to count.
     * @example
     * // Count the number of Sessions
     * const count = await prisma.session.count({
     *   where: {
     *     // ... the filter for the Sessions we want to count
     *   }
     * })
    **/
    count<T extends SessionCountArgs>(
      args?: Subset<T, SessionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SessionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Session.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SessionAggregateArgs>(args: Subset<T, SessionAggregateArgs>): Prisma.PrismaPromise<GetSessionAggregateType<T>>

    /**
     * Group by Session.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SessionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SessionGroupByArgs['orderBy'] }
        : { orderBy?: SessionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SessionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSessionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Session model
   */
  readonly fields: SessionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Session.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SessionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Session model
   */ 
  interface SessionFieldRefs {
    readonly id: FieldRef<"Session", 'String'>
    readonly userId: FieldRef<"Session", 'String'>
    readonly clientType: FieldRef<"Session", 'ClientType'>
    readonly chatId: FieldRef<"Session", 'BigInt'>
    readonly webAppInitData: FieldRef<"Session", 'String'>
    readonly userAgent: FieldRef<"Session", 'String'>
    readonly ipAddress: FieldRef<"Session", 'String'>
    readonly currentState: FieldRef<"Session", 'String'>
    readonly contextData: FieldRef<"Session", 'Json'>
    readonly lastActivity: FieldRef<"Session", 'DateTime'>
    readonly expiresAt: FieldRef<"Session", 'DateTime'>
    readonly status: FieldRef<"Session", 'SessionStatus'>
    readonly deviceInfo: FieldRef<"Session", 'Json'>
    readonly timezone: FieldRef<"Session", 'String'>
    readonly language: FieldRef<"Session", 'String'>
    readonly createdAt: FieldRef<"Session", 'DateTime'>
    readonly updatedAt: FieldRef<"Session", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Session findUnique
   */
  export type SessionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session findUniqueOrThrow
   */
  export type SessionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session findFirst
   */
  export type SessionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Sessions.
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Sessions.
     */
    distinct?: SessionScalarFieldEnum | SessionScalarFieldEnum[]
  }

  /**
   * Session findFirstOrThrow
   */
  export type SessionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Sessions.
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Sessions.
     */
    distinct?: SessionScalarFieldEnum | SessionScalarFieldEnum[]
  }

  /**
   * Session findMany
   */
  export type SessionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Sessions to fetch.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Sessions.
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    distinct?: SessionScalarFieldEnum | SessionScalarFieldEnum[]
  }

  /**
   * Session create
   */
  export type SessionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * The data needed to create a Session.
     */
    data: XOR<SessionCreateInput, SessionUncheckedCreateInput>
  }

  /**
   * Session createMany
   */
  export type SessionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Sessions.
     */
    data: SessionCreateManyInput | SessionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Session createManyAndReturn
   */
  export type SessionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Sessions.
     */
    data: SessionCreateManyInput | SessionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Session update
   */
  export type SessionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * The data needed to update a Session.
     */
    data: XOR<SessionUpdateInput, SessionUncheckedUpdateInput>
    /**
     * Choose, which Session to update.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session updateMany
   */
  export type SessionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Sessions.
     */
    data: XOR<SessionUpdateManyMutationInput, SessionUncheckedUpdateManyInput>
    /**
     * Filter which Sessions to update
     */
    where?: SessionWhereInput
  }

  /**
   * Session upsert
   */
  export type SessionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * The filter to search for the Session to update in case it exists.
     */
    where: SessionWhereUniqueInput
    /**
     * In case the Session found by the `where` argument doesn't exist, create a new Session with this data.
     */
    create: XOR<SessionCreateInput, SessionUncheckedCreateInput>
    /**
     * In case the Session was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SessionUpdateInput, SessionUncheckedUpdateInput>
  }

  /**
   * Session delete
   */
  export type SessionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter which Session to delete.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session deleteMany
   */
  export type SessionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Sessions to delete
     */
    where?: SessionWhereInput
  }

  /**
   * Session without action
   */
  export type SessionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
  }


  /**
   * Model Notification
   */

  export type AggregateNotification = {
    _count: NotificationCountAggregateOutputType | null
    _min: NotificationMinAggregateOutputType | null
    _max: NotificationMaxAggregateOutputType | null
  }

  export type NotificationMinAggregateOutputType = {
    id: string | null
    userId: string | null
    title: string | null
    message: string | null
    type: string | null
    sendToTelegram: boolean | null
    sendToEmail: boolean | null
    sendToWebApp: boolean | null
    isRead: boolean | null
    isDelivered: boolean | null
    scheduledFor: Date | null
    sentAt: Date | null
    iconUrl: string | null
    actionUrl: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type NotificationMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    title: string | null
    message: string | null
    type: string | null
    sendToTelegram: boolean | null
    sendToEmail: boolean | null
    sendToWebApp: boolean | null
    isRead: boolean | null
    isDelivered: boolean | null
    scheduledFor: Date | null
    sentAt: Date | null
    iconUrl: string | null
    actionUrl: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type NotificationCountAggregateOutputType = {
    id: number
    userId: number
    title: number
    message: number
    type: number
    sendToTelegram: number
    sendToEmail: number
    sendToWebApp: number
    isRead: number
    isDelivered: number
    scheduledFor: number
    sentAt: number
    iconUrl: number
    actionUrl: number
    metadata: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type NotificationMinAggregateInputType = {
    id?: true
    userId?: true
    title?: true
    message?: true
    type?: true
    sendToTelegram?: true
    sendToEmail?: true
    sendToWebApp?: true
    isRead?: true
    isDelivered?: true
    scheduledFor?: true
    sentAt?: true
    iconUrl?: true
    actionUrl?: true
    createdAt?: true
    updatedAt?: true
  }

  export type NotificationMaxAggregateInputType = {
    id?: true
    userId?: true
    title?: true
    message?: true
    type?: true
    sendToTelegram?: true
    sendToEmail?: true
    sendToWebApp?: true
    isRead?: true
    isDelivered?: true
    scheduledFor?: true
    sentAt?: true
    iconUrl?: true
    actionUrl?: true
    createdAt?: true
    updatedAt?: true
  }

  export type NotificationCountAggregateInputType = {
    id?: true
    userId?: true
    title?: true
    message?: true
    type?: true
    sendToTelegram?: true
    sendToEmail?: true
    sendToWebApp?: true
    isRead?: true
    isDelivered?: true
    scheduledFor?: true
    sentAt?: true
    iconUrl?: true
    actionUrl?: true
    metadata?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type NotificationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Notification to aggregate.
     */
    where?: NotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notifications to fetch.
     */
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: NotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Notifications
    **/
    _count?: true | NotificationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: NotificationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: NotificationMaxAggregateInputType
  }

  export type GetNotificationAggregateType<T extends NotificationAggregateArgs> = {
        [P in keyof T & keyof AggregateNotification]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNotification[P]>
      : GetScalarType<T[P], AggregateNotification[P]>
  }




  export type NotificationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotificationWhereInput
    orderBy?: NotificationOrderByWithAggregationInput | NotificationOrderByWithAggregationInput[]
    by: NotificationScalarFieldEnum[] | NotificationScalarFieldEnum
    having?: NotificationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: NotificationCountAggregateInputType | true
    _min?: NotificationMinAggregateInputType
    _max?: NotificationMaxAggregateInputType
  }

  export type NotificationGroupByOutputType = {
    id: string
    userId: string
    title: string
    message: string
    type: string
    sendToTelegram: boolean
    sendToEmail: boolean
    sendToWebApp: boolean
    isRead: boolean
    isDelivered: boolean
    scheduledFor: Date | null
    sentAt: Date | null
    iconUrl: string | null
    actionUrl: string | null
    metadata: JsonValue | null
    createdAt: Date
    updatedAt: Date
    _count: NotificationCountAggregateOutputType | null
    _min: NotificationMinAggregateOutputType | null
    _max: NotificationMaxAggregateOutputType | null
  }

  type GetNotificationGroupByPayload<T extends NotificationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<NotificationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof NotificationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], NotificationGroupByOutputType[P]>
            : GetScalarType<T[P], NotificationGroupByOutputType[P]>
        }
      >
    >


  export type NotificationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    title?: boolean
    message?: boolean
    type?: boolean
    sendToTelegram?: boolean
    sendToEmail?: boolean
    sendToWebApp?: boolean
    isRead?: boolean
    isDelivered?: boolean
    scheduledFor?: boolean
    sentAt?: boolean
    iconUrl?: boolean
    actionUrl?: boolean
    metadata?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["notification"]>

  export type NotificationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    title?: boolean
    message?: boolean
    type?: boolean
    sendToTelegram?: boolean
    sendToEmail?: boolean
    sendToWebApp?: boolean
    isRead?: boolean
    isDelivered?: boolean
    scheduledFor?: boolean
    sentAt?: boolean
    iconUrl?: boolean
    actionUrl?: boolean
    metadata?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["notification"]>

  export type NotificationSelectScalar = {
    id?: boolean
    userId?: boolean
    title?: boolean
    message?: boolean
    type?: boolean
    sendToTelegram?: boolean
    sendToEmail?: boolean
    sendToWebApp?: boolean
    isRead?: boolean
    isDelivered?: boolean
    scheduledFor?: boolean
    sentAt?: boolean
    iconUrl?: boolean
    actionUrl?: boolean
    metadata?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type NotificationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type NotificationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $NotificationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Notification"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      title: string
      message: string
      type: string
      sendToTelegram: boolean
      sendToEmail: boolean
      sendToWebApp: boolean
      isRead: boolean
      isDelivered: boolean
      scheduledFor: Date | null
      sentAt: Date | null
      iconUrl: string | null
      actionUrl: string | null
      metadata: Prisma.JsonValue | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["notification"]>
    composites: {}
  }

  type NotificationGetPayload<S extends boolean | null | undefined | NotificationDefaultArgs> = $Result.GetResult<Prisma.$NotificationPayload, S>

  type NotificationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<NotificationFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: NotificationCountAggregateInputType | true
    }

  export interface NotificationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Notification'], meta: { name: 'Notification' } }
    /**
     * Find zero or one Notification that matches the filter.
     * @param {NotificationFindUniqueArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends NotificationFindUniqueArgs>(args: SelectSubset<T, NotificationFindUniqueArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Notification that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {NotificationFindUniqueOrThrowArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends NotificationFindUniqueOrThrowArgs>(args: SelectSubset<T, NotificationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Notification that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationFindFirstArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends NotificationFindFirstArgs>(args?: SelectSubset<T, NotificationFindFirstArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Notification that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationFindFirstOrThrowArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends NotificationFindFirstOrThrowArgs>(args?: SelectSubset<T, NotificationFindFirstOrThrowArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Notifications that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Notifications
     * const notifications = await prisma.notification.findMany()
     * 
     * // Get first 10 Notifications
     * const notifications = await prisma.notification.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const notificationWithIdOnly = await prisma.notification.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends NotificationFindManyArgs>(args?: SelectSubset<T, NotificationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Notification.
     * @param {NotificationCreateArgs} args - Arguments to create a Notification.
     * @example
     * // Create one Notification
     * const Notification = await prisma.notification.create({
     *   data: {
     *     // ... data to create a Notification
     *   }
     * })
     * 
     */
    create<T extends NotificationCreateArgs>(args: SelectSubset<T, NotificationCreateArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Notifications.
     * @param {NotificationCreateManyArgs} args - Arguments to create many Notifications.
     * @example
     * // Create many Notifications
     * const notification = await prisma.notification.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends NotificationCreateManyArgs>(args?: SelectSubset<T, NotificationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Notifications and returns the data saved in the database.
     * @param {NotificationCreateManyAndReturnArgs} args - Arguments to create many Notifications.
     * @example
     * // Create many Notifications
     * const notification = await prisma.notification.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Notifications and only return the `id`
     * const notificationWithIdOnly = await prisma.notification.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends NotificationCreateManyAndReturnArgs>(args?: SelectSubset<T, NotificationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Notification.
     * @param {NotificationDeleteArgs} args - Arguments to delete one Notification.
     * @example
     * // Delete one Notification
     * const Notification = await prisma.notification.delete({
     *   where: {
     *     // ... filter to delete one Notification
     *   }
     * })
     * 
     */
    delete<T extends NotificationDeleteArgs>(args: SelectSubset<T, NotificationDeleteArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Notification.
     * @param {NotificationUpdateArgs} args - Arguments to update one Notification.
     * @example
     * // Update one Notification
     * const notification = await prisma.notification.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends NotificationUpdateArgs>(args: SelectSubset<T, NotificationUpdateArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Notifications.
     * @param {NotificationDeleteManyArgs} args - Arguments to filter Notifications to delete.
     * @example
     * // Delete a few Notifications
     * const { count } = await prisma.notification.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends NotificationDeleteManyArgs>(args?: SelectSubset<T, NotificationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Notifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Notifications
     * const notification = await prisma.notification.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends NotificationUpdateManyArgs>(args: SelectSubset<T, NotificationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Notification.
     * @param {NotificationUpsertArgs} args - Arguments to update or create a Notification.
     * @example
     * // Update or create a Notification
     * const notification = await prisma.notification.upsert({
     *   create: {
     *     // ... data to create a Notification
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Notification we want to update
     *   }
     * })
     */
    upsert<T extends NotificationUpsertArgs>(args: SelectSubset<T, NotificationUpsertArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Notifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationCountArgs} args - Arguments to filter Notifications to count.
     * @example
     * // Count the number of Notifications
     * const count = await prisma.notification.count({
     *   where: {
     *     // ... the filter for the Notifications we want to count
     *   }
     * })
    **/
    count<T extends NotificationCountArgs>(
      args?: Subset<T, NotificationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], NotificationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Notification.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends NotificationAggregateArgs>(args: Subset<T, NotificationAggregateArgs>): Prisma.PrismaPromise<GetNotificationAggregateType<T>>

    /**
     * Group by Notification.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends NotificationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: NotificationGroupByArgs['orderBy'] }
        : { orderBy?: NotificationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, NotificationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNotificationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Notification model
   */
  readonly fields: NotificationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Notification.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__NotificationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Notification model
   */ 
  interface NotificationFieldRefs {
    readonly id: FieldRef<"Notification", 'String'>
    readonly userId: FieldRef<"Notification", 'String'>
    readonly title: FieldRef<"Notification", 'String'>
    readonly message: FieldRef<"Notification", 'String'>
    readonly type: FieldRef<"Notification", 'String'>
    readonly sendToTelegram: FieldRef<"Notification", 'Boolean'>
    readonly sendToEmail: FieldRef<"Notification", 'Boolean'>
    readonly sendToWebApp: FieldRef<"Notification", 'Boolean'>
    readonly isRead: FieldRef<"Notification", 'Boolean'>
    readonly isDelivered: FieldRef<"Notification", 'Boolean'>
    readonly scheduledFor: FieldRef<"Notification", 'DateTime'>
    readonly sentAt: FieldRef<"Notification", 'DateTime'>
    readonly iconUrl: FieldRef<"Notification", 'String'>
    readonly actionUrl: FieldRef<"Notification", 'String'>
    readonly metadata: FieldRef<"Notification", 'Json'>
    readonly createdAt: FieldRef<"Notification", 'DateTime'>
    readonly updatedAt: FieldRef<"Notification", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Notification findUnique
   */
  export type NotificationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notification to fetch.
     */
    where: NotificationWhereUniqueInput
  }

  /**
   * Notification findUniqueOrThrow
   */
  export type NotificationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notification to fetch.
     */
    where: NotificationWhereUniqueInput
  }

  /**
   * Notification findFirst
   */
  export type NotificationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notification to fetch.
     */
    where?: NotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notifications to fetch.
     */
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Notifications.
     */
    cursor?: NotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Notifications.
     */
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * Notification findFirstOrThrow
   */
  export type NotificationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notification to fetch.
     */
    where?: NotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notifications to fetch.
     */
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Notifications.
     */
    cursor?: NotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Notifications.
     */
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * Notification findMany
   */
  export type NotificationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notifications to fetch.
     */
    where?: NotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notifications to fetch.
     */
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Notifications.
     */
    cursor?: NotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notifications.
     */
    skip?: number
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * Notification create
   */
  export type NotificationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * The data needed to create a Notification.
     */
    data: XOR<NotificationCreateInput, NotificationUncheckedCreateInput>
  }

  /**
   * Notification createMany
   */
  export type NotificationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Notifications.
     */
    data: NotificationCreateManyInput | NotificationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Notification createManyAndReturn
   */
  export type NotificationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Notifications.
     */
    data: NotificationCreateManyInput | NotificationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Notification update
   */
  export type NotificationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * The data needed to update a Notification.
     */
    data: XOR<NotificationUpdateInput, NotificationUncheckedUpdateInput>
    /**
     * Choose, which Notification to update.
     */
    where: NotificationWhereUniqueInput
  }

  /**
   * Notification updateMany
   */
  export type NotificationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Notifications.
     */
    data: XOR<NotificationUpdateManyMutationInput, NotificationUncheckedUpdateManyInput>
    /**
     * Filter which Notifications to update
     */
    where?: NotificationWhereInput
  }

  /**
   * Notification upsert
   */
  export type NotificationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * The filter to search for the Notification to update in case it exists.
     */
    where: NotificationWhereUniqueInput
    /**
     * In case the Notification found by the `where` argument doesn't exist, create a new Notification with this data.
     */
    create: XOR<NotificationCreateInput, NotificationUncheckedCreateInput>
    /**
     * In case the Notification was found with the provided `where` argument, update it with this data.
     */
    update: XOR<NotificationUpdateInput, NotificationUncheckedUpdateInput>
  }

  /**
   * Notification delete
   */
  export type NotificationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter which Notification to delete.
     */
    where: NotificationWhereUniqueInput
  }

  /**
   * Notification deleteMany
   */
  export type NotificationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Notifications to delete
     */
    where?: NotificationWhereInput
  }

  /**
   * Notification without action
   */
  export type NotificationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
  }


  /**
   * Model AdminAction
   */

  export type AggregateAdminAction = {
    _count: AdminActionCountAggregateOutputType | null
    _min: AdminActionMinAggregateOutputType | null
    _max: AdminActionMaxAggregateOutputType | null
  }

  export type AdminActionMinAggregateOutputType = {
    id: string | null
    adminId: string | null
    type: $Enums.AdminActionType | null
    targetId: string | null
    targetType: string | null
    description: string | null
    comment: string | null
    ipAddress: string | null
    userAgent: string | null
    clientType: $Enums.ClientType | null
    createdAt: Date | null
  }

  export type AdminActionMaxAggregateOutputType = {
    id: string | null
    adminId: string | null
    type: $Enums.AdminActionType | null
    targetId: string | null
    targetType: string | null
    description: string | null
    comment: string | null
    ipAddress: string | null
    userAgent: string | null
    clientType: $Enums.ClientType | null
    createdAt: Date | null
  }

  export type AdminActionCountAggregateOutputType = {
    id: number
    adminId: number
    type: number
    targetId: number
    targetType: number
    description: number
    comment: number
    metadata: number
    ipAddress: number
    userAgent: number
    clientType: number
    createdAt: number
    _all: number
  }


  export type AdminActionMinAggregateInputType = {
    id?: true
    adminId?: true
    type?: true
    targetId?: true
    targetType?: true
    description?: true
    comment?: true
    ipAddress?: true
    userAgent?: true
    clientType?: true
    createdAt?: true
  }

  export type AdminActionMaxAggregateInputType = {
    id?: true
    adminId?: true
    type?: true
    targetId?: true
    targetType?: true
    description?: true
    comment?: true
    ipAddress?: true
    userAgent?: true
    clientType?: true
    createdAt?: true
  }

  export type AdminActionCountAggregateInputType = {
    id?: true
    adminId?: true
    type?: true
    targetId?: true
    targetType?: true
    description?: true
    comment?: true
    metadata?: true
    ipAddress?: true
    userAgent?: true
    clientType?: true
    createdAt?: true
    _all?: true
  }

  export type AdminActionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AdminAction to aggregate.
     */
    where?: AdminActionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AdminActions to fetch.
     */
    orderBy?: AdminActionOrderByWithRelationInput | AdminActionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AdminActionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AdminActions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AdminActions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AdminActions
    **/
    _count?: true | AdminActionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AdminActionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AdminActionMaxAggregateInputType
  }

  export type GetAdminActionAggregateType<T extends AdminActionAggregateArgs> = {
        [P in keyof T & keyof AggregateAdminAction]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAdminAction[P]>
      : GetScalarType<T[P], AggregateAdminAction[P]>
  }




  export type AdminActionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AdminActionWhereInput
    orderBy?: AdminActionOrderByWithAggregationInput | AdminActionOrderByWithAggregationInput[]
    by: AdminActionScalarFieldEnum[] | AdminActionScalarFieldEnum
    having?: AdminActionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AdminActionCountAggregateInputType | true
    _min?: AdminActionMinAggregateInputType
    _max?: AdminActionMaxAggregateInputType
  }

  export type AdminActionGroupByOutputType = {
    id: string
    adminId: string
    type: $Enums.AdminActionType
    targetId: string | null
    targetType: string | null
    description: string
    comment: string | null
    metadata: JsonValue | null
    ipAddress: string | null
    userAgent: string | null
    clientType: $Enums.ClientType | null
    createdAt: Date
    _count: AdminActionCountAggregateOutputType | null
    _min: AdminActionMinAggregateOutputType | null
    _max: AdminActionMaxAggregateOutputType | null
  }

  type GetAdminActionGroupByPayload<T extends AdminActionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AdminActionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AdminActionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AdminActionGroupByOutputType[P]>
            : GetScalarType<T[P], AdminActionGroupByOutputType[P]>
        }
      >
    >


  export type AdminActionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    adminId?: boolean
    type?: boolean
    targetId?: boolean
    targetType?: boolean
    description?: boolean
    comment?: boolean
    metadata?: boolean
    ipAddress?: boolean
    userAgent?: boolean
    clientType?: boolean
    createdAt?: boolean
    admin?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["adminAction"]>

  export type AdminActionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    adminId?: boolean
    type?: boolean
    targetId?: boolean
    targetType?: boolean
    description?: boolean
    comment?: boolean
    metadata?: boolean
    ipAddress?: boolean
    userAgent?: boolean
    clientType?: boolean
    createdAt?: boolean
    admin?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["adminAction"]>

  export type AdminActionSelectScalar = {
    id?: boolean
    adminId?: boolean
    type?: boolean
    targetId?: boolean
    targetType?: boolean
    description?: boolean
    comment?: boolean
    metadata?: boolean
    ipAddress?: boolean
    userAgent?: boolean
    clientType?: boolean
    createdAt?: boolean
  }

  export type AdminActionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    admin?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type AdminActionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    admin?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $AdminActionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AdminAction"
    objects: {
      admin: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      adminId: string
      type: $Enums.AdminActionType
      targetId: string | null
      targetType: string | null
      description: string
      comment: string | null
      metadata: Prisma.JsonValue | null
      ipAddress: string | null
      userAgent: string | null
      clientType: $Enums.ClientType | null
      createdAt: Date
    }, ExtArgs["result"]["adminAction"]>
    composites: {}
  }

  type AdminActionGetPayload<S extends boolean | null | undefined | AdminActionDefaultArgs> = $Result.GetResult<Prisma.$AdminActionPayload, S>

  type AdminActionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<AdminActionFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: AdminActionCountAggregateInputType | true
    }

  export interface AdminActionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AdminAction'], meta: { name: 'AdminAction' } }
    /**
     * Find zero or one AdminAction that matches the filter.
     * @param {AdminActionFindUniqueArgs} args - Arguments to find a AdminAction
     * @example
     * // Get one AdminAction
     * const adminAction = await prisma.adminAction.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AdminActionFindUniqueArgs>(args: SelectSubset<T, AdminActionFindUniqueArgs<ExtArgs>>): Prisma__AdminActionClient<$Result.GetResult<Prisma.$AdminActionPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one AdminAction that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {AdminActionFindUniqueOrThrowArgs} args - Arguments to find a AdminAction
     * @example
     * // Get one AdminAction
     * const adminAction = await prisma.adminAction.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AdminActionFindUniqueOrThrowArgs>(args: SelectSubset<T, AdminActionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AdminActionClient<$Result.GetResult<Prisma.$AdminActionPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first AdminAction that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminActionFindFirstArgs} args - Arguments to find a AdminAction
     * @example
     * // Get one AdminAction
     * const adminAction = await prisma.adminAction.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AdminActionFindFirstArgs>(args?: SelectSubset<T, AdminActionFindFirstArgs<ExtArgs>>): Prisma__AdminActionClient<$Result.GetResult<Prisma.$AdminActionPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first AdminAction that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminActionFindFirstOrThrowArgs} args - Arguments to find a AdminAction
     * @example
     * // Get one AdminAction
     * const adminAction = await prisma.adminAction.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AdminActionFindFirstOrThrowArgs>(args?: SelectSubset<T, AdminActionFindFirstOrThrowArgs<ExtArgs>>): Prisma__AdminActionClient<$Result.GetResult<Prisma.$AdminActionPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more AdminActions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminActionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AdminActions
     * const adminActions = await prisma.adminAction.findMany()
     * 
     * // Get first 10 AdminActions
     * const adminActions = await prisma.adminAction.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const adminActionWithIdOnly = await prisma.adminAction.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AdminActionFindManyArgs>(args?: SelectSubset<T, AdminActionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AdminActionPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a AdminAction.
     * @param {AdminActionCreateArgs} args - Arguments to create a AdminAction.
     * @example
     * // Create one AdminAction
     * const AdminAction = await prisma.adminAction.create({
     *   data: {
     *     // ... data to create a AdminAction
     *   }
     * })
     * 
     */
    create<T extends AdminActionCreateArgs>(args: SelectSubset<T, AdminActionCreateArgs<ExtArgs>>): Prisma__AdminActionClient<$Result.GetResult<Prisma.$AdminActionPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many AdminActions.
     * @param {AdminActionCreateManyArgs} args - Arguments to create many AdminActions.
     * @example
     * // Create many AdminActions
     * const adminAction = await prisma.adminAction.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AdminActionCreateManyArgs>(args?: SelectSubset<T, AdminActionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AdminActions and returns the data saved in the database.
     * @param {AdminActionCreateManyAndReturnArgs} args - Arguments to create many AdminActions.
     * @example
     * // Create many AdminActions
     * const adminAction = await prisma.adminAction.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AdminActions and only return the `id`
     * const adminActionWithIdOnly = await prisma.adminAction.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AdminActionCreateManyAndReturnArgs>(args?: SelectSubset<T, AdminActionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AdminActionPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a AdminAction.
     * @param {AdminActionDeleteArgs} args - Arguments to delete one AdminAction.
     * @example
     * // Delete one AdminAction
     * const AdminAction = await prisma.adminAction.delete({
     *   where: {
     *     // ... filter to delete one AdminAction
     *   }
     * })
     * 
     */
    delete<T extends AdminActionDeleteArgs>(args: SelectSubset<T, AdminActionDeleteArgs<ExtArgs>>): Prisma__AdminActionClient<$Result.GetResult<Prisma.$AdminActionPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one AdminAction.
     * @param {AdminActionUpdateArgs} args - Arguments to update one AdminAction.
     * @example
     * // Update one AdminAction
     * const adminAction = await prisma.adminAction.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AdminActionUpdateArgs>(args: SelectSubset<T, AdminActionUpdateArgs<ExtArgs>>): Prisma__AdminActionClient<$Result.GetResult<Prisma.$AdminActionPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more AdminActions.
     * @param {AdminActionDeleteManyArgs} args - Arguments to filter AdminActions to delete.
     * @example
     * // Delete a few AdminActions
     * const { count } = await prisma.adminAction.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AdminActionDeleteManyArgs>(args?: SelectSubset<T, AdminActionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AdminActions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminActionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AdminActions
     * const adminAction = await prisma.adminAction.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AdminActionUpdateManyArgs>(args: SelectSubset<T, AdminActionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one AdminAction.
     * @param {AdminActionUpsertArgs} args - Arguments to update or create a AdminAction.
     * @example
     * // Update or create a AdminAction
     * const adminAction = await prisma.adminAction.upsert({
     *   create: {
     *     // ... data to create a AdminAction
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AdminAction we want to update
     *   }
     * })
     */
    upsert<T extends AdminActionUpsertArgs>(args: SelectSubset<T, AdminActionUpsertArgs<ExtArgs>>): Prisma__AdminActionClient<$Result.GetResult<Prisma.$AdminActionPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of AdminActions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminActionCountArgs} args - Arguments to filter AdminActions to count.
     * @example
     * // Count the number of AdminActions
     * const count = await prisma.adminAction.count({
     *   where: {
     *     // ... the filter for the AdminActions we want to count
     *   }
     * })
    **/
    count<T extends AdminActionCountArgs>(
      args?: Subset<T, AdminActionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AdminActionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AdminAction.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminActionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AdminActionAggregateArgs>(args: Subset<T, AdminActionAggregateArgs>): Prisma.PrismaPromise<GetAdminActionAggregateType<T>>

    /**
     * Group by AdminAction.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminActionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AdminActionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AdminActionGroupByArgs['orderBy'] }
        : { orderBy?: AdminActionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AdminActionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAdminActionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AdminAction model
   */
  readonly fields: AdminActionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AdminAction.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AdminActionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    admin<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AdminAction model
   */ 
  interface AdminActionFieldRefs {
    readonly id: FieldRef<"AdminAction", 'String'>
    readonly adminId: FieldRef<"AdminAction", 'String'>
    readonly type: FieldRef<"AdminAction", 'AdminActionType'>
    readonly targetId: FieldRef<"AdminAction", 'String'>
    readonly targetType: FieldRef<"AdminAction", 'String'>
    readonly description: FieldRef<"AdminAction", 'String'>
    readonly comment: FieldRef<"AdminAction", 'String'>
    readonly metadata: FieldRef<"AdminAction", 'Json'>
    readonly ipAddress: FieldRef<"AdminAction", 'String'>
    readonly userAgent: FieldRef<"AdminAction", 'String'>
    readonly clientType: FieldRef<"AdminAction", 'ClientType'>
    readonly createdAt: FieldRef<"AdminAction", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * AdminAction findUnique
   */
  export type AdminActionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdminAction
     */
    select?: AdminActionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminActionInclude<ExtArgs> | null
    /**
     * Filter, which AdminAction to fetch.
     */
    where: AdminActionWhereUniqueInput
  }

  /**
   * AdminAction findUniqueOrThrow
   */
  export type AdminActionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdminAction
     */
    select?: AdminActionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminActionInclude<ExtArgs> | null
    /**
     * Filter, which AdminAction to fetch.
     */
    where: AdminActionWhereUniqueInput
  }

  /**
   * AdminAction findFirst
   */
  export type AdminActionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdminAction
     */
    select?: AdminActionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminActionInclude<ExtArgs> | null
    /**
     * Filter, which AdminAction to fetch.
     */
    where?: AdminActionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AdminActions to fetch.
     */
    orderBy?: AdminActionOrderByWithRelationInput | AdminActionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AdminActions.
     */
    cursor?: AdminActionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AdminActions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AdminActions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AdminActions.
     */
    distinct?: AdminActionScalarFieldEnum | AdminActionScalarFieldEnum[]
  }

  /**
   * AdminAction findFirstOrThrow
   */
  export type AdminActionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdminAction
     */
    select?: AdminActionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminActionInclude<ExtArgs> | null
    /**
     * Filter, which AdminAction to fetch.
     */
    where?: AdminActionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AdminActions to fetch.
     */
    orderBy?: AdminActionOrderByWithRelationInput | AdminActionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AdminActions.
     */
    cursor?: AdminActionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AdminActions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AdminActions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AdminActions.
     */
    distinct?: AdminActionScalarFieldEnum | AdminActionScalarFieldEnum[]
  }

  /**
   * AdminAction findMany
   */
  export type AdminActionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdminAction
     */
    select?: AdminActionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminActionInclude<ExtArgs> | null
    /**
     * Filter, which AdminActions to fetch.
     */
    where?: AdminActionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AdminActions to fetch.
     */
    orderBy?: AdminActionOrderByWithRelationInput | AdminActionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AdminActions.
     */
    cursor?: AdminActionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AdminActions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AdminActions.
     */
    skip?: number
    distinct?: AdminActionScalarFieldEnum | AdminActionScalarFieldEnum[]
  }

  /**
   * AdminAction create
   */
  export type AdminActionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdminAction
     */
    select?: AdminActionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminActionInclude<ExtArgs> | null
    /**
     * The data needed to create a AdminAction.
     */
    data: XOR<AdminActionCreateInput, AdminActionUncheckedCreateInput>
  }

  /**
   * AdminAction createMany
   */
  export type AdminActionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AdminActions.
     */
    data: AdminActionCreateManyInput | AdminActionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AdminAction createManyAndReturn
   */
  export type AdminActionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdminAction
     */
    select?: AdminActionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many AdminActions.
     */
    data: AdminActionCreateManyInput | AdminActionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminActionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * AdminAction update
   */
  export type AdminActionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdminAction
     */
    select?: AdminActionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminActionInclude<ExtArgs> | null
    /**
     * The data needed to update a AdminAction.
     */
    data: XOR<AdminActionUpdateInput, AdminActionUncheckedUpdateInput>
    /**
     * Choose, which AdminAction to update.
     */
    where: AdminActionWhereUniqueInput
  }

  /**
   * AdminAction updateMany
   */
  export type AdminActionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AdminActions.
     */
    data: XOR<AdminActionUpdateManyMutationInput, AdminActionUncheckedUpdateManyInput>
    /**
     * Filter which AdminActions to update
     */
    where?: AdminActionWhereInput
  }

  /**
   * AdminAction upsert
   */
  export type AdminActionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdminAction
     */
    select?: AdminActionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminActionInclude<ExtArgs> | null
    /**
     * The filter to search for the AdminAction to update in case it exists.
     */
    where: AdminActionWhereUniqueInput
    /**
     * In case the AdminAction found by the `where` argument doesn't exist, create a new AdminAction with this data.
     */
    create: XOR<AdminActionCreateInput, AdminActionUncheckedCreateInput>
    /**
     * In case the AdminAction was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AdminActionUpdateInput, AdminActionUncheckedUpdateInput>
  }

  /**
   * AdminAction delete
   */
  export type AdminActionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdminAction
     */
    select?: AdminActionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminActionInclude<ExtArgs> | null
    /**
     * Filter which AdminAction to delete.
     */
    where: AdminActionWhereUniqueInput
  }

  /**
   * AdminAction deleteMany
   */
  export type AdminActionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AdminActions to delete
     */
    where?: AdminActionWhereInput
  }

  /**
   * AdminAction without action
   */
  export type AdminActionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdminAction
     */
    select?: AdminActionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminActionInclude<ExtArgs> | null
  }


  /**
   * Model Broadcast
   */

  export type AggregateBroadcast = {
    _count: BroadcastCountAggregateOutputType | null
    _avg: BroadcastAvgAggregateOutputType | null
    _sum: BroadcastSumAggregateOutputType | null
    _min: BroadcastMinAggregateOutputType | null
    _max: BroadcastMaxAggregateOutputType | null
  }

  export type BroadcastAvgAggregateOutputType = {
    totalRecipients: number | null
    sentCount: number | null
    deliveredCount: number | null
    readCount: number | null
    clickCount: number | null
    failedCount: number | null
  }

  export type BroadcastSumAggregateOutputType = {
    totalRecipients: number | null
    sentCount: number | null
    deliveredCount: number | null
    readCount: number | null
    clickCount: number | null
    failedCount: number | null
  }

  export type BroadcastMinAggregateOutputType = {
    id: string | null
    adminId: string | null
    title: string | null
    message: string | null
    imageUrl: string | null
    actionUrl: string | null
    target: $Enums.BroadcastTarget | null
    targetRegionId: string | null
    sendToBot: boolean | null
    sendToWebApp: boolean | null
    status: $Enums.BroadcastStatus | null
    scheduledFor: Date | null
    totalRecipients: number | null
    sentCount: number | null
    deliveredCount: number | null
    readCount: number | null
    clickCount: number | null
    failedCount: number | null
    errorMessage: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type BroadcastMaxAggregateOutputType = {
    id: string | null
    adminId: string | null
    title: string | null
    message: string | null
    imageUrl: string | null
    actionUrl: string | null
    target: $Enums.BroadcastTarget | null
    targetRegionId: string | null
    sendToBot: boolean | null
    sendToWebApp: boolean | null
    status: $Enums.BroadcastStatus | null
    scheduledFor: Date | null
    totalRecipients: number | null
    sentCount: number | null
    deliveredCount: number | null
    readCount: number | null
    clickCount: number | null
    failedCount: number | null
    errorMessage: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type BroadcastCountAggregateOutputType = {
    id: number
    adminId: number
    title: number
    message: number
    imageUrl: number
    actionUrl: number
    target: number
    targetRegionId: number
    sendToBot: number
    sendToWebApp: number
    status: number
    scheduledFor: number
    totalRecipients: number
    sentCount: number
    deliveredCount: number
    readCount: number
    clickCount: number
    failedCount: number
    errorMessage: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type BroadcastAvgAggregateInputType = {
    totalRecipients?: true
    sentCount?: true
    deliveredCount?: true
    readCount?: true
    clickCount?: true
    failedCount?: true
  }

  export type BroadcastSumAggregateInputType = {
    totalRecipients?: true
    sentCount?: true
    deliveredCount?: true
    readCount?: true
    clickCount?: true
    failedCount?: true
  }

  export type BroadcastMinAggregateInputType = {
    id?: true
    adminId?: true
    title?: true
    message?: true
    imageUrl?: true
    actionUrl?: true
    target?: true
    targetRegionId?: true
    sendToBot?: true
    sendToWebApp?: true
    status?: true
    scheduledFor?: true
    totalRecipients?: true
    sentCount?: true
    deliveredCount?: true
    readCount?: true
    clickCount?: true
    failedCount?: true
    errorMessage?: true
    createdAt?: true
    updatedAt?: true
  }

  export type BroadcastMaxAggregateInputType = {
    id?: true
    adminId?: true
    title?: true
    message?: true
    imageUrl?: true
    actionUrl?: true
    target?: true
    targetRegionId?: true
    sendToBot?: true
    sendToWebApp?: true
    status?: true
    scheduledFor?: true
    totalRecipients?: true
    sentCount?: true
    deliveredCount?: true
    readCount?: true
    clickCount?: true
    failedCount?: true
    errorMessage?: true
    createdAt?: true
    updatedAt?: true
  }

  export type BroadcastCountAggregateInputType = {
    id?: true
    adminId?: true
    title?: true
    message?: true
    imageUrl?: true
    actionUrl?: true
    target?: true
    targetRegionId?: true
    sendToBot?: true
    sendToWebApp?: true
    status?: true
    scheduledFor?: true
    totalRecipients?: true
    sentCount?: true
    deliveredCount?: true
    readCount?: true
    clickCount?: true
    failedCount?: true
    errorMessage?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type BroadcastAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Broadcast to aggregate.
     */
    where?: BroadcastWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Broadcasts to fetch.
     */
    orderBy?: BroadcastOrderByWithRelationInput | BroadcastOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: BroadcastWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Broadcasts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Broadcasts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Broadcasts
    **/
    _count?: true | BroadcastCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: BroadcastAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: BroadcastSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BroadcastMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BroadcastMaxAggregateInputType
  }

  export type GetBroadcastAggregateType<T extends BroadcastAggregateArgs> = {
        [P in keyof T & keyof AggregateBroadcast]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBroadcast[P]>
      : GetScalarType<T[P], AggregateBroadcast[P]>
  }




  export type BroadcastGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BroadcastWhereInput
    orderBy?: BroadcastOrderByWithAggregationInput | BroadcastOrderByWithAggregationInput[]
    by: BroadcastScalarFieldEnum[] | BroadcastScalarFieldEnum
    having?: BroadcastScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BroadcastCountAggregateInputType | true
    _avg?: BroadcastAvgAggregateInputType
    _sum?: BroadcastSumAggregateInputType
    _min?: BroadcastMinAggregateInputType
    _max?: BroadcastMaxAggregateInputType
  }

  export type BroadcastGroupByOutputType = {
    id: string
    adminId: string
    title: string
    message: string
    imageUrl: string | null
    actionUrl: string | null
    target: $Enums.BroadcastTarget
    targetRegionId: string | null
    sendToBot: boolean
    sendToWebApp: boolean
    status: $Enums.BroadcastStatus
    scheduledFor: Date | null
    totalRecipients: number
    sentCount: number
    deliveredCount: number
    readCount: number
    clickCount: number
    failedCount: number
    errorMessage: string | null
    createdAt: Date
    updatedAt: Date
    _count: BroadcastCountAggregateOutputType | null
    _avg: BroadcastAvgAggregateOutputType | null
    _sum: BroadcastSumAggregateOutputType | null
    _min: BroadcastMinAggregateOutputType | null
    _max: BroadcastMaxAggregateOutputType | null
  }

  type GetBroadcastGroupByPayload<T extends BroadcastGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BroadcastGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BroadcastGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BroadcastGroupByOutputType[P]>
            : GetScalarType<T[P], BroadcastGroupByOutputType[P]>
        }
      >
    >


  export type BroadcastSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    adminId?: boolean
    title?: boolean
    message?: boolean
    imageUrl?: boolean
    actionUrl?: boolean
    target?: boolean
    targetRegionId?: boolean
    sendToBot?: boolean
    sendToWebApp?: boolean
    status?: boolean
    scheduledFor?: boolean
    totalRecipients?: boolean
    sentCount?: boolean
    deliveredCount?: boolean
    readCount?: boolean
    clickCount?: boolean
    failedCount?: boolean
    errorMessage?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    admin?: boolean | UserDefaultArgs<ExtArgs>
    targetRegion?: boolean | Broadcast$targetRegionArgs<ExtArgs>
  }, ExtArgs["result"]["broadcast"]>

  export type BroadcastSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    adminId?: boolean
    title?: boolean
    message?: boolean
    imageUrl?: boolean
    actionUrl?: boolean
    target?: boolean
    targetRegionId?: boolean
    sendToBot?: boolean
    sendToWebApp?: boolean
    status?: boolean
    scheduledFor?: boolean
    totalRecipients?: boolean
    sentCount?: boolean
    deliveredCount?: boolean
    readCount?: boolean
    clickCount?: boolean
    failedCount?: boolean
    errorMessage?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    admin?: boolean | UserDefaultArgs<ExtArgs>
    targetRegion?: boolean | Broadcast$targetRegionArgs<ExtArgs>
  }, ExtArgs["result"]["broadcast"]>

  export type BroadcastSelectScalar = {
    id?: boolean
    adminId?: boolean
    title?: boolean
    message?: boolean
    imageUrl?: boolean
    actionUrl?: boolean
    target?: boolean
    targetRegionId?: boolean
    sendToBot?: boolean
    sendToWebApp?: boolean
    status?: boolean
    scheduledFor?: boolean
    totalRecipients?: boolean
    sentCount?: boolean
    deliveredCount?: boolean
    readCount?: boolean
    clickCount?: boolean
    failedCount?: boolean
    errorMessage?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type BroadcastInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    admin?: boolean | UserDefaultArgs<ExtArgs>
    targetRegion?: boolean | Broadcast$targetRegionArgs<ExtArgs>
  }
  export type BroadcastIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    admin?: boolean | UserDefaultArgs<ExtArgs>
    targetRegion?: boolean | Broadcast$targetRegionArgs<ExtArgs>
  }

  export type $BroadcastPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Broadcast"
    objects: {
      admin: Prisma.$UserPayload<ExtArgs>
      targetRegion: Prisma.$RegionPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      adminId: string
      title: string
      message: string
      imageUrl: string | null
      actionUrl: string | null
      target: $Enums.BroadcastTarget
      targetRegionId: string | null
      sendToBot: boolean
      sendToWebApp: boolean
      status: $Enums.BroadcastStatus
      scheduledFor: Date | null
      totalRecipients: number
      sentCount: number
      deliveredCount: number
      readCount: number
      clickCount: number
      failedCount: number
      errorMessage: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["broadcast"]>
    composites: {}
  }

  type BroadcastGetPayload<S extends boolean | null | undefined | BroadcastDefaultArgs> = $Result.GetResult<Prisma.$BroadcastPayload, S>

  type BroadcastCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<BroadcastFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: BroadcastCountAggregateInputType | true
    }

  export interface BroadcastDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Broadcast'], meta: { name: 'Broadcast' } }
    /**
     * Find zero or one Broadcast that matches the filter.
     * @param {BroadcastFindUniqueArgs} args - Arguments to find a Broadcast
     * @example
     * // Get one Broadcast
     * const broadcast = await prisma.broadcast.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends BroadcastFindUniqueArgs>(args: SelectSubset<T, BroadcastFindUniqueArgs<ExtArgs>>): Prisma__BroadcastClient<$Result.GetResult<Prisma.$BroadcastPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Broadcast that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {BroadcastFindUniqueOrThrowArgs} args - Arguments to find a Broadcast
     * @example
     * // Get one Broadcast
     * const broadcast = await prisma.broadcast.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends BroadcastFindUniqueOrThrowArgs>(args: SelectSubset<T, BroadcastFindUniqueOrThrowArgs<ExtArgs>>): Prisma__BroadcastClient<$Result.GetResult<Prisma.$BroadcastPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Broadcast that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BroadcastFindFirstArgs} args - Arguments to find a Broadcast
     * @example
     * // Get one Broadcast
     * const broadcast = await prisma.broadcast.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends BroadcastFindFirstArgs>(args?: SelectSubset<T, BroadcastFindFirstArgs<ExtArgs>>): Prisma__BroadcastClient<$Result.GetResult<Prisma.$BroadcastPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Broadcast that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BroadcastFindFirstOrThrowArgs} args - Arguments to find a Broadcast
     * @example
     * // Get one Broadcast
     * const broadcast = await prisma.broadcast.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends BroadcastFindFirstOrThrowArgs>(args?: SelectSubset<T, BroadcastFindFirstOrThrowArgs<ExtArgs>>): Prisma__BroadcastClient<$Result.GetResult<Prisma.$BroadcastPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Broadcasts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BroadcastFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Broadcasts
     * const broadcasts = await prisma.broadcast.findMany()
     * 
     * // Get first 10 Broadcasts
     * const broadcasts = await prisma.broadcast.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const broadcastWithIdOnly = await prisma.broadcast.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends BroadcastFindManyArgs>(args?: SelectSubset<T, BroadcastFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BroadcastPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Broadcast.
     * @param {BroadcastCreateArgs} args - Arguments to create a Broadcast.
     * @example
     * // Create one Broadcast
     * const Broadcast = await prisma.broadcast.create({
     *   data: {
     *     // ... data to create a Broadcast
     *   }
     * })
     * 
     */
    create<T extends BroadcastCreateArgs>(args: SelectSubset<T, BroadcastCreateArgs<ExtArgs>>): Prisma__BroadcastClient<$Result.GetResult<Prisma.$BroadcastPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Broadcasts.
     * @param {BroadcastCreateManyArgs} args - Arguments to create many Broadcasts.
     * @example
     * // Create many Broadcasts
     * const broadcast = await prisma.broadcast.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends BroadcastCreateManyArgs>(args?: SelectSubset<T, BroadcastCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Broadcasts and returns the data saved in the database.
     * @param {BroadcastCreateManyAndReturnArgs} args - Arguments to create many Broadcasts.
     * @example
     * // Create many Broadcasts
     * const broadcast = await prisma.broadcast.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Broadcasts and only return the `id`
     * const broadcastWithIdOnly = await prisma.broadcast.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends BroadcastCreateManyAndReturnArgs>(args?: SelectSubset<T, BroadcastCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BroadcastPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Broadcast.
     * @param {BroadcastDeleteArgs} args - Arguments to delete one Broadcast.
     * @example
     * // Delete one Broadcast
     * const Broadcast = await prisma.broadcast.delete({
     *   where: {
     *     // ... filter to delete one Broadcast
     *   }
     * })
     * 
     */
    delete<T extends BroadcastDeleteArgs>(args: SelectSubset<T, BroadcastDeleteArgs<ExtArgs>>): Prisma__BroadcastClient<$Result.GetResult<Prisma.$BroadcastPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Broadcast.
     * @param {BroadcastUpdateArgs} args - Arguments to update one Broadcast.
     * @example
     * // Update one Broadcast
     * const broadcast = await prisma.broadcast.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends BroadcastUpdateArgs>(args: SelectSubset<T, BroadcastUpdateArgs<ExtArgs>>): Prisma__BroadcastClient<$Result.GetResult<Prisma.$BroadcastPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Broadcasts.
     * @param {BroadcastDeleteManyArgs} args - Arguments to filter Broadcasts to delete.
     * @example
     * // Delete a few Broadcasts
     * const { count } = await prisma.broadcast.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends BroadcastDeleteManyArgs>(args?: SelectSubset<T, BroadcastDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Broadcasts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BroadcastUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Broadcasts
     * const broadcast = await prisma.broadcast.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends BroadcastUpdateManyArgs>(args: SelectSubset<T, BroadcastUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Broadcast.
     * @param {BroadcastUpsertArgs} args - Arguments to update or create a Broadcast.
     * @example
     * // Update or create a Broadcast
     * const broadcast = await prisma.broadcast.upsert({
     *   create: {
     *     // ... data to create a Broadcast
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Broadcast we want to update
     *   }
     * })
     */
    upsert<T extends BroadcastUpsertArgs>(args: SelectSubset<T, BroadcastUpsertArgs<ExtArgs>>): Prisma__BroadcastClient<$Result.GetResult<Prisma.$BroadcastPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Broadcasts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BroadcastCountArgs} args - Arguments to filter Broadcasts to count.
     * @example
     * // Count the number of Broadcasts
     * const count = await prisma.broadcast.count({
     *   where: {
     *     // ... the filter for the Broadcasts we want to count
     *   }
     * })
    **/
    count<T extends BroadcastCountArgs>(
      args?: Subset<T, BroadcastCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BroadcastCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Broadcast.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BroadcastAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BroadcastAggregateArgs>(args: Subset<T, BroadcastAggregateArgs>): Prisma.PrismaPromise<GetBroadcastAggregateType<T>>

    /**
     * Group by Broadcast.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BroadcastGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BroadcastGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BroadcastGroupByArgs['orderBy'] }
        : { orderBy?: BroadcastGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BroadcastGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBroadcastGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Broadcast model
   */
  readonly fields: BroadcastFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Broadcast.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__BroadcastClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    admin<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    targetRegion<T extends Broadcast$targetRegionArgs<ExtArgs> = {}>(args?: Subset<T, Broadcast$targetRegionArgs<ExtArgs>>): Prisma__RegionClient<$Result.GetResult<Prisma.$RegionPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Broadcast model
   */ 
  interface BroadcastFieldRefs {
    readonly id: FieldRef<"Broadcast", 'String'>
    readonly adminId: FieldRef<"Broadcast", 'String'>
    readonly title: FieldRef<"Broadcast", 'String'>
    readonly message: FieldRef<"Broadcast", 'String'>
    readonly imageUrl: FieldRef<"Broadcast", 'String'>
    readonly actionUrl: FieldRef<"Broadcast", 'String'>
    readonly target: FieldRef<"Broadcast", 'BroadcastTarget'>
    readonly targetRegionId: FieldRef<"Broadcast", 'String'>
    readonly sendToBot: FieldRef<"Broadcast", 'Boolean'>
    readonly sendToWebApp: FieldRef<"Broadcast", 'Boolean'>
    readonly status: FieldRef<"Broadcast", 'BroadcastStatus'>
    readonly scheduledFor: FieldRef<"Broadcast", 'DateTime'>
    readonly totalRecipients: FieldRef<"Broadcast", 'Int'>
    readonly sentCount: FieldRef<"Broadcast", 'Int'>
    readonly deliveredCount: FieldRef<"Broadcast", 'Int'>
    readonly readCount: FieldRef<"Broadcast", 'Int'>
    readonly clickCount: FieldRef<"Broadcast", 'Int'>
    readonly failedCount: FieldRef<"Broadcast", 'Int'>
    readonly errorMessage: FieldRef<"Broadcast", 'String'>
    readonly createdAt: FieldRef<"Broadcast", 'DateTime'>
    readonly updatedAt: FieldRef<"Broadcast", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Broadcast findUnique
   */
  export type BroadcastFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Broadcast
     */
    select?: BroadcastSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BroadcastInclude<ExtArgs> | null
    /**
     * Filter, which Broadcast to fetch.
     */
    where: BroadcastWhereUniqueInput
  }

  /**
   * Broadcast findUniqueOrThrow
   */
  export type BroadcastFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Broadcast
     */
    select?: BroadcastSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BroadcastInclude<ExtArgs> | null
    /**
     * Filter, which Broadcast to fetch.
     */
    where: BroadcastWhereUniqueInput
  }

  /**
   * Broadcast findFirst
   */
  export type BroadcastFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Broadcast
     */
    select?: BroadcastSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BroadcastInclude<ExtArgs> | null
    /**
     * Filter, which Broadcast to fetch.
     */
    where?: BroadcastWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Broadcasts to fetch.
     */
    orderBy?: BroadcastOrderByWithRelationInput | BroadcastOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Broadcasts.
     */
    cursor?: BroadcastWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Broadcasts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Broadcasts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Broadcasts.
     */
    distinct?: BroadcastScalarFieldEnum | BroadcastScalarFieldEnum[]
  }

  /**
   * Broadcast findFirstOrThrow
   */
  export type BroadcastFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Broadcast
     */
    select?: BroadcastSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BroadcastInclude<ExtArgs> | null
    /**
     * Filter, which Broadcast to fetch.
     */
    where?: BroadcastWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Broadcasts to fetch.
     */
    orderBy?: BroadcastOrderByWithRelationInput | BroadcastOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Broadcasts.
     */
    cursor?: BroadcastWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Broadcasts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Broadcasts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Broadcasts.
     */
    distinct?: BroadcastScalarFieldEnum | BroadcastScalarFieldEnum[]
  }

  /**
   * Broadcast findMany
   */
  export type BroadcastFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Broadcast
     */
    select?: BroadcastSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BroadcastInclude<ExtArgs> | null
    /**
     * Filter, which Broadcasts to fetch.
     */
    where?: BroadcastWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Broadcasts to fetch.
     */
    orderBy?: BroadcastOrderByWithRelationInput | BroadcastOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Broadcasts.
     */
    cursor?: BroadcastWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Broadcasts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Broadcasts.
     */
    skip?: number
    distinct?: BroadcastScalarFieldEnum | BroadcastScalarFieldEnum[]
  }

  /**
   * Broadcast create
   */
  export type BroadcastCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Broadcast
     */
    select?: BroadcastSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BroadcastInclude<ExtArgs> | null
    /**
     * The data needed to create a Broadcast.
     */
    data: XOR<BroadcastCreateInput, BroadcastUncheckedCreateInput>
  }

  /**
   * Broadcast createMany
   */
  export type BroadcastCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Broadcasts.
     */
    data: BroadcastCreateManyInput | BroadcastCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Broadcast createManyAndReturn
   */
  export type BroadcastCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Broadcast
     */
    select?: BroadcastSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Broadcasts.
     */
    data: BroadcastCreateManyInput | BroadcastCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BroadcastIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Broadcast update
   */
  export type BroadcastUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Broadcast
     */
    select?: BroadcastSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BroadcastInclude<ExtArgs> | null
    /**
     * The data needed to update a Broadcast.
     */
    data: XOR<BroadcastUpdateInput, BroadcastUncheckedUpdateInput>
    /**
     * Choose, which Broadcast to update.
     */
    where: BroadcastWhereUniqueInput
  }

  /**
   * Broadcast updateMany
   */
  export type BroadcastUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Broadcasts.
     */
    data: XOR<BroadcastUpdateManyMutationInput, BroadcastUncheckedUpdateManyInput>
    /**
     * Filter which Broadcasts to update
     */
    where?: BroadcastWhereInput
  }

  /**
   * Broadcast upsert
   */
  export type BroadcastUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Broadcast
     */
    select?: BroadcastSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BroadcastInclude<ExtArgs> | null
    /**
     * The filter to search for the Broadcast to update in case it exists.
     */
    where: BroadcastWhereUniqueInput
    /**
     * In case the Broadcast found by the `where` argument doesn't exist, create a new Broadcast with this data.
     */
    create: XOR<BroadcastCreateInput, BroadcastUncheckedCreateInput>
    /**
     * In case the Broadcast was found with the provided `where` argument, update it with this data.
     */
    update: XOR<BroadcastUpdateInput, BroadcastUncheckedUpdateInput>
  }

  /**
   * Broadcast delete
   */
  export type BroadcastDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Broadcast
     */
    select?: BroadcastSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BroadcastInclude<ExtArgs> | null
    /**
     * Filter which Broadcast to delete.
     */
    where: BroadcastWhereUniqueInput
  }

  /**
   * Broadcast deleteMany
   */
  export type BroadcastDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Broadcasts to delete
     */
    where?: BroadcastWhereInput
  }

  /**
   * Broadcast.targetRegion
   */
  export type Broadcast$targetRegionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Region
     */
    select?: RegionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegionInclude<ExtArgs> | null
    where?: RegionWhereInput
  }

  /**
   * Broadcast without action
   */
  export type BroadcastDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Broadcast
     */
    select?: BroadcastSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BroadcastInclude<ExtArgs> | null
  }


  /**
   * Model Config
   */

  export type AggregateConfig = {
    _count: ConfigCountAggregateOutputType | null
    _min: ConfigMinAggregateOutputType | null
    _max: ConfigMaxAggregateOutputType | null
  }

  export type ConfigMinAggregateOutputType = {
    id: string | null
    key: string | null
    value: string | null
    description: string | null
    scope: string | null
    isSystem: boolean | null
    isEncrypted: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ConfigMaxAggregateOutputType = {
    id: string | null
    key: string | null
    value: string | null
    description: string | null
    scope: string | null
    isSystem: boolean | null
    isEncrypted: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ConfigCountAggregateOutputType = {
    id: number
    key: number
    value: number
    description: number
    scope: number
    isSystem: number
    isEncrypted: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ConfigMinAggregateInputType = {
    id?: true
    key?: true
    value?: true
    description?: true
    scope?: true
    isSystem?: true
    isEncrypted?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ConfigMaxAggregateInputType = {
    id?: true
    key?: true
    value?: true
    description?: true
    scope?: true
    isSystem?: true
    isEncrypted?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ConfigCountAggregateInputType = {
    id?: true
    key?: true
    value?: true
    description?: true
    scope?: true
    isSystem?: true
    isEncrypted?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ConfigAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Config to aggregate.
     */
    where?: ConfigWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Configs to fetch.
     */
    orderBy?: ConfigOrderByWithRelationInput | ConfigOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ConfigWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Configs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Configs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Configs
    **/
    _count?: true | ConfigCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ConfigMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ConfigMaxAggregateInputType
  }

  export type GetConfigAggregateType<T extends ConfigAggregateArgs> = {
        [P in keyof T & keyof AggregateConfig]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateConfig[P]>
      : GetScalarType<T[P], AggregateConfig[P]>
  }




  export type ConfigGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ConfigWhereInput
    orderBy?: ConfigOrderByWithAggregationInput | ConfigOrderByWithAggregationInput[]
    by: ConfigScalarFieldEnum[] | ConfigScalarFieldEnum
    having?: ConfigScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ConfigCountAggregateInputType | true
    _min?: ConfigMinAggregateInputType
    _max?: ConfigMaxAggregateInputType
  }

  export type ConfigGroupByOutputType = {
    id: string
    key: string
    value: string
    description: string | null
    scope: string
    isSystem: boolean
    isEncrypted: boolean
    createdAt: Date
    updatedAt: Date
    _count: ConfigCountAggregateOutputType | null
    _min: ConfigMinAggregateOutputType | null
    _max: ConfigMaxAggregateOutputType | null
  }

  type GetConfigGroupByPayload<T extends ConfigGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ConfigGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ConfigGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ConfigGroupByOutputType[P]>
            : GetScalarType<T[P], ConfigGroupByOutputType[P]>
        }
      >
    >


  export type ConfigSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    key?: boolean
    value?: boolean
    description?: boolean
    scope?: boolean
    isSystem?: boolean
    isEncrypted?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["config"]>

  export type ConfigSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    key?: boolean
    value?: boolean
    description?: boolean
    scope?: boolean
    isSystem?: boolean
    isEncrypted?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["config"]>

  export type ConfigSelectScalar = {
    id?: boolean
    key?: boolean
    value?: boolean
    description?: boolean
    scope?: boolean
    isSystem?: boolean
    isEncrypted?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }


  export type $ConfigPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Config"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      key: string
      value: string
      description: string | null
      scope: string
      isSystem: boolean
      isEncrypted: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["config"]>
    composites: {}
  }

  type ConfigGetPayload<S extends boolean | null | undefined | ConfigDefaultArgs> = $Result.GetResult<Prisma.$ConfigPayload, S>

  type ConfigCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ConfigFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ConfigCountAggregateInputType | true
    }

  export interface ConfigDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Config'], meta: { name: 'Config' } }
    /**
     * Find zero or one Config that matches the filter.
     * @param {ConfigFindUniqueArgs} args - Arguments to find a Config
     * @example
     * // Get one Config
     * const config = await prisma.config.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ConfigFindUniqueArgs>(args: SelectSubset<T, ConfigFindUniqueArgs<ExtArgs>>): Prisma__ConfigClient<$Result.GetResult<Prisma.$ConfigPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Config that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ConfigFindUniqueOrThrowArgs} args - Arguments to find a Config
     * @example
     * // Get one Config
     * const config = await prisma.config.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ConfigFindUniqueOrThrowArgs>(args: SelectSubset<T, ConfigFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ConfigClient<$Result.GetResult<Prisma.$ConfigPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Config that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfigFindFirstArgs} args - Arguments to find a Config
     * @example
     * // Get one Config
     * const config = await prisma.config.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ConfigFindFirstArgs>(args?: SelectSubset<T, ConfigFindFirstArgs<ExtArgs>>): Prisma__ConfigClient<$Result.GetResult<Prisma.$ConfigPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Config that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfigFindFirstOrThrowArgs} args - Arguments to find a Config
     * @example
     * // Get one Config
     * const config = await prisma.config.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ConfigFindFirstOrThrowArgs>(args?: SelectSubset<T, ConfigFindFirstOrThrowArgs<ExtArgs>>): Prisma__ConfigClient<$Result.GetResult<Prisma.$ConfigPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Configs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfigFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Configs
     * const configs = await prisma.config.findMany()
     * 
     * // Get first 10 Configs
     * const configs = await prisma.config.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const configWithIdOnly = await prisma.config.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ConfigFindManyArgs>(args?: SelectSubset<T, ConfigFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ConfigPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Config.
     * @param {ConfigCreateArgs} args - Arguments to create a Config.
     * @example
     * // Create one Config
     * const Config = await prisma.config.create({
     *   data: {
     *     // ... data to create a Config
     *   }
     * })
     * 
     */
    create<T extends ConfigCreateArgs>(args: SelectSubset<T, ConfigCreateArgs<ExtArgs>>): Prisma__ConfigClient<$Result.GetResult<Prisma.$ConfigPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Configs.
     * @param {ConfigCreateManyArgs} args - Arguments to create many Configs.
     * @example
     * // Create many Configs
     * const config = await prisma.config.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ConfigCreateManyArgs>(args?: SelectSubset<T, ConfigCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Configs and returns the data saved in the database.
     * @param {ConfigCreateManyAndReturnArgs} args - Arguments to create many Configs.
     * @example
     * // Create many Configs
     * const config = await prisma.config.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Configs and only return the `id`
     * const configWithIdOnly = await prisma.config.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ConfigCreateManyAndReturnArgs>(args?: SelectSubset<T, ConfigCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ConfigPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Config.
     * @param {ConfigDeleteArgs} args - Arguments to delete one Config.
     * @example
     * // Delete one Config
     * const Config = await prisma.config.delete({
     *   where: {
     *     // ... filter to delete one Config
     *   }
     * })
     * 
     */
    delete<T extends ConfigDeleteArgs>(args: SelectSubset<T, ConfigDeleteArgs<ExtArgs>>): Prisma__ConfigClient<$Result.GetResult<Prisma.$ConfigPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Config.
     * @param {ConfigUpdateArgs} args - Arguments to update one Config.
     * @example
     * // Update one Config
     * const config = await prisma.config.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ConfigUpdateArgs>(args: SelectSubset<T, ConfigUpdateArgs<ExtArgs>>): Prisma__ConfigClient<$Result.GetResult<Prisma.$ConfigPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Configs.
     * @param {ConfigDeleteManyArgs} args - Arguments to filter Configs to delete.
     * @example
     * // Delete a few Configs
     * const { count } = await prisma.config.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ConfigDeleteManyArgs>(args?: SelectSubset<T, ConfigDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Configs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfigUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Configs
     * const config = await prisma.config.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ConfigUpdateManyArgs>(args: SelectSubset<T, ConfigUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Config.
     * @param {ConfigUpsertArgs} args - Arguments to update or create a Config.
     * @example
     * // Update or create a Config
     * const config = await prisma.config.upsert({
     *   create: {
     *     // ... data to create a Config
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Config we want to update
     *   }
     * })
     */
    upsert<T extends ConfigUpsertArgs>(args: SelectSubset<T, ConfigUpsertArgs<ExtArgs>>): Prisma__ConfigClient<$Result.GetResult<Prisma.$ConfigPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Configs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfigCountArgs} args - Arguments to filter Configs to count.
     * @example
     * // Count the number of Configs
     * const count = await prisma.config.count({
     *   where: {
     *     // ... the filter for the Configs we want to count
     *   }
     * })
    **/
    count<T extends ConfigCountArgs>(
      args?: Subset<T, ConfigCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ConfigCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Config.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfigAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ConfigAggregateArgs>(args: Subset<T, ConfigAggregateArgs>): Prisma.PrismaPromise<GetConfigAggregateType<T>>

    /**
     * Group by Config.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfigGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ConfigGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ConfigGroupByArgs['orderBy'] }
        : { orderBy?: ConfigGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ConfigGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetConfigGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Config model
   */
  readonly fields: ConfigFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Config.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ConfigClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Config model
   */ 
  interface ConfigFieldRefs {
    readonly id: FieldRef<"Config", 'String'>
    readonly key: FieldRef<"Config", 'String'>
    readonly value: FieldRef<"Config", 'String'>
    readonly description: FieldRef<"Config", 'String'>
    readonly scope: FieldRef<"Config", 'String'>
    readonly isSystem: FieldRef<"Config", 'Boolean'>
    readonly isEncrypted: FieldRef<"Config", 'Boolean'>
    readonly createdAt: FieldRef<"Config", 'DateTime'>
    readonly updatedAt: FieldRef<"Config", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Config findUnique
   */
  export type ConfigFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Config
     */
    select?: ConfigSelect<ExtArgs> | null
    /**
     * Filter, which Config to fetch.
     */
    where: ConfigWhereUniqueInput
  }

  /**
   * Config findUniqueOrThrow
   */
  export type ConfigFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Config
     */
    select?: ConfigSelect<ExtArgs> | null
    /**
     * Filter, which Config to fetch.
     */
    where: ConfigWhereUniqueInput
  }

  /**
   * Config findFirst
   */
  export type ConfigFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Config
     */
    select?: ConfigSelect<ExtArgs> | null
    /**
     * Filter, which Config to fetch.
     */
    where?: ConfigWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Configs to fetch.
     */
    orderBy?: ConfigOrderByWithRelationInput | ConfigOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Configs.
     */
    cursor?: ConfigWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Configs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Configs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Configs.
     */
    distinct?: ConfigScalarFieldEnum | ConfigScalarFieldEnum[]
  }

  /**
   * Config findFirstOrThrow
   */
  export type ConfigFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Config
     */
    select?: ConfigSelect<ExtArgs> | null
    /**
     * Filter, which Config to fetch.
     */
    where?: ConfigWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Configs to fetch.
     */
    orderBy?: ConfigOrderByWithRelationInput | ConfigOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Configs.
     */
    cursor?: ConfigWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Configs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Configs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Configs.
     */
    distinct?: ConfigScalarFieldEnum | ConfigScalarFieldEnum[]
  }

  /**
   * Config findMany
   */
  export type ConfigFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Config
     */
    select?: ConfigSelect<ExtArgs> | null
    /**
     * Filter, which Configs to fetch.
     */
    where?: ConfigWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Configs to fetch.
     */
    orderBy?: ConfigOrderByWithRelationInput | ConfigOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Configs.
     */
    cursor?: ConfigWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Configs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Configs.
     */
    skip?: number
    distinct?: ConfigScalarFieldEnum | ConfigScalarFieldEnum[]
  }

  /**
   * Config create
   */
  export type ConfigCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Config
     */
    select?: ConfigSelect<ExtArgs> | null
    /**
     * The data needed to create a Config.
     */
    data: XOR<ConfigCreateInput, ConfigUncheckedCreateInput>
  }

  /**
   * Config createMany
   */
  export type ConfigCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Configs.
     */
    data: ConfigCreateManyInput | ConfigCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Config createManyAndReturn
   */
  export type ConfigCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Config
     */
    select?: ConfigSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Configs.
     */
    data: ConfigCreateManyInput | ConfigCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Config update
   */
  export type ConfigUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Config
     */
    select?: ConfigSelect<ExtArgs> | null
    /**
     * The data needed to update a Config.
     */
    data: XOR<ConfigUpdateInput, ConfigUncheckedUpdateInput>
    /**
     * Choose, which Config to update.
     */
    where: ConfigWhereUniqueInput
  }

  /**
   * Config updateMany
   */
  export type ConfigUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Configs.
     */
    data: XOR<ConfigUpdateManyMutationInput, ConfigUncheckedUpdateManyInput>
    /**
     * Filter which Configs to update
     */
    where?: ConfigWhereInput
  }

  /**
   * Config upsert
   */
  export type ConfigUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Config
     */
    select?: ConfigSelect<ExtArgs> | null
    /**
     * The filter to search for the Config to update in case it exists.
     */
    where: ConfigWhereUniqueInput
    /**
     * In case the Config found by the `where` argument doesn't exist, create a new Config with this data.
     */
    create: XOR<ConfigCreateInput, ConfigUncheckedCreateInput>
    /**
     * In case the Config was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ConfigUpdateInput, ConfigUncheckedUpdateInput>
  }

  /**
   * Config delete
   */
  export type ConfigDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Config
     */
    select?: ConfigSelect<ExtArgs> | null
    /**
     * Filter which Config to delete.
     */
    where: ConfigWhereUniqueInput
  }

  /**
   * Config deleteMany
   */
  export type ConfigDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Configs to delete
     */
    where?: ConfigWhereInput
  }

  /**
   * Config without action
   */
  export type ConfigDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Config
     */
    select?: ConfigSelect<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UserScalarFieldEnum: {
    id: 'id',
    telegramId: 'telegramId',
    username: 'username',
    firstName: 'firstName',
    lastName: 'lastName',
    phone: 'phone',
    email: 'email',
    role: 'role',
    balance: 'balance',
    frozenBalance: 'frozenBalance',
    totalEarned: 'totalEarned',
    orderLimit: 'orderLimit',
    createLimit: 'createLimit',
    completedOrders: 'completedOrders',
    cancelledOrders: 'cancelledOrders',
    averageRating: 'averageRating',
    totalReviews: 'totalReviews',
    hasActivePlan: 'hasActivePlan',
    planExpiresAt: 'planExpiresAt',
    referralCode: 'referralCode',
    referredById: 'referredById',
    isActive: 'isActive',
    isBanned: 'isBanned',
    banReason: 'banReason',
    lastSeenAt: 'lastSeenAt',
    notificationsEnabled: 'notificationsEnabled',
    emailNotifications: 'emailNotifications',
    activityLog: 'activityLog',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const RegionScalarFieldEnum: {
    id: 'id',
    name: 'name',
    code: 'code',
    regionCode: 'regionCode',
    subRegions: 'subRegions',
    centerLatitude: 'centerLatitude',
    centerLongitude: 'centerLongitude',
    oneTimePlanPrice: 'oneTimePlanPrice',
    monthlyPlanPrice: 'monthlyPlanPrice',
    isActive: 'isActive',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type RegionScalarFieldEnum = (typeof RegionScalarFieldEnum)[keyof typeof RegionScalarFieldEnum]


  export const UserRegionScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    regionId: 'regionId',
    regionCode: 'regionCode',
    activeSubRegions: 'activeSubRegions',
    planType: 'planType',
    paidUntil: 'paidUntil',
    isActive: 'isActive',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type UserRegionScalarFieldEnum = (typeof UserRegionScalarFieldEnum)[keyof typeof UserRegionScalarFieldEnum]


  export const VehicleCategoryScalarFieldEnum: {
    id: 'id',
    name: 'name',
    displayName: 'displayName',
    description: 'description',
    iconUrl: 'iconUrl',
    sortOrder: 'sortOrder',
    isActive: 'isActive',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type VehicleCategoryScalarFieldEnum = (typeof VehicleCategoryScalarFieldEnum)[keyof typeof VehicleCategoryScalarFieldEnum]


  export const VehicleTypeScalarFieldEnum: {
    id: 'id',
    categoryId: 'categoryId',
    name: 'name',
    displayName: 'displayName',
    description: 'description',
    iconUrl: 'iconUrl',
    sortOrder: 'sortOrder',
    isActive: 'isActive',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type VehicleTypeScalarFieldEnum = (typeof VehicleTypeScalarFieldEnum)[keyof typeof VehicleTypeScalarFieldEnum]


  export const VehicleSubtypeScalarFieldEnum: {
    id: 'id',
    typeId: 'typeId',
    name: 'name',
    displayName: 'displayName',
    description: 'description',
    iconUrl: 'iconUrl',
    sortOrder: 'sortOrder',
    isActive: 'isActive',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type VehicleSubtypeScalarFieldEnum = (typeof VehicleSubtypeScalarFieldEnum)[keyof typeof VehicleSubtypeScalarFieldEnum]


  export const UserVehicleScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    subtypeId: 'subtypeId',
    brand: 'brand',
    model: 'model',
    year: 'year',
    licensePlate: 'licensePlate',
    color: 'color',
    loadCapacity: 'loadCapacity',
    volumeCapacity: 'volumeCapacity',
    hasRefrigerator: 'hasRefrigerator',
    hasLifting: 'hasLifting',
    canCarryFragile: 'canCarryFragile',
    photos: 'photos',
    documents: 'documents',
    isActive: 'isActive',
    isVerified: 'isVerified',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type UserVehicleScalarFieldEnum = (typeof UserVehicleScalarFieldEnum)[keyof typeof UserVehicleScalarFieldEnum]


  export const OrderScalarFieldEnum: {
    id: 'id',
    orderNumber: 'orderNumber',
    customerId: 'customerId',
    executorId: 'executorId',
    regionId: 'regionId',
    vehicleSubtypeId: 'vehicleSubtypeId',
    type: 'type',
    title: 'title',
    description: 'description',
    pickupAddress: 'pickupAddress',
    deliveryAddress: 'deliveryAddress',
    workAddress: 'workAddress',
    pickupLatitude: 'pickupLatitude',
    pickupLongitude: 'pickupLongitude',
    deliveryLatitude: 'deliveryLatitude',
    deliveryLongitude: 'deliveryLongitude',
    regionCode: 'regionCode',
    subRegion: 'subRegion',
    scheduledDate: 'scheduledDate',
    scheduledTime: 'scheduledTime',
    deadlineDate: 'deadlineDate',
    isUrgent: 'isUrgent',
    budgetFrom: 'budgetFrom',
    budgetTo: 'budgetTo',
    proposedPrice: 'proposedPrice',
    agreedPrice: 'agreedPrice',
    isPriceFixed: 'isPriceFixed',
    cargoWeight: 'cargoWeight',
    cargoVolume: 'cargoVolume',
    cargoDescription: 'cargoDescription',
    estimatedDistance: 'estimatedDistance',
    needsRefrigerator: 'needsRefrigerator',
    needsLifting: 'needsLifting',
    isFragile: 'isFragile',
    passengerCount: 'passengerCount',
    requirements: 'requirements',
    customerComment: 'customerComment',
    executorComment: 'executorComment',
    status: 'status',
    moderationComment: 'moderationComment',
    moderatedAt: 'moderatedAt',
    moderatedById: 'moderatedById',
    isSentToExecutors: 'isSentToExecutors',
    sentToAllRegions: 'sentToAllRegions',
    viewsCount: 'viewsCount',
    responsesCount: 'responsesCount',
    contactPhone: 'contactPhone',
    contactName: 'contactName',
    photos: 'photos',
    documents: 'documents',
    activityLog: 'activityLog',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type OrderScalarFieldEnum = (typeof OrderScalarFieldEnum)[keyof typeof OrderScalarFieldEnum]


  export const OrderResponseScalarFieldEnum: {
    id: 'id',
    orderId: 'orderId',
    executorId: 'executorId',
    proposedPrice: 'proposedPrice',
    comment: 'comment',
    estimatedDuration: 'estimatedDuration',
    status: 'status',
    vehiclePhotos: 'vehiclePhotos',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type OrderResponseScalarFieldEnum = (typeof OrderResponseScalarFieldEnum)[keyof typeof OrderResponseScalarFieldEnum]


  export const PaymentScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    tinkoffPaymentId: 'tinkoffPaymentId',
    tinkoffStatus: 'tinkoffStatus',
    amount: 'amount',
    description: 'description',
    status: 'status',
    metadata: 'metadata',
    paidAt: 'paidAt',
    expiresAt: 'expiresAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type PaymentScalarFieldEnum = (typeof PaymentScalarFieldEnum)[keyof typeof PaymentScalarFieldEnum]


  export const PaymentTransactionScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    orderId: 'orderId',
    type: 'type',
    amount: 'amount',
    description: 'description',
    status: 'status',
    paymentMethod: 'paymentMethod',
    externalId: 'externalId',
    metadata: 'metadata',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type PaymentTransactionScalarFieldEnum = (typeof PaymentTransactionScalarFieldEnum)[keyof typeof PaymentTransactionScalarFieldEnum]


  export const SessionScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    clientType: 'clientType',
    chatId: 'chatId',
    webAppInitData: 'webAppInitData',
    userAgent: 'userAgent',
    ipAddress: 'ipAddress',
    currentState: 'currentState',
    contextData: 'contextData',
    lastActivity: 'lastActivity',
    expiresAt: 'expiresAt',
    status: 'status',
    deviceInfo: 'deviceInfo',
    timezone: 'timezone',
    language: 'language',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type SessionScalarFieldEnum = (typeof SessionScalarFieldEnum)[keyof typeof SessionScalarFieldEnum]


  export const NotificationScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    title: 'title',
    message: 'message',
    type: 'type',
    sendToTelegram: 'sendToTelegram',
    sendToEmail: 'sendToEmail',
    sendToWebApp: 'sendToWebApp',
    isRead: 'isRead',
    isDelivered: 'isDelivered',
    scheduledFor: 'scheduledFor',
    sentAt: 'sentAt',
    iconUrl: 'iconUrl',
    actionUrl: 'actionUrl',
    metadata: 'metadata',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type NotificationScalarFieldEnum = (typeof NotificationScalarFieldEnum)[keyof typeof NotificationScalarFieldEnum]


  export const AdminActionScalarFieldEnum: {
    id: 'id',
    adminId: 'adminId',
    type: 'type',
    targetId: 'targetId',
    targetType: 'targetType',
    description: 'description',
    comment: 'comment',
    metadata: 'metadata',
    ipAddress: 'ipAddress',
    userAgent: 'userAgent',
    clientType: 'clientType',
    createdAt: 'createdAt'
  };

  export type AdminActionScalarFieldEnum = (typeof AdminActionScalarFieldEnum)[keyof typeof AdminActionScalarFieldEnum]


  export const BroadcastScalarFieldEnum: {
    id: 'id',
    adminId: 'adminId',
    title: 'title',
    message: 'message',
    imageUrl: 'imageUrl',
    actionUrl: 'actionUrl',
    target: 'target',
    targetRegionId: 'targetRegionId',
    sendToBot: 'sendToBot',
    sendToWebApp: 'sendToWebApp',
    status: 'status',
    scheduledFor: 'scheduledFor',
    totalRecipients: 'totalRecipients',
    sentCount: 'sentCount',
    deliveredCount: 'deliveredCount',
    readCount: 'readCount',
    clickCount: 'clickCount',
    failedCount: 'failedCount',
    errorMessage: 'errorMessage',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type BroadcastScalarFieldEnum = (typeof BroadcastScalarFieldEnum)[keyof typeof BroadcastScalarFieldEnum]


  export const ConfigScalarFieldEnum: {
    id: 'id',
    key: 'key',
    value: 'value',
    description: 'description',
    scope: 'scope',
    isSystem: 'isSystem',
    isEncrypted: 'isEncrypted',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ConfigScalarFieldEnum = (typeof ConfigScalarFieldEnum)[keyof typeof ConfigScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const JsonNullValueInput: {
    JsonNull: typeof JsonNull
  };

  export type JsonNullValueInput = (typeof JsonNullValueInput)[keyof typeof JsonNullValueInput]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'BigInt'
   */
  export type BigIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BigInt'>
    


  /**
   * Reference to a field of type 'BigInt[]'
   */
  export type ListBigIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BigInt[]'>
    


  /**
   * Reference to a field of type 'RoleType'
   */
  export type EnumRoleTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'RoleType'>
    


  /**
   * Reference to a field of type 'RoleType[]'
   */
  export type ListEnumRoleTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'RoleType[]'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'TariffType'
   */
  export type EnumTariffTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TariffType'>
    


  /**
   * Reference to a field of type 'TariffType[]'
   */
  export type ListEnumTariffTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TariffType[]'>
    


  /**
   * Reference to a field of type 'OrderType'
   */
  export type EnumOrderTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'OrderType'>
    


  /**
   * Reference to a field of type 'OrderType[]'
   */
  export type ListEnumOrderTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'OrderType[]'>
    


  /**
   * Reference to a field of type 'OrderStatus'
   */
  export type EnumOrderStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'OrderStatus'>
    


  /**
   * Reference to a field of type 'OrderStatus[]'
   */
  export type ListEnumOrderStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'OrderStatus[]'>
    


  /**
   * Reference to a field of type 'PaymentStatus'
   */
  export type EnumPaymentStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PaymentStatus'>
    


  /**
   * Reference to a field of type 'PaymentStatus[]'
   */
  export type ListEnumPaymentStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PaymentStatus[]'>
    


  /**
   * Reference to a field of type 'ClientType'
   */
  export type EnumClientTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ClientType'>
    


  /**
   * Reference to a field of type 'ClientType[]'
   */
  export type ListEnumClientTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ClientType[]'>
    


  /**
   * Reference to a field of type 'SessionStatus'
   */
  export type EnumSessionStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'SessionStatus'>
    


  /**
   * Reference to a field of type 'SessionStatus[]'
   */
  export type ListEnumSessionStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'SessionStatus[]'>
    


  /**
   * Reference to a field of type 'AdminActionType'
   */
  export type EnumAdminActionTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AdminActionType'>
    


  /**
   * Reference to a field of type 'AdminActionType[]'
   */
  export type ListEnumAdminActionTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AdminActionType[]'>
    


  /**
   * Reference to a field of type 'BroadcastTarget'
   */
  export type EnumBroadcastTargetFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BroadcastTarget'>
    


  /**
   * Reference to a field of type 'BroadcastTarget[]'
   */
  export type ListEnumBroadcastTargetFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BroadcastTarget[]'>
    


  /**
   * Reference to a field of type 'BroadcastStatus'
   */
  export type EnumBroadcastStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BroadcastStatus'>
    


  /**
   * Reference to a field of type 'BroadcastStatus[]'
   */
  export type ListEnumBroadcastStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BroadcastStatus[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: StringFilter<"User"> | string
    telegramId?: BigIntFilter<"User"> | bigint | number
    username?: StringNullableFilter<"User"> | string | null
    firstName?: StringFilter<"User"> | string
    lastName?: StringNullableFilter<"User"> | string | null
    phone?: StringNullableFilter<"User"> | string | null
    email?: StringNullableFilter<"User"> | string | null
    role?: EnumRoleTypeFilter<"User"> | $Enums.RoleType
    balance?: DecimalFilter<"User"> | Decimal | DecimalJsLike | number | string
    frozenBalance?: DecimalFilter<"User"> | Decimal | DecimalJsLike | number | string
    totalEarned?: DecimalFilter<"User"> | Decimal | DecimalJsLike | number | string
    orderLimit?: IntFilter<"User"> | number
    createLimit?: IntFilter<"User"> | number
    completedOrders?: IntFilter<"User"> | number
    cancelledOrders?: IntFilter<"User"> | number
    averageRating?: DecimalFilter<"User"> | Decimal | DecimalJsLike | number | string
    totalReviews?: IntFilter<"User"> | number
    hasActivePlan?: BoolFilter<"User"> | boolean
    planExpiresAt?: DateTimeNullableFilter<"User"> | Date | string | null
    referralCode?: StringNullableFilter<"User"> | string | null
    referredById?: StringNullableFilter<"User"> | string | null
    isActive?: BoolFilter<"User"> | boolean
    isBanned?: BoolFilter<"User"> | boolean
    banReason?: StringNullableFilter<"User"> | string | null
    lastSeenAt?: DateTimeNullableFilter<"User"> | Date | string | null
    notificationsEnabled?: BoolFilter<"User"> | boolean
    emailNotifications?: BoolFilter<"User"> | boolean
    activityLog?: JsonFilter<"User">
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    referredUsers?: UserListRelationFilter
    referrer?: XOR<UserNullableRelationFilter, UserWhereInput> | null
    vehicles?: UserVehicleListRelationFilter
    ordersAsCustomer?: OrderListRelationFilter
    ordersAsExecutor?: OrderListRelationFilter
    orderResponses?: OrderResponseListRelationFilter
    payments?: PaymentListRelationFilter
    sessions?: SessionListRelationFilter
    notifications?: NotificationListRelationFilter
    userRegions?: UserRegionListRelationFilter
    adminActions?: AdminActionListRelationFilter
    broadcasts?: BroadcastListRelationFilter
    paymentTransactions?: PaymentTransactionListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    telegramId?: SortOrder
    username?: SortOrderInput | SortOrder
    firstName?: SortOrder
    lastName?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    role?: SortOrder
    balance?: SortOrder
    frozenBalance?: SortOrder
    totalEarned?: SortOrder
    orderLimit?: SortOrder
    createLimit?: SortOrder
    completedOrders?: SortOrder
    cancelledOrders?: SortOrder
    averageRating?: SortOrder
    totalReviews?: SortOrder
    hasActivePlan?: SortOrder
    planExpiresAt?: SortOrderInput | SortOrder
    referralCode?: SortOrderInput | SortOrder
    referredById?: SortOrderInput | SortOrder
    isActive?: SortOrder
    isBanned?: SortOrder
    banReason?: SortOrderInput | SortOrder
    lastSeenAt?: SortOrderInput | SortOrder
    notificationsEnabled?: SortOrder
    emailNotifications?: SortOrder
    activityLog?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    referredUsers?: UserOrderByRelationAggregateInput
    referrer?: UserOrderByWithRelationInput
    vehicles?: UserVehicleOrderByRelationAggregateInput
    ordersAsCustomer?: OrderOrderByRelationAggregateInput
    ordersAsExecutor?: OrderOrderByRelationAggregateInput
    orderResponses?: OrderResponseOrderByRelationAggregateInput
    payments?: PaymentOrderByRelationAggregateInput
    sessions?: SessionOrderByRelationAggregateInput
    notifications?: NotificationOrderByRelationAggregateInput
    userRegions?: UserRegionOrderByRelationAggregateInput
    adminActions?: AdminActionOrderByRelationAggregateInput
    broadcasts?: BroadcastOrderByRelationAggregateInput
    paymentTransactions?: PaymentTransactionOrderByRelationAggregateInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    telegramId?: bigint | number
    referralCode?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    username?: StringNullableFilter<"User"> | string | null
    firstName?: StringFilter<"User"> | string
    lastName?: StringNullableFilter<"User"> | string | null
    phone?: StringNullableFilter<"User"> | string | null
    email?: StringNullableFilter<"User"> | string | null
    role?: EnumRoleTypeFilter<"User"> | $Enums.RoleType
    balance?: DecimalFilter<"User"> | Decimal | DecimalJsLike | number | string
    frozenBalance?: DecimalFilter<"User"> | Decimal | DecimalJsLike | number | string
    totalEarned?: DecimalFilter<"User"> | Decimal | DecimalJsLike | number | string
    orderLimit?: IntFilter<"User"> | number
    createLimit?: IntFilter<"User"> | number
    completedOrders?: IntFilter<"User"> | number
    cancelledOrders?: IntFilter<"User"> | number
    averageRating?: DecimalFilter<"User"> | Decimal | DecimalJsLike | number | string
    totalReviews?: IntFilter<"User"> | number
    hasActivePlan?: BoolFilter<"User"> | boolean
    planExpiresAt?: DateTimeNullableFilter<"User"> | Date | string | null
    referredById?: StringNullableFilter<"User"> | string | null
    isActive?: BoolFilter<"User"> | boolean
    isBanned?: BoolFilter<"User"> | boolean
    banReason?: StringNullableFilter<"User"> | string | null
    lastSeenAt?: DateTimeNullableFilter<"User"> | Date | string | null
    notificationsEnabled?: BoolFilter<"User"> | boolean
    emailNotifications?: BoolFilter<"User"> | boolean
    activityLog?: JsonFilter<"User">
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    referredUsers?: UserListRelationFilter
    referrer?: XOR<UserNullableRelationFilter, UserWhereInput> | null
    vehicles?: UserVehicleListRelationFilter
    ordersAsCustomer?: OrderListRelationFilter
    ordersAsExecutor?: OrderListRelationFilter
    orderResponses?: OrderResponseListRelationFilter
    payments?: PaymentListRelationFilter
    sessions?: SessionListRelationFilter
    notifications?: NotificationListRelationFilter
    userRegions?: UserRegionListRelationFilter
    adminActions?: AdminActionListRelationFilter
    broadcasts?: BroadcastListRelationFilter
    paymentTransactions?: PaymentTransactionListRelationFilter
  }, "id" | "telegramId" | "referralCode">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    telegramId?: SortOrder
    username?: SortOrderInput | SortOrder
    firstName?: SortOrder
    lastName?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    role?: SortOrder
    balance?: SortOrder
    frozenBalance?: SortOrder
    totalEarned?: SortOrder
    orderLimit?: SortOrder
    createLimit?: SortOrder
    completedOrders?: SortOrder
    cancelledOrders?: SortOrder
    averageRating?: SortOrder
    totalReviews?: SortOrder
    hasActivePlan?: SortOrder
    planExpiresAt?: SortOrderInput | SortOrder
    referralCode?: SortOrderInput | SortOrder
    referredById?: SortOrderInput | SortOrder
    isActive?: SortOrder
    isBanned?: SortOrder
    banReason?: SortOrderInput | SortOrder
    lastSeenAt?: SortOrderInput | SortOrder
    notificationsEnabled?: SortOrder
    emailNotifications?: SortOrder
    activityLog?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: UserCountOrderByAggregateInput
    _avg?: UserAvgOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
    _sum?: UserSumOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"User"> | string
    telegramId?: BigIntWithAggregatesFilter<"User"> | bigint | number
    username?: StringNullableWithAggregatesFilter<"User"> | string | null
    firstName?: StringWithAggregatesFilter<"User"> | string
    lastName?: StringNullableWithAggregatesFilter<"User"> | string | null
    phone?: StringNullableWithAggregatesFilter<"User"> | string | null
    email?: StringNullableWithAggregatesFilter<"User"> | string | null
    role?: EnumRoleTypeWithAggregatesFilter<"User"> | $Enums.RoleType
    balance?: DecimalWithAggregatesFilter<"User"> | Decimal | DecimalJsLike | number | string
    frozenBalance?: DecimalWithAggregatesFilter<"User"> | Decimal | DecimalJsLike | number | string
    totalEarned?: DecimalWithAggregatesFilter<"User"> | Decimal | DecimalJsLike | number | string
    orderLimit?: IntWithAggregatesFilter<"User"> | number
    createLimit?: IntWithAggregatesFilter<"User"> | number
    completedOrders?: IntWithAggregatesFilter<"User"> | number
    cancelledOrders?: IntWithAggregatesFilter<"User"> | number
    averageRating?: DecimalWithAggregatesFilter<"User"> | Decimal | DecimalJsLike | number | string
    totalReviews?: IntWithAggregatesFilter<"User"> | number
    hasActivePlan?: BoolWithAggregatesFilter<"User"> | boolean
    planExpiresAt?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    referralCode?: StringNullableWithAggregatesFilter<"User"> | string | null
    referredById?: StringNullableWithAggregatesFilter<"User"> | string | null
    isActive?: BoolWithAggregatesFilter<"User"> | boolean
    isBanned?: BoolWithAggregatesFilter<"User"> | boolean
    banReason?: StringNullableWithAggregatesFilter<"User"> | string | null
    lastSeenAt?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    notificationsEnabled?: BoolWithAggregatesFilter<"User"> | boolean
    emailNotifications?: BoolWithAggregatesFilter<"User"> | boolean
    activityLog?: JsonWithAggregatesFilter<"User">
    createdAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
  }

  export type RegionWhereInput = {
    AND?: RegionWhereInput | RegionWhereInput[]
    OR?: RegionWhereInput[]
    NOT?: RegionWhereInput | RegionWhereInput[]
    id?: StringFilter<"Region"> | string
    name?: StringFilter<"Region"> | string
    code?: StringFilter<"Region"> | string
    regionCode?: StringFilter<"Region"> | string
    subRegions?: JsonFilter<"Region">
    centerLatitude?: DecimalNullableFilter<"Region"> | Decimal | DecimalJsLike | number | string | null
    centerLongitude?: DecimalNullableFilter<"Region"> | Decimal | DecimalJsLike | number | string | null
    oneTimePlanPrice?: DecimalFilter<"Region"> | Decimal | DecimalJsLike | number | string
    monthlyPlanPrice?: DecimalFilter<"Region"> | Decimal | DecimalJsLike | number | string
    isActive?: BoolFilter<"Region"> | boolean
    createdAt?: DateTimeFilter<"Region"> | Date | string
    updatedAt?: DateTimeFilter<"Region"> | Date | string
    orders?: OrderListRelationFilter
    userRegions?: UserRegionListRelationFilter
    broadcasts?: BroadcastListRelationFilter
  }

  export type RegionOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    code?: SortOrder
    regionCode?: SortOrder
    subRegions?: SortOrder
    centerLatitude?: SortOrderInput | SortOrder
    centerLongitude?: SortOrderInput | SortOrder
    oneTimePlanPrice?: SortOrder
    monthlyPlanPrice?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    orders?: OrderOrderByRelationAggregateInput
    userRegions?: UserRegionOrderByRelationAggregateInput
    broadcasts?: BroadcastOrderByRelationAggregateInput
  }

  export type RegionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    name?: string
    code?: string
    regionCode?: string
    AND?: RegionWhereInput | RegionWhereInput[]
    OR?: RegionWhereInput[]
    NOT?: RegionWhereInput | RegionWhereInput[]
    subRegions?: JsonFilter<"Region">
    centerLatitude?: DecimalNullableFilter<"Region"> | Decimal | DecimalJsLike | number | string | null
    centerLongitude?: DecimalNullableFilter<"Region"> | Decimal | DecimalJsLike | number | string | null
    oneTimePlanPrice?: DecimalFilter<"Region"> | Decimal | DecimalJsLike | number | string
    monthlyPlanPrice?: DecimalFilter<"Region"> | Decimal | DecimalJsLike | number | string
    isActive?: BoolFilter<"Region"> | boolean
    createdAt?: DateTimeFilter<"Region"> | Date | string
    updatedAt?: DateTimeFilter<"Region"> | Date | string
    orders?: OrderListRelationFilter
    userRegions?: UserRegionListRelationFilter
    broadcasts?: BroadcastListRelationFilter
  }, "id" | "name" | "code" | "regionCode">

  export type RegionOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    code?: SortOrder
    regionCode?: SortOrder
    subRegions?: SortOrder
    centerLatitude?: SortOrderInput | SortOrder
    centerLongitude?: SortOrderInput | SortOrder
    oneTimePlanPrice?: SortOrder
    monthlyPlanPrice?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: RegionCountOrderByAggregateInput
    _avg?: RegionAvgOrderByAggregateInput
    _max?: RegionMaxOrderByAggregateInput
    _min?: RegionMinOrderByAggregateInput
    _sum?: RegionSumOrderByAggregateInput
  }

  export type RegionScalarWhereWithAggregatesInput = {
    AND?: RegionScalarWhereWithAggregatesInput | RegionScalarWhereWithAggregatesInput[]
    OR?: RegionScalarWhereWithAggregatesInput[]
    NOT?: RegionScalarWhereWithAggregatesInput | RegionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Region"> | string
    name?: StringWithAggregatesFilter<"Region"> | string
    code?: StringWithAggregatesFilter<"Region"> | string
    regionCode?: StringWithAggregatesFilter<"Region"> | string
    subRegions?: JsonWithAggregatesFilter<"Region">
    centerLatitude?: DecimalNullableWithAggregatesFilter<"Region"> | Decimal | DecimalJsLike | number | string | null
    centerLongitude?: DecimalNullableWithAggregatesFilter<"Region"> | Decimal | DecimalJsLike | number | string | null
    oneTimePlanPrice?: DecimalWithAggregatesFilter<"Region"> | Decimal | DecimalJsLike | number | string
    monthlyPlanPrice?: DecimalWithAggregatesFilter<"Region"> | Decimal | DecimalJsLike | number | string
    isActive?: BoolWithAggregatesFilter<"Region"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"Region"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Region"> | Date | string
  }

  export type UserRegionWhereInput = {
    AND?: UserRegionWhereInput | UserRegionWhereInput[]
    OR?: UserRegionWhereInput[]
    NOT?: UserRegionWhereInput | UserRegionWhereInput[]
    id?: StringFilter<"UserRegion"> | string
    userId?: StringFilter<"UserRegion"> | string
    regionId?: StringFilter<"UserRegion"> | string
    regionCode?: StringFilter<"UserRegion"> | string
    activeSubRegions?: JsonFilter<"UserRegion">
    planType?: EnumTariffTypeFilter<"UserRegion"> | $Enums.TariffType
    paidUntil?: DateTimeNullableFilter<"UserRegion"> | Date | string | null
    isActive?: BoolFilter<"UserRegion"> | boolean
    createdAt?: DateTimeFilter<"UserRegion"> | Date | string
    updatedAt?: DateTimeFilter<"UserRegion"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
    region?: XOR<RegionRelationFilter, RegionWhereInput>
  }

  export type UserRegionOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    regionId?: SortOrder
    regionCode?: SortOrder
    activeSubRegions?: SortOrder
    planType?: SortOrder
    paidUntil?: SortOrderInput | SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    user?: UserOrderByWithRelationInput
    region?: RegionOrderByWithRelationInput
  }

  export type UserRegionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    userId_regionId?: UserRegionUserIdRegionIdCompoundUniqueInput
    AND?: UserRegionWhereInput | UserRegionWhereInput[]
    OR?: UserRegionWhereInput[]
    NOT?: UserRegionWhereInput | UserRegionWhereInput[]
    userId?: StringFilter<"UserRegion"> | string
    regionId?: StringFilter<"UserRegion"> | string
    regionCode?: StringFilter<"UserRegion"> | string
    activeSubRegions?: JsonFilter<"UserRegion">
    planType?: EnumTariffTypeFilter<"UserRegion"> | $Enums.TariffType
    paidUntil?: DateTimeNullableFilter<"UserRegion"> | Date | string | null
    isActive?: BoolFilter<"UserRegion"> | boolean
    createdAt?: DateTimeFilter<"UserRegion"> | Date | string
    updatedAt?: DateTimeFilter<"UserRegion"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
    region?: XOR<RegionRelationFilter, RegionWhereInput>
  }, "id" | "userId_regionId">

  export type UserRegionOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    regionId?: SortOrder
    regionCode?: SortOrder
    activeSubRegions?: SortOrder
    planType?: SortOrder
    paidUntil?: SortOrderInput | SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: UserRegionCountOrderByAggregateInput
    _max?: UserRegionMaxOrderByAggregateInput
    _min?: UserRegionMinOrderByAggregateInput
  }

  export type UserRegionScalarWhereWithAggregatesInput = {
    AND?: UserRegionScalarWhereWithAggregatesInput | UserRegionScalarWhereWithAggregatesInput[]
    OR?: UserRegionScalarWhereWithAggregatesInput[]
    NOT?: UserRegionScalarWhereWithAggregatesInput | UserRegionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"UserRegion"> | string
    userId?: StringWithAggregatesFilter<"UserRegion"> | string
    regionId?: StringWithAggregatesFilter<"UserRegion"> | string
    regionCode?: StringWithAggregatesFilter<"UserRegion"> | string
    activeSubRegions?: JsonWithAggregatesFilter<"UserRegion">
    planType?: EnumTariffTypeWithAggregatesFilter<"UserRegion"> | $Enums.TariffType
    paidUntil?: DateTimeNullableWithAggregatesFilter<"UserRegion"> | Date | string | null
    isActive?: BoolWithAggregatesFilter<"UserRegion"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"UserRegion"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"UserRegion"> | Date | string
  }

  export type VehicleCategoryWhereInput = {
    AND?: VehicleCategoryWhereInput | VehicleCategoryWhereInput[]
    OR?: VehicleCategoryWhereInput[]
    NOT?: VehicleCategoryWhereInput | VehicleCategoryWhereInput[]
    id?: StringFilter<"VehicleCategory"> | string
    name?: StringFilter<"VehicleCategory"> | string
    displayName?: StringFilter<"VehicleCategory"> | string
    description?: StringNullableFilter<"VehicleCategory"> | string | null
    iconUrl?: StringNullableFilter<"VehicleCategory"> | string | null
    sortOrder?: IntFilter<"VehicleCategory"> | number
    isActive?: BoolFilter<"VehicleCategory"> | boolean
    createdAt?: DateTimeFilter<"VehicleCategory"> | Date | string
    updatedAt?: DateTimeFilter<"VehicleCategory"> | Date | string
    vehicleTypes?: VehicleTypeListRelationFilter
  }

  export type VehicleCategoryOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    displayName?: SortOrder
    description?: SortOrderInput | SortOrder
    iconUrl?: SortOrderInput | SortOrder
    sortOrder?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    vehicleTypes?: VehicleTypeOrderByRelationAggregateInput
  }

  export type VehicleCategoryWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    name?: string
    AND?: VehicleCategoryWhereInput | VehicleCategoryWhereInput[]
    OR?: VehicleCategoryWhereInput[]
    NOT?: VehicleCategoryWhereInput | VehicleCategoryWhereInput[]
    displayName?: StringFilter<"VehicleCategory"> | string
    description?: StringNullableFilter<"VehicleCategory"> | string | null
    iconUrl?: StringNullableFilter<"VehicleCategory"> | string | null
    sortOrder?: IntFilter<"VehicleCategory"> | number
    isActive?: BoolFilter<"VehicleCategory"> | boolean
    createdAt?: DateTimeFilter<"VehicleCategory"> | Date | string
    updatedAt?: DateTimeFilter<"VehicleCategory"> | Date | string
    vehicleTypes?: VehicleTypeListRelationFilter
  }, "id" | "name">

  export type VehicleCategoryOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    displayName?: SortOrder
    description?: SortOrderInput | SortOrder
    iconUrl?: SortOrderInput | SortOrder
    sortOrder?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: VehicleCategoryCountOrderByAggregateInput
    _avg?: VehicleCategoryAvgOrderByAggregateInput
    _max?: VehicleCategoryMaxOrderByAggregateInput
    _min?: VehicleCategoryMinOrderByAggregateInput
    _sum?: VehicleCategorySumOrderByAggregateInput
  }

  export type VehicleCategoryScalarWhereWithAggregatesInput = {
    AND?: VehicleCategoryScalarWhereWithAggregatesInput | VehicleCategoryScalarWhereWithAggregatesInput[]
    OR?: VehicleCategoryScalarWhereWithAggregatesInput[]
    NOT?: VehicleCategoryScalarWhereWithAggregatesInput | VehicleCategoryScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"VehicleCategory"> | string
    name?: StringWithAggregatesFilter<"VehicleCategory"> | string
    displayName?: StringWithAggregatesFilter<"VehicleCategory"> | string
    description?: StringNullableWithAggregatesFilter<"VehicleCategory"> | string | null
    iconUrl?: StringNullableWithAggregatesFilter<"VehicleCategory"> | string | null
    sortOrder?: IntWithAggregatesFilter<"VehicleCategory"> | number
    isActive?: BoolWithAggregatesFilter<"VehicleCategory"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"VehicleCategory"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"VehicleCategory"> | Date | string
  }

  export type VehicleTypeWhereInput = {
    AND?: VehicleTypeWhereInput | VehicleTypeWhereInput[]
    OR?: VehicleTypeWhereInput[]
    NOT?: VehicleTypeWhereInput | VehicleTypeWhereInput[]
    id?: StringFilter<"VehicleType"> | string
    categoryId?: StringFilter<"VehicleType"> | string
    name?: StringFilter<"VehicleType"> | string
    displayName?: StringFilter<"VehicleType"> | string
    description?: StringNullableFilter<"VehicleType"> | string | null
    iconUrl?: StringNullableFilter<"VehicleType"> | string | null
    sortOrder?: IntFilter<"VehicleType"> | number
    isActive?: BoolFilter<"VehicleType"> | boolean
    createdAt?: DateTimeFilter<"VehicleType"> | Date | string
    updatedAt?: DateTimeFilter<"VehicleType"> | Date | string
    category?: XOR<VehicleCategoryRelationFilter, VehicleCategoryWhereInput>
    vehicleSubtypes?: VehicleSubtypeListRelationFilter
  }

  export type VehicleTypeOrderByWithRelationInput = {
    id?: SortOrder
    categoryId?: SortOrder
    name?: SortOrder
    displayName?: SortOrder
    description?: SortOrderInput | SortOrder
    iconUrl?: SortOrderInput | SortOrder
    sortOrder?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    category?: VehicleCategoryOrderByWithRelationInput
    vehicleSubtypes?: VehicleSubtypeOrderByRelationAggregateInput
  }

  export type VehicleTypeWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    categoryId_name?: VehicleTypeCategoryIdNameCompoundUniqueInput
    AND?: VehicleTypeWhereInput | VehicleTypeWhereInput[]
    OR?: VehicleTypeWhereInput[]
    NOT?: VehicleTypeWhereInput | VehicleTypeWhereInput[]
    categoryId?: StringFilter<"VehicleType"> | string
    name?: StringFilter<"VehicleType"> | string
    displayName?: StringFilter<"VehicleType"> | string
    description?: StringNullableFilter<"VehicleType"> | string | null
    iconUrl?: StringNullableFilter<"VehicleType"> | string | null
    sortOrder?: IntFilter<"VehicleType"> | number
    isActive?: BoolFilter<"VehicleType"> | boolean
    createdAt?: DateTimeFilter<"VehicleType"> | Date | string
    updatedAt?: DateTimeFilter<"VehicleType"> | Date | string
    category?: XOR<VehicleCategoryRelationFilter, VehicleCategoryWhereInput>
    vehicleSubtypes?: VehicleSubtypeListRelationFilter
  }, "id" | "categoryId_name">

  export type VehicleTypeOrderByWithAggregationInput = {
    id?: SortOrder
    categoryId?: SortOrder
    name?: SortOrder
    displayName?: SortOrder
    description?: SortOrderInput | SortOrder
    iconUrl?: SortOrderInput | SortOrder
    sortOrder?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: VehicleTypeCountOrderByAggregateInput
    _avg?: VehicleTypeAvgOrderByAggregateInput
    _max?: VehicleTypeMaxOrderByAggregateInput
    _min?: VehicleTypeMinOrderByAggregateInput
    _sum?: VehicleTypeSumOrderByAggregateInput
  }

  export type VehicleTypeScalarWhereWithAggregatesInput = {
    AND?: VehicleTypeScalarWhereWithAggregatesInput | VehicleTypeScalarWhereWithAggregatesInput[]
    OR?: VehicleTypeScalarWhereWithAggregatesInput[]
    NOT?: VehicleTypeScalarWhereWithAggregatesInput | VehicleTypeScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"VehicleType"> | string
    categoryId?: StringWithAggregatesFilter<"VehicleType"> | string
    name?: StringWithAggregatesFilter<"VehicleType"> | string
    displayName?: StringWithAggregatesFilter<"VehicleType"> | string
    description?: StringNullableWithAggregatesFilter<"VehicleType"> | string | null
    iconUrl?: StringNullableWithAggregatesFilter<"VehicleType"> | string | null
    sortOrder?: IntWithAggregatesFilter<"VehicleType"> | number
    isActive?: BoolWithAggregatesFilter<"VehicleType"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"VehicleType"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"VehicleType"> | Date | string
  }

  export type VehicleSubtypeWhereInput = {
    AND?: VehicleSubtypeWhereInput | VehicleSubtypeWhereInput[]
    OR?: VehicleSubtypeWhereInput[]
    NOT?: VehicleSubtypeWhereInput | VehicleSubtypeWhereInput[]
    id?: StringFilter<"VehicleSubtype"> | string
    typeId?: StringFilter<"VehicleSubtype"> | string
    name?: StringFilter<"VehicleSubtype"> | string
    displayName?: StringFilter<"VehicleSubtype"> | string
    description?: StringNullableFilter<"VehicleSubtype"> | string | null
    iconUrl?: StringNullableFilter<"VehicleSubtype"> | string | null
    sortOrder?: IntFilter<"VehicleSubtype"> | number
    isActive?: BoolFilter<"VehicleSubtype"> | boolean
    createdAt?: DateTimeFilter<"VehicleSubtype"> | Date | string
    updatedAt?: DateTimeFilter<"VehicleSubtype"> | Date | string
    type?: XOR<VehicleTypeRelationFilter, VehicleTypeWhereInput>
    userVehicles?: UserVehicleListRelationFilter
    orders?: OrderListRelationFilter
  }

  export type VehicleSubtypeOrderByWithRelationInput = {
    id?: SortOrder
    typeId?: SortOrder
    name?: SortOrder
    displayName?: SortOrder
    description?: SortOrderInput | SortOrder
    iconUrl?: SortOrderInput | SortOrder
    sortOrder?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    type?: VehicleTypeOrderByWithRelationInput
    userVehicles?: UserVehicleOrderByRelationAggregateInput
    orders?: OrderOrderByRelationAggregateInput
  }

  export type VehicleSubtypeWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    typeId_name?: VehicleSubtypeTypeIdNameCompoundUniqueInput
    AND?: VehicleSubtypeWhereInput | VehicleSubtypeWhereInput[]
    OR?: VehicleSubtypeWhereInput[]
    NOT?: VehicleSubtypeWhereInput | VehicleSubtypeWhereInput[]
    typeId?: StringFilter<"VehicleSubtype"> | string
    name?: StringFilter<"VehicleSubtype"> | string
    displayName?: StringFilter<"VehicleSubtype"> | string
    description?: StringNullableFilter<"VehicleSubtype"> | string | null
    iconUrl?: StringNullableFilter<"VehicleSubtype"> | string | null
    sortOrder?: IntFilter<"VehicleSubtype"> | number
    isActive?: BoolFilter<"VehicleSubtype"> | boolean
    createdAt?: DateTimeFilter<"VehicleSubtype"> | Date | string
    updatedAt?: DateTimeFilter<"VehicleSubtype"> | Date | string
    type?: XOR<VehicleTypeRelationFilter, VehicleTypeWhereInput>
    userVehicles?: UserVehicleListRelationFilter
    orders?: OrderListRelationFilter
  }, "id" | "typeId_name">

  export type VehicleSubtypeOrderByWithAggregationInput = {
    id?: SortOrder
    typeId?: SortOrder
    name?: SortOrder
    displayName?: SortOrder
    description?: SortOrderInput | SortOrder
    iconUrl?: SortOrderInput | SortOrder
    sortOrder?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: VehicleSubtypeCountOrderByAggregateInput
    _avg?: VehicleSubtypeAvgOrderByAggregateInput
    _max?: VehicleSubtypeMaxOrderByAggregateInput
    _min?: VehicleSubtypeMinOrderByAggregateInput
    _sum?: VehicleSubtypeSumOrderByAggregateInput
  }

  export type VehicleSubtypeScalarWhereWithAggregatesInput = {
    AND?: VehicleSubtypeScalarWhereWithAggregatesInput | VehicleSubtypeScalarWhereWithAggregatesInput[]
    OR?: VehicleSubtypeScalarWhereWithAggregatesInput[]
    NOT?: VehicleSubtypeScalarWhereWithAggregatesInput | VehicleSubtypeScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"VehicleSubtype"> | string
    typeId?: StringWithAggregatesFilter<"VehicleSubtype"> | string
    name?: StringWithAggregatesFilter<"VehicleSubtype"> | string
    displayName?: StringWithAggregatesFilter<"VehicleSubtype"> | string
    description?: StringNullableWithAggregatesFilter<"VehicleSubtype"> | string | null
    iconUrl?: StringNullableWithAggregatesFilter<"VehicleSubtype"> | string | null
    sortOrder?: IntWithAggregatesFilter<"VehicleSubtype"> | number
    isActive?: BoolWithAggregatesFilter<"VehicleSubtype"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"VehicleSubtype"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"VehicleSubtype"> | Date | string
  }

  export type UserVehicleWhereInput = {
    AND?: UserVehicleWhereInput | UserVehicleWhereInput[]
    OR?: UserVehicleWhereInput[]
    NOT?: UserVehicleWhereInput | UserVehicleWhereInput[]
    id?: StringFilter<"UserVehicle"> | string
    userId?: StringFilter<"UserVehicle"> | string
    subtypeId?: StringFilter<"UserVehicle"> | string
    brand?: StringNullableFilter<"UserVehicle"> | string | null
    model?: StringNullableFilter<"UserVehicle"> | string | null
    year?: IntNullableFilter<"UserVehicle"> | number | null
    licensePlate?: StringNullableFilter<"UserVehicle"> | string | null
    color?: StringNullableFilter<"UserVehicle"> | string | null
    loadCapacity?: DecimalNullableFilter<"UserVehicle"> | Decimal | DecimalJsLike | number | string | null
    volumeCapacity?: DecimalNullableFilter<"UserVehicle"> | Decimal | DecimalJsLike | number | string | null
    hasRefrigerator?: BoolFilter<"UserVehicle"> | boolean
    hasLifting?: BoolFilter<"UserVehicle"> | boolean
    canCarryFragile?: BoolFilter<"UserVehicle"> | boolean
    photos?: JsonFilter<"UserVehicle">
    documents?: JsonFilter<"UserVehicle">
    isActive?: BoolFilter<"UserVehicle"> | boolean
    isVerified?: BoolFilter<"UserVehicle"> | boolean
    createdAt?: DateTimeFilter<"UserVehicle"> | Date | string
    updatedAt?: DateTimeFilter<"UserVehicle"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
    subtype?: XOR<VehicleSubtypeRelationFilter, VehicleSubtypeWhereInput>
  }

  export type UserVehicleOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    subtypeId?: SortOrder
    brand?: SortOrderInput | SortOrder
    model?: SortOrderInput | SortOrder
    year?: SortOrderInput | SortOrder
    licensePlate?: SortOrderInput | SortOrder
    color?: SortOrderInput | SortOrder
    loadCapacity?: SortOrderInput | SortOrder
    volumeCapacity?: SortOrderInput | SortOrder
    hasRefrigerator?: SortOrder
    hasLifting?: SortOrder
    canCarryFragile?: SortOrder
    photos?: SortOrder
    documents?: SortOrder
    isActive?: SortOrder
    isVerified?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    user?: UserOrderByWithRelationInput
    subtype?: VehicleSubtypeOrderByWithRelationInput
  }

  export type UserVehicleWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    userId_subtypeId?: UserVehicleUserIdSubtypeIdCompoundUniqueInput
    AND?: UserVehicleWhereInput | UserVehicleWhereInput[]
    OR?: UserVehicleWhereInput[]
    NOT?: UserVehicleWhereInput | UserVehicleWhereInput[]
    userId?: StringFilter<"UserVehicle"> | string
    subtypeId?: StringFilter<"UserVehicle"> | string
    brand?: StringNullableFilter<"UserVehicle"> | string | null
    model?: StringNullableFilter<"UserVehicle"> | string | null
    year?: IntNullableFilter<"UserVehicle"> | number | null
    licensePlate?: StringNullableFilter<"UserVehicle"> | string | null
    color?: StringNullableFilter<"UserVehicle"> | string | null
    loadCapacity?: DecimalNullableFilter<"UserVehicle"> | Decimal | DecimalJsLike | number | string | null
    volumeCapacity?: DecimalNullableFilter<"UserVehicle"> | Decimal | DecimalJsLike | number | string | null
    hasRefrigerator?: BoolFilter<"UserVehicle"> | boolean
    hasLifting?: BoolFilter<"UserVehicle"> | boolean
    canCarryFragile?: BoolFilter<"UserVehicle"> | boolean
    photos?: JsonFilter<"UserVehicle">
    documents?: JsonFilter<"UserVehicle">
    isActive?: BoolFilter<"UserVehicle"> | boolean
    isVerified?: BoolFilter<"UserVehicle"> | boolean
    createdAt?: DateTimeFilter<"UserVehicle"> | Date | string
    updatedAt?: DateTimeFilter<"UserVehicle"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
    subtype?: XOR<VehicleSubtypeRelationFilter, VehicleSubtypeWhereInput>
  }, "id" | "userId_subtypeId">

  export type UserVehicleOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    subtypeId?: SortOrder
    brand?: SortOrderInput | SortOrder
    model?: SortOrderInput | SortOrder
    year?: SortOrderInput | SortOrder
    licensePlate?: SortOrderInput | SortOrder
    color?: SortOrderInput | SortOrder
    loadCapacity?: SortOrderInput | SortOrder
    volumeCapacity?: SortOrderInput | SortOrder
    hasRefrigerator?: SortOrder
    hasLifting?: SortOrder
    canCarryFragile?: SortOrder
    photos?: SortOrder
    documents?: SortOrder
    isActive?: SortOrder
    isVerified?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: UserVehicleCountOrderByAggregateInput
    _avg?: UserVehicleAvgOrderByAggregateInput
    _max?: UserVehicleMaxOrderByAggregateInput
    _min?: UserVehicleMinOrderByAggregateInput
    _sum?: UserVehicleSumOrderByAggregateInput
  }

  export type UserVehicleScalarWhereWithAggregatesInput = {
    AND?: UserVehicleScalarWhereWithAggregatesInput | UserVehicleScalarWhereWithAggregatesInput[]
    OR?: UserVehicleScalarWhereWithAggregatesInput[]
    NOT?: UserVehicleScalarWhereWithAggregatesInput | UserVehicleScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"UserVehicle"> | string
    userId?: StringWithAggregatesFilter<"UserVehicle"> | string
    subtypeId?: StringWithAggregatesFilter<"UserVehicle"> | string
    brand?: StringNullableWithAggregatesFilter<"UserVehicle"> | string | null
    model?: StringNullableWithAggregatesFilter<"UserVehicle"> | string | null
    year?: IntNullableWithAggregatesFilter<"UserVehicle"> | number | null
    licensePlate?: StringNullableWithAggregatesFilter<"UserVehicle"> | string | null
    color?: StringNullableWithAggregatesFilter<"UserVehicle"> | string | null
    loadCapacity?: DecimalNullableWithAggregatesFilter<"UserVehicle"> | Decimal | DecimalJsLike | number | string | null
    volumeCapacity?: DecimalNullableWithAggregatesFilter<"UserVehicle"> | Decimal | DecimalJsLike | number | string | null
    hasRefrigerator?: BoolWithAggregatesFilter<"UserVehicle"> | boolean
    hasLifting?: BoolWithAggregatesFilter<"UserVehicle"> | boolean
    canCarryFragile?: BoolWithAggregatesFilter<"UserVehicle"> | boolean
    photos?: JsonWithAggregatesFilter<"UserVehicle">
    documents?: JsonWithAggregatesFilter<"UserVehicle">
    isActive?: BoolWithAggregatesFilter<"UserVehicle"> | boolean
    isVerified?: BoolWithAggregatesFilter<"UserVehicle"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"UserVehicle"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"UserVehicle"> | Date | string
  }

  export type OrderWhereInput = {
    AND?: OrderWhereInput | OrderWhereInput[]
    OR?: OrderWhereInput[]
    NOT?: OrderWhereInput | OrderWhereInput[]
    id?: StringFilter<"Order"> | string
    orderNumber?: StringFilter<"Order"> | string
    customerId?: StringFilter<"Order"> | string
    executorId?: StringNullableFilter<"Order"> | string | null
    regionId?: StringFilter<"Order"> | string
    vehicleSubtypeId?: StringNullableFilter<"Order"> | string | null
    type?: EnumOrderTypeFilter<"Order"> | $Enums.OrderType
    title?: StringFilter<"Order"> | string
    description?: StringFilter<"Order"> | string
    pickupAddress?: StringNullableFilter<"Order"> | string | null
    deliveryAddress?: StringNullableFilter<"Order"> | string | null
    workAddress?: StringNullableFilter<"Order"> | string | null
    pickupLatitude?: DecimalNullableFilter<"Order"> | Decimal | DecimalJsLike | number | string | null
    pickupLongitude?: DecimalNullableFilter<"Order"> | Decimal | DecimalJsLike | number | string | null
    deliveryLatitude?: DecimalNullableFilter<"Order"> | Decimal | DecimalJsLike | number | string | null
    deliveryLongitude?: DecimalNullableFilter<"Order"> | Decimal | DecimalJsLike | number | string | null
    regionCode?: StringFilter<"Order"> | string
    subRegion?: StringNullableFilter<"Order"> | string | null
    scheduledDate?: DateTimeNullableFilter<"Order"> | Date | string | null
    scheduledTime?: StringNullableFilter<"Order"> | string | null
    deadlineDate?: DateTimeNullableFilter<"Order"> | Date | string | null
    isUrgent?: BoolFilter<"Order"> | boolean
    budgetFrom?: DecimalNullableFilter<"Order"> | Decimal | DecimalJsLike | number | string | null
    budgetTo?: DecimalNullableFilter<"Order"> | Decimal | DecimalJsLike | number | string | null
    proposedPrice?: DecimalNullableFilter<"Order"> | Decimal | DecimalJsLike | number | string | null
    agreedPrice?: DecimalNullableFilter<"Order"> | Decimal | DecimalJsLike | number | string | null
    isPriceFixed?: BoolFilter<"Order"> | boolean
    cargoWeight?: DecimalNullableFilter<"Order"> | Decimal | DecimalJsLike | number | string | null
    cargoVolume?: DecimalNullableFilter<"Order"> | Decimal | DecimalJsLike | number | string | null
    cargoDescription?: StringNullableFilter<"Order"> | string | null
    estimatedDistance?: DecimalNullableFilter<"Order"> | Decimal | DecimalJsLike | number | string | null
    needsRefrigerator?: BoolFilter<"Order"> | boolean
    needsLifting?: BoolFilter<"Order"> | boolean
    isFragile?: BoolFilter<"Order"> | boolean
    passengerCount?: IntNullableFilter<"Order"> | number | null
    requirements?: StringNullableFilter<"Order"> | string | null
    customerComment?: StringNullableFilter<"Order"> | string | null
    executorComment?: StringNullableFilter<"Order"> | string | null
    status?: EnumOrderStatusFilter<"Order"> | $Enums.OrderStatus
    moderationComment?: StringNullableFilter<"Order"> | string | null
    moderatedAt?: DateTimeNullableFilter<"Order"> | Date | string | null
    moderatedById?: StringNullableFilter<"Order"> | string | null
    isSentToExecutors?: BoolFilter<"Order"> | boolean
    sentToAllRegions?: BoolFilter<"Order"> | boolean
    viewsCount?: IntFilter<"Order"> | number
    responsesCount?: IntFilter<"Order"> | number
    contactPhone?: StringNullableFilter<"Order"> | string | null
    contactName?: StringNullableFilter<"Order"> | string | null
    photos?: JsonFilter<"Order">
    documents?: JsonFilter<"Order">
    activityLog?: JsonFilter<"Order">
    createdAt?: DateTimeFilter<"Order"> | Date | string
    updatedAt?: DateTimeFilter<"Order"> | Date | string
    customer?: XOR<UserRelationFilter, UserWhereInput>
    executor?: XOR<UserNullableRelationFilter, UserWhereInput> | null
    region?: XOR<RegionRelationFilter, RegionWhereInput>
    vehicleSubtype?: XOR<VehicleSubtypeNullableRelationFilter, VehicleSubtypeWhereInput> | null
    responses?: OrderResponseListRelationFilter
  }

  export type OrderOrderByWithRelationInput = {
    id?: SortOrder
    orderNumber?: SortOrder
    customerId?: SortOrder
    executorId?: SortOrderInput | SortOrder
    regionId?: SortOrder
    vehicleSubtypeId?: SortOrderInput | SortOrder
    type?: SortOrder
    title?: SortOrder
    description?: SortOrder
    pickupAddress?: SortOrderInput | SortOrder
    deliveryAddress?: SortOrderInput | SortOrder
    workAddress?: SortOrderInput | SortOrder
    pickupLatitude?: SortOrderInput | SortOrder
    pickupLongitude?: SortOrderInput | SortOrder
    deliveryLatitude?: SortOrderInput | SortOrder
    deliveryLongitude?: SortOrderInput | SortOrder
    regionCode?: SortOrder
    subRegion?: SortOrderInput | SortOrder
    scheduledDate?: SortOrderInput | SortOrder
    scheduledTime?: SortOrderInput | SortOrder
    deadlineDate?: SortOrderInput | SortOrder
    isUrgent?: SortOrder
    budgetFrom?: SortOrderInput | SortOrder
    budgetTo?: SortOrderInput | SortOrder
    proposedPrice?: SortOrderInput | SortOrder
    agreedPrice?: SortOrderInput | SortOrder
    isPriceFixed?: SortOrder
    cargoWeight?: SortOrderInput | SortOrder
    cargoVolume?: SortOrderInput | SortOrder
    cargoDescription?: SortOrderInput | SortOrder
    estimatedDistance?: SortOrderInput | SortOrder
    needsRefrigerator?: SortOrder
    needsLifting?: SortOrder
    isFragile?: SortOrder
    passengerCount?: SortOrderInput | SortOrder
    requirements?: SortOrderInput | SortOrder
    customerComment?: SortOrderInput | SortOrder
    executorComment?: SortOrderInput | SortOrder
    status?: SortOrder
    moderationComment?: SortOrderInput | SortOrder
    moderatedAt?: SortOrderInput | SortOrder
    moderatedById?: SortOrderInput | SortOrder
    isSentToExecutors?: SortOrder
    sentToAllRegions?: SortOrder
    viewsCount?: SortOrder
    responsesCount?: SortOrder
    contactPhone?: SortOrderInput | SortOrder
    contactName?: SortOrderInput | SortOrder
    photos?: SortOrder
    documents?: SortOrder
    activityLog?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    customer?: UserOrderByWithRelationInput
    executor?: UserOrderByWithRelationInput
    region?: RegionOrderByWithRelationInput
    vehicleSubtype?: VehicleSubtypeOrderByWithRelationInput
    responses?: OrderResponseOrderByRelationAggregateInput
  }

  export type OrderWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    orderNumber?: string
    AND?: OrderWhereInput | OrderWhereInput[]
    OR?: OrderWhereInput[]
    NOT?: OrderWhereInput | OrderWhereInput[]
    customerId?: StringFilter<"Order"> | string
    executorId?: StringNullableFilter<"Order"> | string | null
    regionId?: StringFilter<"Order"> | string
    vehicleSubtypeId?: StringNullableFilter<"Order"> | string | null
    type?: EnumOrderTypeFilter<"Order"> | $Enums.OrderType
    title?: StringFilter<"Order"> | string
    description?: StringFilter<"Order"> | string
    pickupAddress?: StringNullableFilter<"Order"> | string | null
    deliveryAddress?: StringNullableFilter<"Order"> | string | null
    workAddress?: StringNullableFilter<"Order"> | string | null
    pickupLatitude?: DecimalNullableFilter<"Order"> | Decimal | DecimalJsLike | number | string | null
    pickupLongitude?: DecimalNullableFilter<"Order"> | Decimal | DecimalJsLike | number | string | null
    deliveryLatitude?: DecimalNullableFilter<"Order"> | Decimal | DecimalJsLike | number | string | null
    deliveryLongitude?: DecimalNullableFilter<"Order"> | Decimal | DecimalJsLike | number | string | null
    regionCode?: StringFilter<"Order"> | string
    subRegion?: StringNullableFilter<"Order"> | string | null
    scheduledDate?: DateTimeNullableFilter<"Order"> | Date | string | null
    scheduledTime?: StringNullableFilter<"Order"> | string | null
    deadlineDate?: DateTimeNullableFilter<"Order"> | Date | string | null
    isUrgent?: BoolFilter<"Order"> | boolean
    budgetFrom?: DecimalNullableFilter<"Order"> | Decimal | DecimalJsLike | number | string | null
    budgetTo?: DecimalNullableFilter<"Order"> | Decimal | DecimalJsLike | number | string | null
    proposedPrice?: DecimalNullableFilter<"Order"> | Decimal | DecimalJsLike | number | string | null
    agreedPrice?: DecimalNullableFilter<"Order"> | Decimal | DecimalJsLike | number | string | null
    isPriceFixed?: BoolFilter<"Order"> | boolean
    cargoWeight?: DecimalNullableFilter<"Order"> | Decimal | DecimalJsLike | number | string | null
    cargoVolume?: DecimalNullableFilter<"Order"> | Decimal | DecimalJsLike | number | string | null
    cargoDescription?: StringNullableFilter<"Order"> | string | null
    estimatedDistance?: DecimalNullableFilter<"Order"> | Decimal | DecimalJsLike | number | string | null
    needsRefrigerator?: BoolFilter<"Order"> | boolean
    needsLifting?: BoolFilter<"Order"> | boolean
    isFragile?: BoolFilter<"Order"> | boolean
    passengerCount?: IntNullableFilter<"Order"> | number | null
    requirements?: StringNullableFilter<"Order"> | string | null
    customerComment?: StringNullableFilter<"Order"> | string | null
    executorComment?: StringNullableFilter<"Order"> | string | null
    status?: EnumOrderStatusFilter<"Order"> | $Enums.OrderStatus
    moderationComment?: StringNullableFilter<"Order"> | string | null
    moderatedAt?: DateTimeNullableFilter<"Order"> | Date | string | null
    moderatedById?: StringNullableFilter<"Order"> | string | null
    isSentToExecutors?: BoolFilter<"Order"> | boolean
    sentToAllRegions?: BoolFilter<"Order"> | boolean
    viewsCount?: IntFilter<"Order"> | number
    responsesCount?: IntFilter<"Order"> | number
    contactPhone?: StringNullableFilter<"Order"> | string | null
    contactName?: StringNullableFilter<"Order"> | string | null
    photos?: JsonFilter<"Order">
    documents?: JsonFilter<"Order">
    activityLog?: JsonFilter<"Order">
    createdAt?: DateTimeFilter<"Order"> | Date | string
    updatedAt?: DateTimeFilter<"Order"> | Date | string
    customer?: XOR<UserRelationFilter, UserWhereInput>
    executor?: XOR<UserNullableRelationFilter, UserWhereInput> | null
    region?: XOR<RegionRelationFilter, RegionWhereInput>
    vehicleSubtype?: XOR<VehicleSubtypeNullableRelationFilter, VehicleSubtypeWhereInput> | null
    responses?: OrderResponseListRelationFilter
  }, "id" | "orderNumber">

  export type OrderOrderByWithAggregationInput = {
    id?: SortOrder
    orderNumber?: SortOrder
    customerId?: SortOrder
    executorId?: SortOrderInput | SortOrder
    regionId?: SortOrder
    vehicleSubtypeId?: SortOrderInput | SortOrder
    type?: SortOrder
    title?: SortOrder
    description?: SortOrder
    pickupAddress?: SortOrderInput | SortOrder
    deliveryAddress?: SortOrderInput | SortOrder
    workAddress?: SortOrderInput | SortOrder
    pickupLatitude?: SortOrderInput | SortOrder
    pickupLongitude?: SortOrderInput | SortOrder
    deliveryLatitude?: SortOrderInput | SortOrder
    deliveryLongitude?: SortOrderInput | SortOrder
    regionCode?: SortOrder
    subRegion?: SortOrderInput | SortOrder
    scheduledDate?: SortOrderInput | SortOrder
    scheduledTime?: SortOrderInput | SortOrder
    deadlineDate?: SortOrderInput | SortOrder
    isUrgent?: SortOrder
    budgetFrom?: SortOrderInput | SortOrder
    budgetTo?: SortOrderInput | SortOrder
    proposedPrice?: SortOrderInput | SortOrder
    agreedPrice?: SortOrderInput | SortOrder
    isPriceFixed?: SortOrder
    cargoWeight?: SortOrderInput | SortOrder
    cargoVolume?: SortOrderInput | SortOrder
    cargoDescription?: SortOrderInput | SortOrder
    estimatedDistance?: SortOrderInput | SortOrder
    needsRefrigerator?: SortOrder
    needsLifting?: SortOrder
    isFragile?: SortOrder
    passengerCount?: SortOrderInput | SortOrder
    requirements?: SortOrderInput | SortOrder
    customerComment?: SortOrderInput | SortOrder
    executorComment?: SortOrderInput | SortOrder
    status?: SortOrder
    moderationComment?: SortOrderInput | SortOrder
    moderatedAt?: SortOrderInput | SortOrder
    moderatedById?: SortOrderInput | SortOrder
    isSentToExecutors?: SortOrder
    sentToAllRegions?: SortOrder
    viewsCount?: SortOrder
    responsesCount?: SortOrder
    contactPhone?: SortOrderInput | SortOrder
    contactName?: SortOrderInput | SortOrder
    photos?: SortOrder
    documents?: SortOrder
    activityLog?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: OrderCountOrderByAggregateInput
    _avg?: OrderAvgOrderByAggregateInput
    _max?: OrderMaxOrderByAggregateInput
    _min?: OrderMinOrderByAggregateInput
    _sum?: OrderSumOrderByAggregateInput
  }

  export type OrderScalarWhereWithAggregatesInput = {
    AND?: OrderScalarWhereWithAggregatesInput | OrderScalarWhereWithAggregatesInput[]
    OR?: OrderScalarWhereWithAggregatesInput[]
    NOT?: OrderScalarWhereWithAggregatesInput | OrderScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Order"> | string
    orderNumber?: StringWithAggregatesFilter<"Order"> | string
    customerId?: StringWithAggregatesFilter<"Order"> | string
    executorId?: StringNullableWithAggregatesFilter<"Order"> | string | null
    regionId?: StringWithAggregatesFilter<"Order"> | string
    vehicleSubtypeId?: StringNullableWithAggregatesFilter<"Order"> | string | null
    type?: EnumOrderTypeWithAggregatesFilter<"Order"> | $Enums.OrderType
    title?: StringWithAggregatesFilter<"Order"> | string
    description?: StringWithAggregatesFilter<"Order"> | string
    pickupAddress?: StringNullableWithAggregatesFilter<"Order"> | string | null
    deliveryAddress?: StringNullableWithAggregatesFilter<"Order"> | string | null
    workAddress?: StringNullableWithAggregatesFilter<"Order"> | string | null
    pickupLatitude?: DecimalNullableWithAggregatesFilter<"Order"> | Decimal | DecimalJsLike | number | string | null
    pickupLongitude?: DecimalNullableWithAggregatesFilter<"Order"> | Decimal | DecimalJsLike | number | string | null
    deliveryLatitude?: DecimalNullableWithAggregatesFilter<"Order"> | Decimal | DecimalJsLike | number | string | null
    deliveryLongitude?: DecimalNullableWithAggregatesFilter<"Order"> | Decimal | DecimalJsLike | number | string | null
    regionCode?: StringWithAggregatesFilter<"Order"> | string
    subRegion?: StringNullableWithAggregatesFilter<"Order"> | string | null
    scheduledDate?: DateTimeNullableWithAggregatesFilter<"Order"> | Date | string | null
    scheduledTime?: StringNullableWithAggregatesFilter<"Order"> | string | null
    deadlineDate?: DateTimeNullableWithAggregatesFilter<"Order"> | Date | string | null
    isUrgent?: BoolWithAggregatesFilter<"Order"> | boolean
    budgetFrom?: DecimalNullableWithAggregatesFilter<"Order"> | Decimal | DecimalJsLike | number | string | null
    budgetTo?: DecimalNullableWithAggregatesFilter<"Order"> | Decimal | DecimalJsLike | number | string | null
    proposedPrice?: DecimalNullableWithAggregatesFilter<"Order"> | Decimal | DecimalJsLike | number | string | null
    agreedPrice?: DecimalNullableWithAggregatesFilter<"Order"> | Decimal | DecimalJsLike | number | string | null
    isPriceFixed?: BoolWithAggregatesFilter<"Order"> | boolean
    cargoWeight?: DecimalNullableWithAggregatesFilter<"Order"> | Decimal | DecimalJsLike | number | string | null
    cargoVolume?: DecimalNullableWithAggregatesFilter<"Order"> | Decimal | DecimalJsLike | number | string | null
    cargoDescription?: StringNullableWithAggregatesFilter<"Order"> | string | null
    estimatedDistance?: DecimalNullableWithAggregatesFilter<"Order"> | Decimal | DecimalJsLike | number | string | null
    needsRefrigerator?: BoolWithAggregatesFilter<"Order"> | boolean
    needsLifting?: BoolWithAggregatesFilter<"Order"> | boolean
    isFragile?: BoolWithAggregatesFilter<"Order"> | boolean
    passengerCount?: IntNullableWithAggregatesFilter<"Order"> | number | null
    requirements?: StringNullableWithAggregatesFilter<"Order"> | string | null
    customerComment?: StringNullableWithAggregatesFilter<"Order"> | string | null
    executorComment?: StringNullableWithAggregatesFilter<"Order"> | string | null
    status?: EnumOrderStatusWithAggregatesFilter<"Order"> | $Enums.OrderStatus
    moderationComment?: StringNullableWithAggregatesFilter<"Order"> | string | null
    moderatedAt?: DateTimeNullableWithAggregatesFilter<"Order"> | Date | string | null
    moderatedById?: StringNullableWithAggregatesFilter<"Order"> | string | null
    isSentToExecutors?: BoolWithAggregatesFilter<"Order"> | boolean
    sentToAllRegions?: BoolWithAggregatesFilter<"Order"> | boolean
    viewsCount?: IntWithAggregatesFilter<"Order"> | number
    responsesCount?: IntWithAggregatesFilter<"Order"> | number
    contactPhone?: StringNullableWithAggregatesFilter<"Order"> | string | null
    contactName?: StringNullableWithAggregatesFilter<"Order"> | string | null
    photos?: JsonWithAggregatesFilter<"Order">
    documents?: JsonWithAggregatesFilter<"Order">
    activityLog?: JsonWithAggregatesFilter<"Order">
    createdAt?: DateTimeWithAggregatesFilter<"Order"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Order"> | Date | string
  }

  export type OrderResponseWhereInput = {
    AND?: OrderResponseWhereInput | OrderResponseWhereInput[]
    OR?: OrderResponseWhereInput[]
    NOT?: OrderResponseWhereInput | OrderResponseWhereInput[]
    id?: StringFilter<"OrderResponse"> | string
    orderId?: StringFilter<"OrderResponse"> | string
    executorId?: StringFilter<"OrderResponse"> | string
    proposedPrice?: DecimalNullableFilter<"OrderResponse"> | Decimal | DecimalJsLike | number | string | null
    comment?: StringNullableFilter<"OrderResponse"> | string | null
    estimatedDuration?: StringNullableFilter<"OrderResponse"> | string | null
    status?: StringFilter<"OrderResponse"> | string
    vehiclePhotos?: JsonFilter<"OrderResponse">
    createdAt?: DateTimeFilter<"OrderResponse"> | Date | string
    updatedAt?: DateTimeFilter<"OrderResponse"> | Date | string
    order?: XOR<OrderRelationFilter, OrderWhereInput>
    executor?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type OrderResponseOrderByWithRelationInput = {
    id?: SortOrder
    orderId?: SortOrder
    executorId?: SortOrder
    proposedPrice?: SortOrderInput | SortOrder
    comment?: SortOrderInput | SortOrder
    estimatedDuration?: SortOrderInput | SortOrder
    status?: SortOrder
    vehiclePhotos?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    order?: OrderOrderByWithRelationInput
    executor?: UserOrderByWithRelationInput
  }

  export type OrderResponseWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    orderId_executorId?: OrderResponseOrderIdExecutorIdCompoundUniqueInput
    AND?: OrderResponseWhereInput | OrderResponseWhereInput[]
    OR?: OrderResponseWhereInput[]
    NOT?: OrderResponseWhereInput | OrderResponseWhereInput[]
    orderId?: StringFilter<"OrderResponse"> | string
    executorId?: StringFilter<"OrderResponse"> | string
    proposedPrice?: DecimalNullableFilter<"OrderResponse"> | Decimal | DecimalJsLike | number | string | null
    comment?: StringNullableFilter<"OrderResponse"> | string | null
    estimatedDuration?: StringNullableFilter<"OrderResponse"> | string | null
    status?: StringFilter<"OrderResponse"> | string
    vehiclePhotos?: JsonFilter<"OrderResponse">
    createdAt?: DateTimeFilter<"OrderResponse"> | Date | string
    updatedAt?: DateTimeFilter<"OrderResponse"> | Date | string
    order?: XOR<OrderRelationFilter, OrderWhereInput>
    executor?: XOR<UserRelationFilter, UserWhereInput>
  }, "id" | "orderId_executorId">

  export type OrderResponseOrderByWithAggregationInput = {
    id?: SortOrder
    orderId?: SortOrder
    executorId?: SortOrder
    proposedPrice?: SortOrderInput | SortOrder
    comment?: SortOrderInput | SortOrder
    estimatedDuration?: SortOrderInput | SortOrder
    status?: SortOrder
    vehiclePhotos?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: OrderResponseCountOrderByAggregateInput
    _avg?: OrderResponseAvgOrderByAggregateInput
    _max?: OrderResponseMaxOrderByAggregateInput
    _min?: OrderResponseMinOrderByAggregateInput
    _sum?: OrderResponseSumOrderByAggregateInput
  }

  export type OrderResponseScalarWhereWithAggregatesInput = {
    AND?: OrderResponseScalarWhereWithAggregatesInput | OrderResponseScalarWhereWithAggregatesInput[]
    OR?: OrderResponseScalarWhereWithAggregatesInput[]
    NOT?: OrderResponseScalarWhereWithAggregatesInput | OrderResponseScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"OrderResponse"> | string
    orderId?: StringWithAggregatesFilter<"OrderResponse"> | string
    executorId?: StringWithAggregatesFilter<"OrderResponse"> | string
    proposedPrice?: DecimalNullableWithAggregatesFilter<"OrderResponse"> | Decimal | DecimalJsLike | number | string | null
    comment?: StringNullableWithAggregatesFilter<"OrderResponse"> | string | null
    estimatedDuration?: StringNullableWithAggregatesFilter<"OrderResponse"> | string | null
    status?: StringWithAggregatesFilter<"OrderResponse"> | string
    vehiclePhotos?: JsonWithAggregatesFilter<"OrderResponse">
    createdAt?: DateTimeWithAggregatesFilter<"OrderResponse"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"OrderResponse"> | Date | string
  }

  export type PaymentWhereInput = {
    AND?: PaymentWhereInput | PaymentWhereInput[]
    OR?: PaymentWhereInput[]
    NOT?: PaymentWhereInput | PaymentWhereInput[]
    id?: StringFilter<"Payment"> | string
    userId?: StringFilter<"Payment"> | string
    tinkoffPaymentId?: StringNullableFilter<"Payment"> | string | null
    tinkoffStatus?: StringNullableFilter<"Payment"> | string | null
    amount?: DecimalFilter<"Payment"> | Decimal | DecimalJsLike | number | string
    description?: StringFilter<"Payment"> | string
    status?: EnumPaymentStatusFilter<"Payment"> | $Enums.PaymentStatus
    metadata?: JsonNullableFilter<"Payment">
    paidAt?: DateTimeNullableFilter<"Payment"> | Date | string | null
    expiresAt?: DateTimeNullableFilter<"Payment"> | Date | string | null
    createdAt?: DateTimeFilter<"Payment"> | Date | string
    updatedAt?: DateTimeFilter<"Payment"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type PaymentOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    tinkoffPaymentId?: SortOrderInput | SortOrder
    tinkoffStatus?: SortOrderInput | SortOrder
    amount?: SortOrder
    description?: SortOrder
    status?: SortOrder
    metadata?: SortOrderInput | SortOrder
    paidAt?: SortOrderInput | SortOrder
    expiresAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type PaymentWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    tinkoffPaymentId?: string
    AND?: PaymentWhereInput | PaymentWhereInput[]
    OR?: PaymentWhereInput[]
    NOT?: PaymentWhereInput | PaymentWhereInput[]
    userId?: StringFilter<"Payment"> | string
    tinkoffStatus?: StringNullableFilter<"Payment"> | string | null
    amount?: DecimalFilter<"Payment"> | Decimal | DecimalJsLike | number | string
    description?: StringFilter<"Payment"> | string
    status?: EnumPaymentStatusFilter<"Payment"> | $Enums.PaymentStatus
    metadata?: JsonNullableFilter<"Payment">
    paidAt?: DateTimeNullableFilter<"Payment"> | Date | string | null
    expiresAt?: DateTimeNullableFilter<"Payment"> | Date | string | null
    createdAt?: DateTimeFilter<"Payment"> | Date | string
    updatedAt?: DateTimeFilter<"Payment"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
  }, "id" | "tinkoffPaymentId">

  export type PaymentOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    tinkoffPaymentId?: SortOrderInput | SortOrder
    tinkoffStatus?: SortOrderInput | SortOrder
    amount?: SortOrder
    description?: SortOrder
    status?: SortOrder
    metadata?: SortOrderInput | SortOrder
    paidAt?: SortOrderInput | SortOrder
    expiresAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: PaymentCountOrderByAggregateInput
    _avg?: PaymentAvgOrderByAggregateInput
    _max?: PaymentMaxOrderByAggregateInput
    _min?: PaymentMinOrderByAggregateInput
    _sum?: PaymentSumOrderByAggregateInput
  }

  export type PaymentScalarWhereWithAggregatesInput = {
    AND?: PaymentScalarWhereWithAggregatesInput | PaymentScalarWhereWithAggregatesInput[]
    OR?: PaymentScalarWhereWithAggregatesInput[]
    NOT?: PaymentScalarWhereWithAggregatesInput | PaymentScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Payment"> | string
    userId?: StringWithAggregatesFilter<"Payment"> | string
    tinkoffPaymentId?: StringNullableWithAggregatesFilter<"Payment"> | string | null
    tinkoffStatus?: StringNullableWithAggregatesFilter<"Payment"> | string | null
    amount?: DecimalWithAggregatesFilter<"Payment"> | Decimal | DecimalJsLike | number | string
    description?: StringWithAggregatesFilter<"Payment"> | string
    status?: EnumPaymentStatusWithAggregatesFilter<"Payment"> | $Enums.PaymentStatus
    metadata?: JsonNullableWithAggregatesFilter<"Payment">
    paidAt?: DateTimeNullableWithAggregatesFilter<"Payment"> | Date | string | null
    expiresAt?: DateTimeNullableWithAggregatesFilter<"Payment"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Payment"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Payment"> | Date | string
  }

  export type PaymentTransactionWhereInput = {
    AND?: PaymentTransactionWhereInput | PaymentTransactionWhereInput[]
    OR?: PaymentTransactionWhereInput[]
    NOT?: PaymentTransactionWhereInput | PaymentTransactionWhereInput[]
    id?: StringFilter<"PaymentTransaction"> | string
    userId?: StringFilter<"PaymentTransaction"> | string
    orderId?: StringNullableFilter<"PaymentTransaction"> | string | null
    type?: StringFilter<"PaymentTransaction"> | string
    amount?: DecimalFilter<"PaymentTransaction"> | Decimal | DecimalJsLike | number | string
    description?: StringFilter<"PaymentTransaction"> | string
    status?: StringFilter<"PaymentTransaction"> | string
    paymentMethod?: StringNullableFilter<"PaymentTransaction"> | string | null
    externalId?: StringNullableFilter<"PaymentTransaction"> | string | null
    metadata?: JsonNullableFilter<"PaymentTransaction">
    createdAt?: DateTimeFilter<"PaymentTransaction"> | Date | string
    updatedAt?: DateTimeFilter<"PaymentTransaction"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type PaymentTransactionOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    orderId?: SortOrderInput | SortOrder
    type?: SortOrder
    amount?: SortOrder
    description?: SortOrder
    status?: SortOrder
    paymentMethod?: SortOrderInput | SortOrder
    externalId?: SortOrderInput | SortOrder
    metadata?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type PaymentTransactionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: PaymentTransactionWhereInput | PaymentTransactionWhereInput[]
    OR?: PaymentTransactionWhereInput[]
    NOT?: PaymentTransactionWhereInput | PaymentTransactionWhereInput[]
    userId?: StringFilter<"PaymentTransaction"> | string
    orderId?: StringNullableFilter<"PaymentTransaction"> | string | null
    type?: StringFilter<"PaymentTransaction"> | string
    amount?: DecimalFilter<"PaymentTransaction"> | Decimal | DecimalJsLike | number | string
    description?: StringFilter<"PaymentTransaction"> | string
    status?: StringFilter<"PaymentTransaction"> | string
    paymentMethod?: StringNullableFilter<"PaymentTransaction"> | string | null
    externalId?: StringNullableFilter<"PaymentTransaction"> | string | null
    metadata?: JsonNullableFilter<"PaymentTransaction">
    createdAt?: DateTimeFilter<"PaymentTransaction"> | Date | string
    updatedAt?: DateTimeFilter<"PaymentTransaction"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
  }, "id">

  export type PaymentTransactionOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    orderId?: SortOrderInput | SortOrder
    type?: SortOrder
    amount?: SortOrder
    description?: SortOrder
    status?: SortOrder
    paymentMethod?: SortOrderInput | SortOrder
    externalId?: SortOrderInput | SortOrder
    metadata?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: PaymentTransactionCountOrderByAggregateInput
    _avg?: PaymentTransactionAvgOrderByAggregateInput
    _max?: PaymentTransactionMaxOrderByAggregateInput
    _min?: PaymentTransactionMinOrderByAggregateInput
    _sum?: PaymentTransactionSumOrderByAggregateInput
  }

  export type PaymentTransactionScalarWhereWithAggregatesInput = {
    AND?: PaymentTransactionScalarWhereWithAggregatesInput | PaymentTransactionScalarWhereWithAggregatesInput[]
    OR?: PaymentTransactionScalarWhereWithAggregatesInput[]
    NOT?: PaymentTransactionScalarWhereWithAggregatesInput | PaymentTransactionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"PaymentTransaction"> | string
    userId?: StringWithAggregatesFilter<"PaymentTransaction"> | string
    orderId?: StringNullableWithAggregatesFilter<"PaymentTransaction"> | string | null
    type?: StringWithAggregatesFilter<"PaymentTransaction"> | string
    amount?: DecimalWithAggregatesFilter<"PaymentTransaction"> | Decimal | DecimalJsLike | number | string
    description?: StringWithAggregatesFilter<"PaymentTransaction"> | string
    status?: StringWithAggregatesFilter<"PaymentTransaction"> | string
    paymentMethod?: StringNullableWithAggregatesFilter<"PaymentTransaction"> | string | null
    externalId?: StringNullableWithAggregatesFilter<"PaymentTransaction"> | string | null
    metadata?: JsonNullableWithAggregatesFilter<"PaymentTransaction">
    createdAt?: DateTimeWithAggregatesFilter<"PaymentTransaction"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"PaymentTransaction"> | Date | string
  }

  export type SessionWhereInput = {
    AND?: SessionWhereInput | SessionWhereInput[]
    OR?: SessionWhereInput[]
    NOT?: SessionWhereInput | SessionWhereInput[]
    id?: StringFilter<"Session"> | string
    userId?: StringFilter<"Session"> | string
    clientType?: EnumClientTypeFilter<"Session"> | $Enums.ClientType
    chatId?: BigIntNullableFilter<"Session"> | bigint | number | null
    webAppInitData?: StringNullableFilter<"Session"> | string | null
    userAgent?: StringNullableFilter<"Session"> | string | null
    ipAddress?: StringNullableFilter<"Session"> | string | null
    currentState?: StringNullableFilter<"Session"> | string | null
    contextData?: JsonNullableFilter<"Session">
    lastActivity?: DateTimeFilter<"Session"> | Date | string
    expiresAt?: DateTimeFilter<"Session"> | Date | string
    status?: EnumSessionStatusFilter<"Session"> | $Enums.SessionStatus
    deviceInfo?: JsonNullableFilter<"Session">
    timezone?: StringNullableFilter<"Session"> | string | null
    language?: StringNullableFilter<"Session"> | string | null
    createdAt?: DateTimeFilter<"Session"> | Date | string
    updatedAt?: DateTimeFilter<"Session"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type SessionOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    clientType?: SortOrder
    chatId?: SortOrderInput | SortOrder
    webAppInitData?: SortOrderInput | SortOrder
    userAgent?: SortOrderInput | SortOrder
    ipAddress?: SortOrderInput | SortOrder
    currentState?: SortOrderInput | SortOrder
    contextData?: SortOrderInput | SortOrder
    lastActivity?: SortOrder
    expiresAt?: SortOrder
    status?: SortOrder
    deviceInfo?: SortOrderInput | SortOrder
    timezone?: SortOrderInput | SortOrder
    language?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type SessionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: SessionWhereInput | SessionWhereInput[]
    OR?: SessionWhereInput[]
    NOT?: SessionWhereInput | SessionWhereInput[]
    userId?: StringFilter<"Session"> | string
    clientType?: EnumClientTypeFilter<"Session"> | $Enums.ClientType
    chatId?: BigIntNullableFilter<"Session"> | bigint | number | null
    webAppInitData?: StringNullableFilter<"Session"> | string | null
    userAgent?: StringNullableFilter<"Session"> | string | null
    ipAddress?: StringNullableFilter<"Session"> | string | null
    currentState?: StringNullableFilter<"Session"> | string | null
    contextData?: JsonNullableFilter<"Session">
    lastActivity?: DateTimeFilter<"Session"> | Date | string
    expiresAt?: DateTimeFilter<"Session"> | Date | string
    status?: EnumSessionStatusFilter<"Session"> | $Enums.SessionStatus
    deviceInfo?: JsonNullableFilter<"Session">
    timezone?: StringNullableFilter<"Session"> | string | null
    language?: StringNullableFilter<"Session"> | string | null
    createdAt?: DateTimeFilter<"Session"> | Date | string
    updatedAt?: DateTimeFilter<"Session"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
  }, "id">

  export type SessionOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    clientType?: SortOrder
    chatId?: SortOrderInput | SortOrder
    webAppInitData?: SortOrderInput | SortOrder
    userAgent?: SortOrderInput | SortOrder
    ipAddress?: SortOrderInput | SortOrder
    currentState?: SortOrderInput | SortOrder
    contextData?: SortOrderInput | SortOrder
    lastActivity?: SortOrder
    expiresAt?: SortOrder
    status?: SortOrder
    deviceInfo?: SortOrderInput | SortOrder
    timezone?: SortOrderInput | SortOrder
    language?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: SessionCountOrderByAggregateInput
    _avg?: SessionAvgOrderByAggregateInput
    _max?: SessionMaxOrderByAggregateInput
    _min?: SessionMinOrderByAggregateInput
    _sum?: SessionSumOrderByAggregateInput
  }

  export type SessionScalarWhereWithAggregatesInput = {
    AND?: SessionScalarWhereWithAggregatesInput | SessionScalarWhereWithAggregatesInput[]
    OR?: SessionScalarWhereWithAggregatesInput[]
    NOT?: SessionScalarWhereWithAggregatesInput | SessionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Session"> | string
    userId?: StringWithAggregatesFilter<"Session"> | string
    clientType?: EnumClientTypeWithAggregatesFilter<"Session"> | $Enums.ClientType
    chatId?: BigIntNullableWithAggregatesFilter<"Session"> | bigint | number | null
    webAppInitData?: StringNullableWithAggregatesFilter<"Session"> | string | null
    userAgent?: StringNullableWithAggregatesFilter<"Session"> | string | null
    ipAddress?: StringNullableWithAggregatesFilter<"Session"> | string | null
    currentState?: StringNullableWithAggregatesFilter<"Session"> | string | null
    contextData?: JsonNullableWithAggregatesFilter<"Session">
    lastActivity?: DateTimeWithAggregatesFilter<"Session"> | Date | string
    expiresAt?: DateTimeWithAggregatesFilter<"Session"> | Date | string
    status?: EnumSessionStatusWithAggregatesFilter<"Session"> | $Enums.SessionStatus
    deviceInfo?: JsonNullableWithAggregatesFilter<"Session">
    timezone?: StringNullableWithAggregatesFilter<"Session"> | string | null
    language?: StringNullableWithAggregatesFilter<"Session"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Session"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Session"> | Date | string
  }

  export type NotificationWhereInput = {
    AND?: NotificationWhereInput | NotificationWhereInput[]
    OR?: NotificationWhereInput[]
    NOT?: NotificationWhereInput | NotificationWhereInput[]
    id?: StringFilter<"Notification"> | string
    userId?: StringFilter<"Notification"> | string
    title?: StringFilter<"Notification"> | string
    message?: StringFilter<"Notification"> | string
    type?: StringFilter<"Notification"> | string
    sendToTelegram?: BoolFilter<"Notification"> | boolean
    sendToEmail?: BoolFilter<"Notification"> | boolean
    sendToWebApp?: BoolFilter<"Notification"> | boolean
    isRead?: BoolFilter<"Notification"> | boolean
    isDelivered?: BoolFilter<"Notification"> | boolean
    scheduledFor?: DateTimeNullableFilter<"Notification"> | Date | string | null
    sentAt?: DateTimeNullableFilter<"Notification"> | Date | string | null
    iconUrl?: StringNullableFilter<"Notification"> | string | null
    actionUrl?: StringNullableFilter<"Notification"> | string | null
    metadata?: JsonNullableFilter<"Notification">
    createdAt?: DateTimeFilter<"Notification"> | Date | string
    updatedAt?: DateTimeFilter<"Notification"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type NotificationOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    title?: SortOrder
    message?: SortOrder
    type?: SortOrder
    sendToTelegram?: SortOrder
    sendToEmail?: SortOrder
    sendToWebApp?: SortOrder
    isRead?: SortOrder
    isDelivered?: SortOrder
    scheduledFor?: SortOrderInput | SortOrder
    sentAt?: SortOrderInput | SortOrder
    iconUrl?: SortOrderInput | SortOrder
    actionUrl?: SortOrderInput | SortOrder
    metadata?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type NotificationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: NotificationWhereInput | NotificationWhereInput[]
    OR?: NotificationWhereInput[]
    NOT?: NotificationWhereInput | NotificationWhereInput[]
    userId?: StringFilter<"Notification"> | string
    title?: StringFilter<"Notification"> | string
    message?: StringFilter<"Notification"> | string
    type?: StringFilter<"Notification"> | string
    sendToTelegram?: BoolFilter<"Notification"> | boolean
    sendToEmail?: BoolFilter<"Notification"> | boolean
    sendToWebApp?: BoolFilter<"Notification"> | boolean
    isRead?: BoolFilter<"Notification"> | boolean
    isDelivered?: BoolFilter<"Notification"> | boolean
    scheduledFor?: DateTimeNullableFilter<"Notification"> | Date | string | null
    sentAt?: DateTimeNullableFilter<"Notification"> | Date | string | null
    iconUrl?: StringNullableFilter<"Notification"> | string | null
    actionUrl?: StringNullableFilter<"Notification"> | string | null
    metadata?: JsonNullableFilter<"Notification">
    createdAt?: DateTimeFilter<"Notification"> | Date | string
    updatedAt?: DateTimeFilter<"Notification"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
  }, "id">

  export type NotificationOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    title?: SortOrder
    message?: SortOrder
    type?: SortOrder
    sendToTelegram?: SortOrder
    sendToEmail?: SortOrder
    sendToWebApp?: SortOrder
    isRead?: SortOrder
    isDelivered?: SortOrder
    scheduledFor?: SortOrderInput | SortOrder
    sentAt?: SortOrderInput | SortOrder
    iconUrl?: SortOrderInput | SortOrder
    actionUrl?: SortOrderInput | SortOrder
    metadata?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: NotificationCountOrderByAggregateInput
    _max?: NotificationMaxOrderByAggregateInput
    _min?: NotificationMinOrderByAggregateInput
  }

  export type NotificationScalarWhereWithAggregatesInput = {
    AND?: NotificationScalarWhereWithAggregatesInput | NotificationScalarWhereWithAggregatesInput[]
    OR?: NotificationScalarWhereWithAggregatesInput[]
    NOT?: NotificationScalarWhereWithAggregatesInput | NotificationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Notification"> | string
    userId?: StringWithAggregatesFilter<"Notification"> | string
    title?: StringWithAggregatesFilter<"Notification"> | string
    message?: StringWithAggregatesFilter<"Notification"> | string
    type?: StringWithAggregatesFilter<"Notification"> | string
    sendToTelegram?: BoolWithAggregatesFilter<"Notification"> | boolean
    sendToEmail?: BoolWithAggregatesFilter<"Notification"> | boolean
    sendToWebApp?: BoolWithAggregatesFilter<"Notification"> | boolean
    isRead?: BoolWithAggregatesFilter<"Notification"> | boolean
    isDelivered?: BoolWithAggregatesFilter<"Notification"> | boolean
    scheduledFor?: DateTimeNullableWithAggregatesFilter<"Notification"> | Date | string | null
    sentAt?: DateTimeNullableWithAggregatesFilter<"Notification"> | Date | string | null
    iconUrl?: StringNullableWithAggregatesFilter<"Notification"> | string | null
    actionUrl?: StringNullableWithAggregatesFilter<"Notification"> | string | null
    metadata?: JsonNullableWithAggregatesFilter<"Notification">
    createdAt?: DateTimeWithAggregatesFilter<"Notification"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Notification"> | Date | string
  }

  export type AdminActionWhereInput = {
    AND?: AdminActionWhereInput | AdminActionWhereInput[]
    OR?: AdminActionWhereInput[]
    NOT?: AdminActionWhereInput | AdminActionWhereInput[]
    id?: StringFilter<"AdminAction"> | string
    adminId?: StringFilter<"AdminAction"> | string
    type?: EnumAdminActionTypeFilter<"AdminAction"> | $Enums.AdminActionType
    targetId?: StringNullableFilter<"AdminAction"> | string | null
    targetType?: StringNullableFilter<"AdminAction"> | string | null
    description?: StringFilter<"AdminAction"> | string
    comment?: StringNullableFilter<"AdminAction"> | string | null
    metadata?: JsonNullableFilter<"AdminAction">
    ipAddress?: StringNullableFilter<"AdminAction"> | string | null
    userAgent?: StringNullableFilter<"AdminAction"> | string | null
    clientType?: EnumClientTypeNullableFilter<"AdminAction"> | $Enums.ClientType | null
    createdAt?: DateTimeFilter<"AdminAction"> | Date | string
    admin?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type AdminActionOrderByWithRelationInput = {
    id?: SortOrder
    adminId?: SortOrder
    type?: SortOrder
    targetId?: SortOrderInput | SortOrder
    targetType?: SortOrderInput | SortOrder
    description?: SortOrder
    comment?: SortOrderInput | SortOrder
    metadata?: SortOrderInput | SortOrder
    ipAddress?: SortOrderInput | SortOrder
    userAgent?: SortOrderInput | SortOrder
    clientType?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    admin?: UserOrderByWithRelationInput
  }

  export type AdminActionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: AdminActionWhereInput | AdminActionWhereInput[]
    OR?: AdminActionWhereInput[]
    NOT?: AdminActionWhereInput | AdminActionWhereInput[]
    adminId?: StringFilter<"AdminAction"> | string
    type?: EnumAdminActionTypeFilter<"AdminAction"> | $Enums.AdminActionType
    targetId?: StringNullableFilter<"AdminAction"> | string | null
    targetType?: StringNullableFilter<"AdminAction"> | string | null
    description?: StringFilter<"AdminAction"> | string
    comment?: StringNullableFilter<"AdminAction"> | string | null
    metadata?: JsonNullableFilter<"AdminAction">
    ipAddress?: StringNullableFilter<"AdminAction"> | string | null
    userAgent?: StringNullableFilter<"AdminAction"> | string | null
    clientType?: EnumClientTypeNullableFilter<"AdminAction"> | $Enums.ClientType | null
    createdAt?: DateTimeFilter<"AdminAction"> | Date | string
    admin?: XOR<UserRelationFilter, UserWhereInput>
  }, "id">

  export type AdminActionOrderByWithAggregationInput = {
    id?: SortOrder
    adminId?: SortOrder
    type?: SortOrder
    targetId?: SortOrderInput | SortOrder
    targetType?: SortOrderInput | SortOrder
    description?: SortOrder
    comment?: SortOrderInput | SortOrder
    metadata?: SortOrderInput | SortOrder
    ipAddress?: SortOrderInput | SortOrder
    userAgent?: SortOrderInput | SortOrder
    clientType?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: AdminActionCountOrderByAggregateInput
    _max?: AdminActionMaxOrderByAggregateInput
    _min?: AdminActionMinOrderByAggregateInput
  }

  export type AdminActionScalarWhereWithAggregatesInput = {
    AND?: AdminActionScalarWhereWithAggregatesInput | AdminActionScalarWhereWithAggregatesInput[]
    OR?: AdminActionScalarWhereWithAggregatesInput[]
    NOT?: AdminActionScalarWhereWithAggregatesInput | AdminActionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"AdminAction"> | string
    adminId?: StringWithAggregatesFilter<"AdminAction"> | string
    type?: EnumAdminActionTypeWithAggregatesFilter<"AdminAction"> | $Enums.AdminActionType
    targetId?: StringNullableWithAggregatesFilter<"AdminAction"> | string | null
    targetType?: StringNullableWithAggregatesFilter<"AdminAction"> | string | null
    description?: StringWithAggregatesFilter<"AdminAction"> | string
    comment?: StringNullableWithAggregatesFilter<"AdminAction"> | string | null
    metadata?: JsonNullableWithAggregatesFilter<"AdminAction">
    ipAddress?: StringNullableWithAggregatesFilter<"AdminAction"> | string | null
    userAgent?: StringNullableWithAggregatesFilter<"AdminAction"> | string | null
    clientType?: EnumClientTypeNullableWithAggregatesFilter<"AdminAction"> | $Enums.ClientType | null
    createdAt?: DateTimeWithAggregatesFilter<"AdminAction"> | Date | string
  }

  export type BroadcastWhereInput = {
    AND?: BroadcastWhereInput | BroadcastWhereInput[]
    OR?: BroadcastWhereInput[]
    NOT?: BroadcastWhereInput | BroadcastWhereInput[]
    id?: StringFilter<"Broadcast"> | string
    adminId?: StringFilter<"Broadcast"> | string
    title?: StringFilter<"Broadcast"> | string
    message?: StringFilter<"Broadcast"> | string
    imageUrl?: StringNullableFilter<"Broadcast"> | string | null
    actionUrl?: StringNullableFilter<"Broadcast"> | string | null
    target?: EnumBroadcastTargetFilter<"Broadcast"> | $Enums.BroadcastTarget
    targetRegionId?: StringNullableFilter<"Broadcast"> | string | null
    sendToBot?: BoolFilter<"Broadcast"> | boolean
    sendToWebApp?: BoolFilter<"Broadcast"> | boolean
    status?: EnumBroadcastStatusFilter<"Broadcast"> | $Enums.BroadcastStatus
    scheduledFor?: DateTimeNullableFilter<"Broadcast"> | Date | string | null
    totalRecipients?: IntFilter<"Broadcast"> | number
    sentCount?: IntFilter<"Broadcast"> | number
    deliveredCount?: IntFilter<"Broadcast"> | number
    readCount?: IntFilter<"Broadcast"> | number
    clickCount?: IntFilter<"Broadcast"> | number
    failedCount?: IntFilter<"Broadcast"> | number
    errorMessage?: StringNullableFilter<"Broadcast"> | string | null
    createdAt?: DateTimeFilter<"Broadcast"> | Date | string
    updatedAt?: DateTimeFilter<"Broadcast"> | Date | string
    admin?: XOR<UserRelationFilter, UserWhereInput>
    targetRegion?: XOR<RegionNullableRelationFilter, RegionWhereInput> | null
  }

  export type BroadcastOrderByWithRelationInput = {
    id?: SortOrder
    adminId?: SortOrder
    title?: SortOrder
    message?: SortOrder
    imageUrl?: SortOrderInput | SortOrder
    actionUrl?: SortOrderInput | SortOrder
    target?: SortOrder
    targetRegionId?: SortOrderInput | SortOrder
    sendToBot?: SortOrder
    sendToWebApp?: SortOrder
    status?: SortOrder
    scheduledFor?: SortOrderInput | SortOrder
    totalRecipients?: SortOrder
    sentCount?: SortOrder
    deliveredCount?: SortOrder
    readCount?: SortOrder
    clickCount?: SortOrder
    failedCount?: SortOrder
    errorMessage?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    admin?: UserOrderByWithRelationInput
    targetRegion?: RegionOrderByWithRelationInput
  }

  export type BroadcastWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: BroadcastWhereInput | BroadcastWhereInput[]
    OR?: BroadcastWhereInput[]
    NOT?: BroadcastWhereInput | BroadcastWhereInput[]
    adminId?: StringFilter<"Broadcast"> | string
    title?: StringFilter<"Broadcast"> | string
    message?: StringFilter<"Broadcast"> | string
    imageUrl?: StringNullableFilter<"Broadcast"> | string | null
    actionUrl?: StringNullableFilter<"Broadcast"> | string | null
    target?: EnumBroadcastTargetFilter<"Broadcast"> | $Enums.BroadcastTarget
    targetRegionId?: StringNullableFilter<"Broadcast"> | string | null
    sendToBot?: BoolFilter<"Broadcast"> | boolean
    sendToWebApp?: BoolFilter<"Broadcast"> | boolean
    status?: EnumBroadcastStatusFilter<"Broadcast"> | $Enums.BroadcastStatus
    scheduledFor?: DateTimeNullableFilter<"Broadcast"> | Date | string | null
    totalRecipients?: IntFilter<"Broadcast"> | number
    sentCount?: IntFilter<"Broadcast"> | number
    deliveredCount?: IntFilter<"Broadcast"> | number
    readCount?: IntFilter<"Broadcast"> | number
    clickCount?: IntFilter<"Broadcast"> | number
    failedCount?: IntFilter<"Broadcast"> | number
    errorMessage?: StringNullableFilter<"Broadcast"> | string | null
    createdAt?: DateTimeFilter<"Broadcast"> | Date | string
    updatedAt?: DateTimeFilter<"Broadcast"> | Date | string
    admin?: XOR<UserRelationFilter, UserWhereInput>
    targetRegion?: XOR<RegionNullableRelationFilter, RegionWhereInput> | null
  }, "id">

  export type BroadcastOrderByWithAggregationInput = {
    id?: SortOrder
    adminId?: SortOrder
    title?: SortOrder
    message?: SortOrder
    imageUrl?: SortOrderInput | SortOrder
    actionUrl?: SortOrderInput | SortOrder
    target?: SortOrder
    targetRegionId?: SortOrderInput | SortOrder
    sendToBot?: SortOrder
    sendToWebApp?: SortOrder
    status?: SortOrder
    scheduledFor?: SortOrderInput | SortOrder
    totalRecipients?: SortOrder
    sentCount?: SortOrder
    deliveredCount?: SortOrder
    readCount?: SortOrder
    clickCount?: SortOrder
    failedCount?: SortOrder
    errorMessage?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: BroadcastCountOrderByAggregateInput
    _avg?: BroadcastAvgOrderByAggregateInput
    _max?: BroadcastMaxOrderByAggregateInput
    _min?: BroadcastMinOrderByAggregateInput
    _sum?: BroadcastSumOrderByAggregateInput
  }

  export type BroadcastScalarWhereWithAggregatesInput = {
    AND?: BroadcastScalarWhereWithAggregatesInput | BroadcastScalarWhereWithAggregatesInput[]
    OR?: BroadcastScalarWhereWithAggregatesInput[]
    NOT?: BroadcastScalarWhereWithAggregatesInput | BroadcastScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Broadcast"> | string
    adminId?: StringWithAggregatesFilter<"Broadcast"> | string
    title?: StringWithAggregatesFilter<"Broadcast"> | string
    message?: StringWithAggregatesFilter<"Broadcast"> | string
    imageUrl?: StringNullableWithAggregatesFilter<"Broadcast"> | string | null
    actionUrl?: StringNullableWithAggregatesFilter<"Broadcast"> | string | null
    target?: EnumBroadcastTargetWithAggregatesFilter<"Broadcast"> | $Enums.BroadcastTarget
    targetRegionId?: StringNullableWithAggregatesFilter<"Broadcast"> | string | null
    sendToBot?: BoolWithAggregatesFilter<"Broadcast"> | boolean
    sendToWebApp?: BoolWithAggregatesFilter<"Broadcast"> | boolean
    status?: EnumBroadcastStatusWithAggregatesFilter<"Broadcast"> | $Enums.BroadcastStatus
    scheduledFor?: DateTimeNullableWithAggregatesFilter<"Broadcast"> | Date | string | null
    totalRecipients?: IntWithAggregatesFilter<"Broadcast"> | number
    sentCount?: IntWithAggregatesFilter<"Broadcast"> | number
    deliveredCount?: IntWithAggregatesFilter<"Broadcast"> | number
    readCount?: IntWithAggregatesFilter<"Broadcast"> | number
    clickCount?: IntWithAggregatesFilter<"Broadcast"> | number
    failedCount?: IntWithAggregatesFilter<"Broadcast"> | number
    errorMessage?: StringNullableWithAggregatesFilter<"Broadcast"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Broadcast"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Broadcast"> | Date | string
  }

  export type ConfigWhereInput = {
    AND?: ConfigWhereInput | ConfigWhereInput[]
    OR?: ConfigWhereInput[]
    NOT?: ConfigWhereInput | ConfigWhereInput[]
    id?: StringFilter<"Config"> | string
    key?: StringFilter<"Config"> | string
    value?: StringFilter<"Config"> | string
    description?: StringNullableFilter<"Config"> | string | null
    scope?: StringFilter<"Config"> | string
    isSystem?: BoolFilter<"Config"> | boolean
    isEncrypted?: BoolFilter<"Config"> | boolean
    createdAt?: DateTimeFilter<"Config"> | Date | string
    updatedAt?: DateTimeFilter<"Config"> | Date | string
  }

  export type ConfigOrderByWithRelationInput = {
    id?: SortOrder
    key?: SortOrder
    value?: SortOrder
    description?: SortOrderInput | SortOrder
    scope?: SortOrder
    isSystem?: SortOrder
    isEncrypted?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ConfigWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    key?: string
    AND?: ConfigWhereInput | ConfigWhereInput[]
    OR?: ConfigWhereInput[]
    NOT?: ConfigWhereInput | ConfigWhereInput[]
    value?: StringFilter<"Config"> | string
    description?: StringNullableFilter<"Config"> | string | null
    scope?: StringFilter<"Config"> | string
    isSystem?: BoolFilter<"Config"> | boolean
    isEncrypted?: BoolFilter<"Config"> | boolean
    createdAt?: DateTimeFilter<"Config"> | Date | string
    updatedAt?: DateTimeFilter<"Config"> | Date | string
  }, "id" | "key">

  export type ConfigOrderByWithAggregationInput = {
    id?: SortOrder
    key?: SortOrder
    value?: SortOrder
    description?: SortOrderInput | SortOrder
    scope?: SortOrder
    isSystem?: SortOrder
    isEncrypted?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ConfigCountOrderByAggregateInput
    _max?: ConfigMaxOrderByAggregateInput
    _min?: ConfigMinOrderByAggregateInput
  }

  export type ConfigScalarWhereWithAggregatesInput = {
    AND?: ConfigScalarWhereWithAggregatesInput | ConfigScalarWhereWithAggregatesInput[]
    OR?: ConfigScalarWhereWithAggregatesInput[]
    NOT?: ConfigScalarWhereWithAggregatesInput | ConfigScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Config"> | string
    key?: StringWithAggregatesFilter<"Config"> | string
    value?: StringWithAggregatesFilter<"Config"> | string
    description?: StringNullableWithAggregatesFilter<"Config"> | string | null
    scope?: StringWithAggregatesFilter<"Config"> | string
    isSystem?: BoolWithAggregatesFilter<"Config"> | boolean
    isEncrypted?: BoolWithAggregatesFilter<"Config"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"Config"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Config"> | Date | string
  }

  export type UserCreateInput = {
    id?: string
    telegramId: bigint | number
    username?: string | null
    firstName: string
    lastName?: string | null
    phone?: string | null
    email?: string | null
    role?: $Enums.RoleType
    balance?: Decimal | DecimalJsLike | number | string
    frozenBalance?: Decimal | DecimalJsLike | number | string
    totalEarned?: Decimal | DecimalJsLike | number | string
    orderLimit?: number
    createLimit?: number
    completedOrders?: number
    cancelledOrders?: number
    averageRating?: Decimal | DecimalJsLike | number | string
    totalReviews?: number
    hasActivePlan?: boolean
    planExpiresAt?: Date | string | null
    referralCode?: string | null
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    lastSeenAt?: Date | string | null
    notificationsEnabled?: boolean
    emailNotifications?: boolean
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    referredUsers?: UserCreateNestedManyWithoutReferrerInput
    referrer?: UserCreateNestedOneWithoutReferredUsersInput
    vehicles?: UserVehicleCreateNestedManyWithoutUserInput
    ordersAsCustomer?: OrderCreateNestedManyWithoutCustomerInput
    ordersAsExecutor?: OrderCreateNestedManyWithoutExecutorInput
    orderResponses?: OrderResponseCreateNestedManyWithoutExecutorInput
    payments?: PaymentCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    userRegions?: UserRegionCreateNestedManyWithoutUserInput
    adminActions?: AdminActionCreateNestedManyWithoutAdminInput
    broadcasts?: BroadcastCreateNestedManyWithoutAdminInput
    paymentTransactions?: PaymentTransactionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateInput = {
    id?: string
    telegramId: bigint | number
    username?: string | null
    firstName: string
    lastName?: string | null
    phone?: string | null
    email?: string | null
    role?: $Enums.RoleType
    balance?: Decimal | DecimalJsLike | number | string
    frozenBalance?: Decimal | DecimalJsLike | number | string
    totalEarned?: Decimal | DecimalJsLike | number | string
    orderLimit?: number
    createLimit?: number
    completedOrders?: number
    cancelledOrders?: number
    averageRating?: Decimal | DecimalJsLike | number | string
    totalReviews?: number
    hasActivePlan?: boolean
    planExpiresAt?: Date | string | null
    referralCode?: string | null
    referredById?: string | null
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    lastSeenAt?: Date | string | null
    notificationsEnabled?: boolean
    emailNotifications?: boolean
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    referredUsers?: UserUncheckedCreateNestedManyWithoutReferrerInput
    vehicles?: UserVehicleUncheckedCreateNestedManyWithoutUserInput
    ordersAsCustomer?: OrderUncheckedCreateNestedManyWithoutCustomerInput
    ordersAsExecutor?: OrderUncheckedCreateNestedManyWithoutExecutorInput
    orderResponses?: OrderResponseUncheckedCreateNestedManyWithoutExecutorInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    userRegions?: UserRegionUncheckedCreateNestedManyWithoutUserInput
    adminActions?: AdminActionUncheckedCreateNestedManyWithoutAdminInput
    broadcasts?: BroadcastUncheckedCreateNestedManyWithoutAdminInput
    paymentTransactions?: PaymentTransactionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    telegramId?: BigIntFieldUpdateOperationsInput | bigint | number
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleTypeFieldUpdateOperationsInput | $Enums.RoleType
    balance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    frozenBalance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalEarned?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    orderLimit?: IntFieldUpdateOperationsInput | number
    createLimit?: IntFieldUpdateOperationsInput | number
    completedOrders?: IntFieldUpdateOperationsInput | number
    cancelledOrders?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalReviews?: IntFieldUpdateOperationsInput | number
    hasActivePlan?: BoolFieldUpdateOperationsInput | boolean
    planExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    referralCode?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    lastSeenAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notificationsEnabled?: BoolFieldUpdateOperationsInput | boolean
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    referredUsers?: UserUpdateManyWithoutReferrerNestedInput
    referrer?: UserUpdateOneWithoutReferredUsersNestedInput
    vehicles?: UserVehicleUpdateManyWithoutUserNestedInput
    ordersAsCustomer?: OrderUpdateManyWithoutCustomerNestedInput
    ordersAsExecutor?: OrderUpdateManyWithoutExecutorNestedInput
    orderResponses?: OrderResponseUpdateManyWithoutExecutorNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    userRegions?: UserRegionUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUpdateManyWithoutAdminNestedInput
    broadcasts?: BroadcastUpdateManyWithoutAdminNestedInput
    paymentTransactions?: PaymentTransactionUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    telegramId?: BigIntFieldUpdateOperationsInput | bigint | number
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleTypeFieldUpdateOperationsInput | $Enums.RoleType
    balance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    frozenBalance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalEarned?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    orderLimit?: IntFieldUpdateOperationsInput | number
    createLimit?: IntFieldUpdateOperationsInput | number
    completedOrders?: IntFieldUpdateOperationsInput | number
    cancelledOrders?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalReviews?: IntFieldUpdateOperationsInput | number
    hasActivePlan?: BoolFieldUpdateOperationsInput | boolean
    planExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    referralCode?: NullableStringFieldUpdateOperationsInput | string | null
    referredById?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    lastSeenAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notificationsEnabled?: BoolFieldUpdateOperationsInput | boolean
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    referredUsers?: UserUncheckedUpdateManyWithoutReferrerNestedInput
    vehicles?: UserVehicleUncheckedUpdateManyWithoutUserNestedInput
    ordersAsCustomer?: OrderUncheckedUpdateManyWithoutCustomerNestedInput
    ordersAsExecutor?: OrderUncheckedUpdateManyWithoutExecutorNestedInput
    orderResponses?: OrderResponseUncheckedUpdateManyWithoutExecutorNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    userRegions?: UserRegionUncheckedUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUncheckedUpdateManyWithoutAdminNestedInput
    broadcasts?: BroadcastUncheckedUpdateManyWithoutAdminNestedInput
    paymentTransactions?: PaymentTransactionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateManyInput = {
    id?: string
    telegramId: bigint | number
    username?: string | null
    firstName: string
    lastName?: string | null
    phone?: string | null
    email?: string | null
    role?: $Enums.RoleType
    balance?: Decimal | DecimalJsLike | number | string
    frozenBalance?: Decimal | DecimalJsLike | number | string
    totalEarned?: Decimal | DecimalJsLike | number | string
    orderLimit?: number
    createLimit?: number
    completedOrders?: number
    cancelledOrders?: number
    averageRating?: Decimal | DecimalJsLike | number | string
    totalReviews?: number
    hasActivePlan?: boolean
    planExpiresAt?: Date | string | null
    referralCode?: string | null
    referredById?: string | null
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    lastSeenAt?: Date | string | null
    notificationsEnabled?: boolean
    emailNotifications?: boolean
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    telegramId?: BigIntFieldUpdateOperationsInput | bigint | number
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleTypeFieldUpdateOperationsInput | $Enums.RoleType
    balance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    frozenBalance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalEarned?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    orderLimit?: IntFieldUpdateOperationsInput | number
    createLimit?: IntFieldUpdateOperationsInput | number
    completedOrders?: IntFieldUpdateOperationsInput | number
    cancelledOrders?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalReviews?: IntFieldUpdateOperationsInput | number
    hasActivePlan?: BoolFieldUpdateOperationsInput | boolean
    planExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    referralCode?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    lastSeenAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notificationsEnabled?: BoolFieldUpdateOperationsInput | boolean
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    telegramId?: BigIntFieldUpdateOperationsInput | bigint | number
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleTypeFieldUpdateOperationsInput | $Enums.RoleType
    balance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    frozenBalance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalEarned?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    orderLimit?: IntFieldUpdateOperationsInput | number
    createLimit?: IntFieldUpdateOperationsInput | number
    completedOrders?: IntFieldUpdateOperationsInput | number
    cancelledOrders?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalReviews?: IntFieldUpdateOperationsInput | number
    hasActivePlan?: BoolFieldUpdateOperationsInput | boolean
    planExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    referralCode?: NullableStringFieldUpdateOperationsInput | string | null
    referredById?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    lastSeenAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notificationsEnabled?: BoolFieldUpdateOperationsInput | boolean
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RegionCreateInput = {
    id?: string
    name: string
    code: string
    regionCode: string
    subRegions?: JsonNullValueInput | InputJsonValue
    centerLatitude?: Decimal | DecimalJsLike | number | string | null
    centerLongitude?: Decimal | DecimalJsLike | number | string | null
    oneTimePlanPrice: Decimal | DecimalJsLike | number | string
    monthlyPlanPrice: Decimal | DecimalJsLike | number | string
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    orders?: OrderCreateNestedManyWithoutRegionInput
    userRegions?: UserRegionCreateNestedManyWithoutRegionInput
    broadcasts?: BroadcastCreateNestedManyWithoutTargetRegionInput
  }

  export type RegionUncheckedCreateInput = {
    id?: string
    name: string
    code: string
    regionCode: string
    subRegions?: JsonNullValueInput | InputJsonValue
    centerLatitude?: Decimal | DecimalJsLike | number | string | null
    centerLongitude?: Decimal | DecimalJsLike | number | string | null
    oneTimePlanPrice: Decimal | DecimalJsLike | number | string
    monthlyPlanPrice: Decimal | DecimalJsLike | number | string
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    orders?: OrderUncheckedCreateNestedManyWithoutRegionInput
    userRegions?: UserRegionUncheckedCreateNestedManyWithoutRegionInput
    broadcasts?: BroadcastUncheckedCreateNestedManyWithoutTargetRegionInput
  }

  export type RegionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    regionCode?: StringFieldUpdateOperationsInput | string
    subRegions?: JsonNullValueInput | InputJsonValue
    centerLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    centerLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    oneTimePlanPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    monthlyPlanPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orders?: OrderUpdateManyWithoutRegionNestedInput
    userRegions?: UserRegionUpdateManyWithoutRegionNestedInput
    broadcasts?: BroadcastUpdateManyWithoutTargetRegionNestedInput
  }

  export type RegionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    regionCode?: StringFieldUpdateOperationsInput | string
    subRegions?: JsonNullValueInput | InputJsonValue
    centerLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    centerLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    oneTimePlanPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    monthlyPlanPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orders?: OrderUncheckedUpdateManyWithoutRegionNestedInput
    userRegions?: UserRegionUncheckedUpdateManyWithoutRegionNestedInput
    broadcasts?: BroadcastUncheckedUpdateManyWithoutTargetRegionNestedInput
  }

  export type RegionCreateManyInput = {
    id?: string
    name: string
    code: string
    regionCode: string
    subRegions?: JsonNullValueInput | InputJsonValue
    centerLatitude?: Decimal | DecimalJsLike | number | string | null
    centerLongitude?: Decimal | DecimalJsLike | number | string | null
    oneTimePlanPrice: Decimal | DecimalJsLike | number | string
    monthlyPlanPrice: Decimal | DecimalJsLike | number | string
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RegionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    regionCode?: StringFieldUpdateOperationsInput | string
    subRegions?: JsonNullValueInput | InputJsonValue
    centerLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    centerLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    oneTimePlanPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    monthlyPlanPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RegionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    regionCode?: StringFieldUpdateOperationsInput | string
    subRegions?: JsonNullValueInput | InputJsonValue
    centerLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    centerLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    oneTimePlanPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    monthlyPlanPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserRegionCreateInput = {
    id?: string
    regionCode: string
    activeSubRegions?: JsonNullValueInput | InputJsonValue
    planType: $Enums.TariffType
    paidUntil?: Date | string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutUserRegionsInput
    region: RegionCreateNestedOneWithoutUserRegionsInput
  }

  export type UserRegionUncheckedCreateInput = {
    id?: string
    userId: string
    regionId: string
    regionCode: string
    activeSubRegions?: JsonNullValueInput | InputJsonValue
    planType: $Enums.TariffType
    paidUntil?: Date | string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserRegionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    regionCode?: StringFieldUpdateOperationsInput | string
    activeSubRegions?: JsonNullValueInput | InputJsonValue
    planType?: EnumTariffTypeFieldUpdateOperationsInput | $Enums.TariffType
    paidUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutUserRegionsNestedInput
    region?: RegionUpdateOneRequiredWithoutUserRegionsNestedInput
  }

  export type UserRegionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    regionId?: StringFieldUpdateOperationsInput | string
    regionCode?: StringFieldUpdateOperationsInput | string
    activeSubRegions?: JsonNullValueInput | InputJsonValue
    planType?: EnumTariffTypeFieldUpdateOperationsInput | $Enums.TariffType
    paidUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserRegionCreateManyInput = {
    id?: string
    userId: string
    regionId: string
    regionCode: string
    activeSubRegions?: JsonNullValueInput | InputJsonValue
    planType: $Enums.TariffType
    paidUntil?: Date | string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserRegionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    regionCode?: StringFieldUpdateOperationsInput | string
    activeSubRegions?: JsonNullValueInput | InputJsonValue
    planType?: EnumTariffTypeFieldUpdateOperationsInput | $Enums.TariffType
    paidUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserRegionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    regionId?: StringFieldUpdateOperationsInput | string
    regionCode?: StringFieldUpdateOperationsInput | string
    activeSubRegions?: JsonNullValueInput | InputJsonValue
    planType?: EnumTariffTypeFieldUpdateOperationsInput | $Enums.TariffType
    paidUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VehicleCategoryCreateInput = {
    id?: string
    name: string
    displayName: string
    description?: string | null
    iconUrl?: string | null
    sortOrder?: number
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    vehicleTypes?: VehicleTypeCreateNestedManyWithoutCategoryInput
  }

  export type VehicleCategoryUncheckedCreateInput = {
    id?: string
    name: string
    displayName: string
    description?: string | null
    iconUrl?: string | null
    sortOrder?: number
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    vehicleTypes?: VehicleTypeUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type VehicleCategoryUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    iconUrl?: NullableStringFieldUpdateOperationsInput | string | null
    sortOrder?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    vehicleTypes?: VehicleTypeUpdateManyWithoutCategoryNestedInput
  }

  export type VehicleCategoryUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    iconUrl?: NullableStringFieldUpdateOperationsInput | string | null
    sortOrder?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    vehicleTypes?: VehicleTypeUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type VehicleCategoryCreateManyInput = {
    id?: string
    name: string
    displayName: string
    description?: string | null
    iconUrl?: string | null
    sortOrder?: number
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type VehicleCategoryUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    iconUrl?: NullableStringFieldUpdateOperationsInput | string | null
    sortOrder?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VehicleCategoryUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    iconUrl?: NullableStringFieldUpdateOperationsInput | string | null
    sortOrder?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VehicleTypeCreateInput = {
    id?: string
    name: string
    displayName: string
    description?: string | null
    iconUrl?: string | null
    sortOrder?: number
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    category: VehicleCategoryCreateNestedOneWithoutVehicleTypesInput
    vehicleSubtypes?: VehicleSubtypeCreateNestedManyWithoutTypeInput
  }

  export type VehicleTypeUncheckedCreateInput = {
    id?: string
    categoryId: string
    name: string
    displayName: string
    description?: string | null
    iconUrl?: string | null
    sortOrder?: number
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    vehicleSubtypes?: VehicleSubtypeUncheckedCreateNestedManyWithoutTypeInput
  }

  export type VehicleTypeUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    iconUrl?: NullableStringFieldUpdateOperationsInput | string | null
    sortOrder?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: VehicleCategoryUpdateOneRequiredWithoutVehicleTypesNestedInput
    vehicleSubtypes?: VehicleSubtypeUpdateManyWithoutTypeNestedInput
  }

  export type VehicleTypeUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    categoryId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    iconUrl?: NullableStringFieldUpdateOperationsInput | string | null
    sortOrder?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    vehicleSubtypes?: VehicleSubtypeUncheckedUpdateManyWithoutTypeNestedInput
  }

  export type VehicleTypeCreateManyInput = {
    id?: string
    categoryId: string
    name: string
    displayName: string
    description?: string | null
    iconUrl?: string | null
    sortOrder?: number
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type VehicleTypeUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    iconUrl?: NullableStringFieldUpdateOperationsInput | string | null
    sortOrder?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VehicleTypeUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    categoryId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    iconUrl?: NullableStringFieldUpdateOperationsInput | string | null
    sortOrder?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VehicleSubtypeCreateInput = {
    id?: string
    name: string
    displayName: string
    description?: string | null
    iconUrl?: string | null
    sortOrder?: number
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    type: VehicleTypeCreateNestedOneWithoutVehicleSubtypesInput
    userVehicles?: UserVehicleCreateNestedManyWithoutSubtypeInput
    orders?: OrderCreateNestedManyWithoutVehicleSubtypeInput
  }

  export type VehicleSubtypeUncheckedCreateInput = {
    id?: string
    typeId: string
    name: string
    displayName: string
    description?: string | null
    iconUrl?: string | null
    sortOrder?: number
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    userVehicles?: UserVehicleUncheckedCreateNestedManyWithoutSubtypeInput
    orders?: OrderUncheckedCreateNestedManyWithoutVehicleSubtypeInput
  }

  export type VehicleSubtypeUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    iconUrl?: NullableStringFieldUpdateOperationsInput | string | null
    sortOrder?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: VehicleTypeUpdateOneRequiredWithoutVehicleSubtypesNestedInput
    userVehicles?: UserVehicleUpdateManyWithoutSubtypeNestedInput
    orders?: OrderUpdateManyWithoutVehicleSubtypeNestedInput
  }

  export type VehicleSubtypeUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    typeId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    iconUrl?: NullableStringFieldUpdateOperationsInput | string | null
    sortOrder?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userVehicles?: UserVehicleUncheckedUpdateManyWithoutSubtypeNestedInput
    orders?: OrderUncheckedUpdateManyWithoutVehicleSubtypeNestedInput
  }

  export type VehicleSubtypeCreateManyInput = {
    id?: string
    typeId: string
    name: string
    displayName: string
    description?: string | null
    iconUrl?: string | null
    sortOrder?: number
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type VehicleSubtypeUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    iconUrl?: NullableStringFieldUpdateOperationsInput | string | null
    sortOrder?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VehicleSubtypeUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    typeId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    iconUrl?: NullableStringFieldUpdateOperationsInput | string | null
    sortOrder?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserVehicleCreateInput = {
    id?: string
    brand?: string | null
    model?: string | null
    year?: number | null
    licensePlate?: string | null
    color?: string | null
    loadCapacity?: Decimal | DecimalJsLike | number | string | null
    volumeCapacity?: Decimal | DecimalJsLike | number | string | null
    hasRefrigerator?: boolean
    hasLifting?: boolean
    canCarryFragile?: boolean
    photos?: JsonNullValueInput | InputJsonValue
    documents?: JsonNullValueInput | InputJsonValue
    isActive?: boolean
    isVerified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutVehiclesInput
    subtype: VehicleSubtypeCreateNestedOneWithoutUserVehiclesInput
  }

  export type UserVehicleUncheckedCreateInput = {
    id?: string
    userId: string
    subtypeId: string
    brand?: string | null
    model?: string | null
    year?: number | null
    licensePlate?: string | null
    color?: string | null
    loadCapacity?: Decimal | DecimalJsLike | number | string | null
    volumeCapacity?: Decimal | DecimalJsLike | number | string | null
    hasRefrigerator?: boolean
    hasLifting?: boolean
    canCarryFragile?: boolean
    photos?: JsonNullValueInput | InputJsonValue
    documents?: JsonNullValueInput | InputJsonValue
    isActive?: boolean
    isVerified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserVehicleUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    brand?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    licensePlate?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    loadCapacity?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    volumeCapacity?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    hasRefrigerator?: BoolFieldUpdateOperationsInput | boolean
    hasLifting?: BoolFieldUpdateOperationsInput | boolean
    canCarryFragile?: BoolFieldUpdateOperationsInput | boolean
    photos?: JsonNullValueInput | InputJsonValue
    documents?: JsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutVehiclesNestedInput
    subtype?: VehicleSubtypeUpdateOneRequiredWithoutUserVehiclesNestedInput
  }

  export type UserVehicleUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    subtypeId?: StringFieldUpdateOperationsInput | string
    brand?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    licensePlate?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    loadCapacity?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    volumeCapacity?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    hasRefrigerator?: BoolFieldUpdateOperationsInput | boolean
    hasLifting?: BoolFieldUpdateOperationsInput | boolean
    canCarryFragile?: BoolFieldUpdateOperationsInput | boolean
    photos?: JsonNullValueInput | InputJsonValue
    documents?: JsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserVehicleCreateManyInput = {
    id?: string
    userId: string
    subtypeId: string
    brand?: string | null
    model?: string | null
    year?: number | null
    licensePlate?: string | null
    color?: string | null
    loadCapacity?: Decimal | DecimalJsLike | number | string | null
    volumeCapacity?: Decimal | DecimalJsLike | number | string | null
    hasRefrigerator?: boolean
    hasLifting?: boolean
    canCarryFragile?: boolean
    photos?: JsonNullValueInput | InputJsonValue
    documents?: JsonNullValueInput | InputJsonValue
    isActive?: boolean
    isVerified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserVehicleUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    brand?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    licensePlate?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    loadCapacity?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    volumeCapacity?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    hasRefrigerator?: BoolFieldUpdateOperationsInput | boolean
    hasLifting?: BoolFieldUpdateOperationsInput | boolean
    canCarryFragile?: BoolFieldUpdateOperationsInput | boolean
    photos?: JsonNullValueInput | InputJsonValue
    documents?: JsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserVehicleUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    subtypeId?: StringFieldUpdateOperationsInput | string
    brand?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    licensePlate?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    loadCapacity?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    volumeCapacity?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    hasRefrigerator?: BoolFieldUpdateOperationsInput | boolean
    hasLifting?: BoolFieldUpdateOperationsInput | boolean
    canCarryFragile?: BoolFieldUpdateOperationsInput | boolean
    photos?: JsonNullValueInput | InputJsonValue
    documents?: JsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderCreateInput = {
    id?: string
    orderNumber: string
    type: $Enums.OrderType
    title: string
    description: string
    pickupAddress?: string | null
    deliveryAddress?: string | null
    workAddress?: string | null
    pickupLatitude?: Decimal | DecimalJsLike | number | string | null
    pickupLongitude?: Decimal | DecimalJsLike | number | string | null
    deliveryLatitude?: Decimal | DecimalJsLike | number | string | null
    deliveryLongitude?: Decimal | DecimalJsLike | number | string | null
    regionCode: string
    subRegion?: string | null
    scheduledDate?: Date | string | null
    scheduledTime?: string | null
    deadlineDate?: Date | string | null
    isUrgent?: boolean
    budgetFrom?: Decimal | DecimalJsLike | number | string | null
    budgetTo?: Decimal | DecimalJsLike | number | string | null
    proposedPrice?: Decimal | DecimalJsLike | number | string | null
    agreedPrice?: Decimal | DecimalJsLike | number | string | null
    isPriceFixed?: boolean
    cargoWeight?: Decimal | DecimalJsLike | number | string | null
    cargoVolume?: Decimal | DecimalJsLike | number | string | null
    cargoDescription?: string | null
    estimatedDistance?: Decimal | DecimalJsLike | number | string | null
    needsRefrigerator?: boolean
    needsLifting?: boolean
    isFragile?: boolean
    passengerCount?: number | null
    requirements?: string | null
    customerComment?: string | null
    executorComment?: string | null
    status?: $Enums.OrderStatus
    moderationComment?: string | null
    moderatedAt?: Date | string | null
    moderatedById?: string | null
    isSentToExecutors?: boolean
    sentToAllRegions?: boolean
    viewsCount?: number
    responsesCount?: number
    contactPhone?: string | null
    contactName?: string | null
    photos?: JsonNullValueInput | InputJsonValue
    documents?: JsonNullValueInput | InputJsonValue
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    customer: UserCreateNestedOneWithoutOrdersAsCustomerInput
    executor?: UserCreateNestedOneWithoutOrdersAsExecutorInput
    region: RegionCreateNestedOneWithoutOrdersInput
    vehicleSubtype?: VehicleSubtypeCreateNestedOneWithoutOrdersInput
    responses?: OrderResponseCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateInput = {
    id?: string
    orderNumber: string
    customerId: string
    executorId?: string | null
    regionId: string
    vehicleSubtypeId?: string | null
    type: $Enums.OrderType
    title: string
    description: string
    pickupAddress?: string | null
    deliveryAddress?: string | null
    workAddress?: string | null
    pickupLatitude?: Decimal | DecimalJsLike | number | string | null
    pickupLongitude?: Decimal | DecimalJsLike | number | string | null
    deliveryLatitude?: Decimal | DecimalJsLike | number | string | null
    deliveryLongitude?: Decimal | DecimalJsLike | number | string | null
    regionCode: string
    subRegion?: string | null
    scheduledDate?: Date | string | null
    scheduledTime?: string | null
    deadlineDate?: Date | string | null
    isUrgent?: boolean
    budgetFrom?: Decimal | DecimalJsLike | number | string | null
    budgetTo?: Decimal | DecimalJsLike | number | string | null
    proposedPrice?: Decimal | DecimalJsLike | number | string | null
    agreedPrice?: Decimal | DecimalJsLike | number | string | null
    isPriceFixed?: boolean
    cargoWeight?: Decimal | DecimalJsLike | number | string | null
    cargoVolume?: Decimal | DecimalJsLike | number | string | null
    cargoDescription?: string | null
    estimatedDistance?: Decimal | DecimalJsLike | number | string | null
    needsRefrigerator?: boolean
    needsLifting?: boolean
    isFragile?: boolean
    passengerCount?: number | null
    requirements?: string | null
    customerComment?: string | null
    executorComment?: string | null
    status?: $Enums.OrderStatus
    moderationComment?: string | null
    moderatedAt?: Date | string | null
    moderatedById?: string | null
    isSentToExecutors?: boolean
    sentToAllRegions?: boolean
    viewsCount?: number
    responsesCount?: number
    contactPhone?: string | null
    contactName?: string | null
    photos?: JsonNullValueInput | InputJsonValue
    documents?: JsonNullValueInput | InputJsonValue
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    responses?: OrderResponseUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    type?: EnumOrderTypeFieldUpdateOperationsInput | $Enums.OrderType
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    pickupAddress?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    workAddress?: NullableStringFieldUpdateOperationsInput | string | null
    pickupLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    pickupLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliveryLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliveryLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    regionCode?: StringFieldUpdateOperationsInput | string
    subRegion?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledTime?: NullableStringFieldUpdateOperationsInput | string | null
    deadlineDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isUrgent?: BoolFieldUpdateOperationsInput | boolean
    budgetFrom?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    budgetTo?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    proposedPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    agreedPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isPriceFixed?: BoolFieldUpdateOperationsInput | boolean
    cargoWeight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cargoVolume?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cargoDescription?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedDistance?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    needsRefrigerator?: BoolFieldUpdateOperationsInput | boolean
    needsLifting?: BoolFieldUpdateOperationsInput | boolean
    isFragile?: BoolFieldUpdateOperationsInput | boolean
    passengerCount?: NullableIntFieldUpdateOperationsInput | number | null
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    customerComment?: NullableStringFieldUpdateOperationsInput | string | null
    executorComment?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    moderationComment?: NullableStringFieldUpdateOperationsInput | string | null
    moderatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    moderatedById?: NullableStringFieldUpdateOperationsInput | string | null
    isSentToExecutors?: BoolFieldUpdateOperationsInput | boolean
    sentToAllRegions?: BoolFieldUpdateOperationsInput | boolean
    viewsCount?: IntFieldUpdateOperationsInput | number
    responsesCount?: IntFieldUpdateOperationsInput | number
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    photos?: JsonNullValueInput | InputJsonValue
    documents?: JsonNullValueInput | InputJsonValue
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    customer?: UserUpdateOneRequiredWithoutOrdersAsCustomerNestedInput
    executor?: UserUpdateOneWithoutOrdersAsExecutorNestedInput
    region?: RegionUpdateOneRequiredWithoutOrdersNestedInput
    vehicleSubtype?: VehicleSubtypeUpdateOneWithoutOrdersNestedInput
    responses?: OrderResponseUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    customerId?: StringFieldUpdateOperationsInput | string
    executorId?: NullableStringFieldUpdateOperationsInput | string | null
    regionId?: StringFieldUpdateOperationsInput | string
    vehicleSubtypeId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumOrderTypeFieldUpdateOperationsInput | $Enums.OrderType
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    pickupAddress?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    workAddress?: NullableStringFieldUpdateOperationsInput | string | null
    pickupLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    pickupLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliveryLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliveryLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    regionCode?: StringFieldUpdateOperationsInput | string
    subRegion?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledTime?: NullableStringFieldUpdateOperationsInput | string | null
    deadlineDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isUrgent?: BoolFieldUpdateOperationsInput | boolean
    budgetFrom?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    budgetTo?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    proposedPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    agreedPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isPriceFixed?: BoolFieldUpdateOperationsInput | boolean
    cargoWeight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cargoVolume?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cargoDescription?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedDistance?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    needsRefrigerator?: BoolFieldUpdateOperationsInput | boolean
    needsLifting?: BoolFieldUpdateOperationsInput | boolean
    isFragile?: BoolFieldUpdateOperationsInput | boolean
    passengerCount?: NullableIntFieldUpdateOperationsInput | number | null
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    customerComment?: NullableStringFieldUpdateOperationsInput | string | null
    executorComment?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    moderationComment?: NullableStringFieldUpdateOperationsInput | string | null
    moderatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    moderatedById?: NullableStringFieldUpdateOperationsInput | string | null
    isSentToExecutors?: BoolFieldUpdateOperationsInput | boolean
    sentToAllRegions?: BoolFieldUpdateOperationsInput | boolean
    viewsCount?: IntFieldUpdateOperationsInput | number
    responsesCount?: IntFieldUpdateOperationsInput | number
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    photos?: JsonNullValueInput | InputJsonValue
    documents?: JsonNullValueInput | InputJsonValue
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    responses?: OrderResponseUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type OrderCreateManyInput = {
    id?: string
    orderNumber: string
    customerId: string
    executorId?: string | null
    regionId: string
    vehicleSubtypeId?: string | null
    type: $Enums.OrderType
    title: string
    description: string
    pickupAddress?: string | null
    deliveryAddress?: string | null
    workAddress?: string | null
    pickupLatitude?: Decimal | DecimalJsLike | number | string | null
    pickupLongitude?: Decimal | DecimalJsLike | number | string | null
    deliveryLatitude?: Decimal | DecimalJsLike | number | string | null
    deliveryLongitude?: Decimal | DecimalJsLike | number | string | null
    regionCode: string
    subRegion?: string | null
    scheduledDate?: Date | string | null
    scheduledTime?: string | null
    deadlineDate?: Date | string | null
    isUrgent?: boolean
    budgetFrom?: Decimal | DecimalJsLike | number | string | null
    budgetTo?: Decimal | DecimalJsLike | number | string | null
    proposedPrice?: Decimal | DecimalJsLike | number | string | null
    agreedPrice?: Decimal | DecimalJsLike | number | string | null
    isPriceFixed?: boolean
    cargoWeight?: Decimal | DecimalJsLike | number | string | null
    cargoVolume?: Decimal | DecimalJsLike | number | string | null
    cargoDescription?: string | null
    estimatedDistance?: Decimal | DecimalJsLike | number | string | null
    needsRefrigerator?: boolean
    needsLifting?: boolean
    isFragile?: boolean
    passengerCount?: number | null
    requirements?: string | null
    customerComment?: string | null
    executorComment?: string | null
    status?: $Enums.OrderStatus
    moderationComment?: string | null
    moderatedAt?: Date | string | null
    moderatedById?: string | null
    isSentToExecutors?: boolean
    sentToAllRegions?: boolean
    viewsCount?: number
    responsesCount?: number
    contactPhone?: string | null
    contactName?: string | null
    photos?: JsonNullValueInput | InputJsonValue
    documents?: JsonNullValueInput | InputJsonValue
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OrderUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    type?: EnumOrderTypeFieldUpdateOperationsInput | $Enums.OrderType
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    pickupAddress?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    workAddress?: NullableStringFieldUpdateOperationsInput | string | null
    pickupLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    pickupLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliveryLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliveryLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    regionCode?: StringFieldUpdateOperationsInput | string
    subRegion?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledTime?: NullableStringFieldUpdateOperationsInput | string | null
    deadlineDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isUrgent?: BoolFieldUpdateOperationsInput | boolean
    budgetFrom?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    budgetTo?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    proposedPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    agreedPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isPriceFixed?: BoolFieldUpdateOperationsInput | boolean
    cargoWeight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cargoVolume?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cargoDescription?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedDistance?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    needsRefrigerator?: BoolFieldUpdateOperationsInput | boolean
    needsLifting?: BoolFieldUpdateOperationsInput | boolean
    isFragile?: BoolFieldUpdateOperationsInput | boolean
    passengerCount?: NullableIntFieldUpdateOperationsInput | number | null
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    customerComment?: NullableStringFieldUpdateOperationsInput | string | null
    executorComment?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    moderationComment?: NullableStringFieldUpdateOperationsInput | string | null
    moderatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    moderatedById?: NullableStringFieldUpdateOperationsInput | string | null
    isSentToExecutors?: BoolFieldUpdateOperationsInput | boolean
    sentToAllRegions?: BoolFieldUpdateOperationsInput | boolean
    viewsCount?: IntFieldUpdateOperationsInput | number
    responsesCount?: IntFieldUpdateOperationsInput | number
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    photos?: JsonNullValueInput | InputJsonValue
    documents?: JsonNullValueInput | InputJsonValue
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    customerId?: StringFieldUpdateOperationsInput | string
    executorId?: NullableStringFieldUpdateOperationsInput | string | null
    regionId?: StringFieldUpdateOperationsInput | string
    vehicleSubtypeId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumOrderTypeFieldUpdateOperationsInput | $Enums.OrderType
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    pickupAddress?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    workAddress?: NullableStringFieldUpdateOperationsInput | string | null
    pickupLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    pickupLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliveryLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliveryLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    regionCode?: StringFieldUpdateOperationsInput | string
    subRegion?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledTime?: NullableStringFieldUpdateOperationsInput | string | null
    deadlineDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isUrgent?: BoolFieldUpdateOperationsInput | boolean
    budgetFrom?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    budgetTo?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    proposedPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    agreedPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isPriceFixed?: BoolFieldUpdateOperationsInput | boolean
    cargoWeight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cargoVolume?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cargoDescription?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedDistance?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    needsRefrigerator?: BoolFieldUpdateOperationsInput | boolean
    needsLifting?: BoolFieldUpdateOperationsInput | boolean
    isFragile?: BoolFieldUpdateOperationsInput | boolean
    passengerCount?: NullableIntFieldUpdateOperationsInput | number | null
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    customerComment?: NullableStringFieldUpdateOperationsInput | string | null
    executorComment?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    moderationComment?: NullableStringFieldUpdateOperationsInput | string | null
    moderatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    moderatedById?: NullableStringFieldUpdateOperationsInput | string | null
    isSentToExecutors?: BoolFieldUpdateOperationsInput | boolean
    sentToAllRegions?: BoolFieldUpdateOperationsInput | boolean
    viewsCount?: IntFieldUpdateOperationsInput | number
    responsesCount?: IntFieldUpdateOperationsInput | number
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    photos?: JsonNullValueInput | InputJsonValue
    documents?: JsonNullValueInput | InputJsonValue
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderResponseCreateInput = {
    id?: string
    proposedPrice?: Decimal | DecimalJsLike | number | string | null
    comment?: string | null
    estimatedDuration?: string | null
    status?: string
    vehiclePhotos?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    order: OrderCreateNestedOneWithoutResponsesInput
    executor: UserCreateNestedOneWithoutOrderResponsesInput
  }

  export type OrderResponseUncheckedCreateInput = {
    id?: string
    orderId: string
    executorId: string
    proposedPrice?: Decimal | DecimalJsLike | number | string | null
    comment?: string | null
    estimatedDuration?: string | null
    status?: string
    vehiclePhotos?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OrderResponseUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    proposedPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedDuration?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    vehiclePhotos?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    order?: OrderUpdateOneRequiredWithoutResponsesNestedInput
    executor?: UserUpdateOneRequiredWithoutOrderResponsesNestedInput
  }

  export type OrderResponseUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    executorId?: StringFieldUpdateOperationsInput | string
    proposedPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedDuration?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    vehiclePhotos?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderResponseCreateManyInput = {
    id?: string
    orderId: string
    executorId: string
    proposedPrice?: Decimal | DecimalJsLike | number | string | null
    comment?: string | null
    estimatedDuration?: string | null
    status?: string
    vehiclePhotos?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OrderResponseUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    proposedPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedDuration?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    vehiclePhotos?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderResponseUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    executorId?: StringFieldUpdateOperationsInput | string
    proposedPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedDuration?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    vehiclePhotos?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PaymentCreateInput = {
    id?: string
    tinkoffPaymentId?: string | null
    tinkoffStatus?: string | null
    amount: Decimal | DecimalJsLike | number | string
    description: string
    status?: $Enums.PaymentStatus
    metadata?: NullableJsonNullValueInput | InputJsonValue
    paidAt?: Date | string | null
    expiresAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutPaymentsInput
  }

  export type PaymentUncheckedCreateInput = {
    id?: string
    userId: string
    tinkoffPaymentId?: string | null
    tinkoffStatus?: string | null
    amount: Decimal | DecimalJsLike | number | string
    description: string
    status?: $Enums.PaymentStatus
    metadata?: NullableJsonNullValueInput | InputJsonValue
    paidAt?: Date | string | null
    expiresAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PaymentUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    tinkoffPaymentId?: NullableStringFieldUpdateOperationsInput | string | null
    tinkoffStatus?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: StringFieldUpdateOperationsInput | string
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    metadata?: NullableJsonNullValueInput | InputJsonValue
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutPaymentsNestedInput
  }

  export type PaymentUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    tinkoffPaymentId?: NullableStringFieldUpdateOperationsInput | string | null
    tinkoffStatus?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: StringFieldUpdateOperationsInput | string
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    metadata?: NullableJsonNullValueInput | InputJsonValue
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PaymentCreateManyInput = {
    id?: string
    userId: string
    tinkoffPaymentId?: string | null
    tinkoffStatus?: string | null
    amount: Decimal | DecimalJsLike | number | string
    description: string
    status?: $Enums.PaymentStatus
    metadata?: NullableJsonNullValueInput | InputJsonValue
    paidAt?: Date | string | null
    expiresAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PaymentUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    tinkoffPaymentId?: NullableStringFieldUpdateOperationsInput | string | null
    tinkoffStatus?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: StringFieldUpdateOperationsInput | string
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    metadata?: NullableJsonNullValueInput | InputJsonValue
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PaymentUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    tinkoffPaymentId?: NullableStringFieldUpdateOperationsInput | string | null
    tinkoffStatus?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: StringFieldUpdateOperationsInput | string
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    metadata?: NullableJsonNullValueInput | InputJsonValue
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PaymentTransactionCreateInput = {
    id?: string
    orderId?: string | null
    type: string
    amount: Decimal | DecimalJsLike | number | string
    description: string
    status: string
    paymentMethod?: string | null
    externalId?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutPaymentTransactionsInput
  }

  export type PaymentTransactionUncheckedCreateInput = {
    id?: string
    userId: string
    orderId?: string | null
    type: string
    amount: Decimal | DecimalJsLike | number | string
    description: string
    status: string
    paymentMethod?: string | null
    externalId?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PaymentTransactionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    externalId?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutPaymentTransactionsNestedInput
  }

  export type PaymentTransactionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    externalId?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PaymentTransactionCreateManyInput = {
    id?: string
    userId: string
    orderId?: string | null
    type: string
    amount: Decimal | DecimalJsLike | number | string
    description: string
    status: string
    paymentMethod?: string | null
    externalId?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PaymentTransactionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    externalId?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PaymentTransactionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    externalId?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SessionCreateInput = {
    id?: string
    clientType: $Enums.ClientType
    chatId?: bigint | number | null
    webAppInitData?: string | null
    userAgent?: string | null
    ipAddress?: string | null
    currentState?: string | null
    contextData?: NullableJsonNullValueInput | InputJsonValue
    lastActivity?: Date | string
    expiresAt: Date | string
    status?: $Enums.SessionStatus
    deviceInfo?: NullableJsonNullValueInput | InputJsonValue
    timezone?: string | null
    language?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutSessionsInput
  }

  export type SessionUncheckedCreateInput = {
    id?: string
    userId: string
    clientType: $Enums.ClientType
    chatId?: bigint | number | null
    webAppInitData?: string | null
    userAgent?: string | null
    ipAddress?: string | null
    currentState?: string | null
    contextData?: NullableJsonNullValueInput | InputJsonValue
    lastActivity?: Date | string
    expiresAt: Date | string
    status?: $Enums.SessionStatus
    deviceInfo?: NullableJsonNullValueInput | InputJsonValue
    timezone?: string | null
    language?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SessionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientType?: EnumClientTypeFieldUpdateOperationsInput | $Enums.ClientType
    chatId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    webAppInitData?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    currentState?: NullableStringFieldUpdateOperationsInput | string | null
    contextData?: NullableJsonNullValueInput | InputJsonValue
    lastActivity?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumSessionStatusFieldUpdateOperationsInput | $Enums.SessionStatus
    deviceInfo?: NullableJsonNullValueInput | InputJsonValue
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutSessionsNestedInput
  }

  export type SessionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    clientType?: EnumClientTypeFieldUpdateOperationsInput | $Enums.ClientType
    chatId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    webAppInitData?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    currentState?: NullableStringFieldUpdateOperationsInput | string | null
    contextData?: NullableJsonNullValueInput | InputJsonValue
    lastActivity?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumSessionStatusFieldUpdateOperationsInput | $Enums.SessionStatus
    deviceInfo?: NullableJsonNullValueInput | InputJsonValue
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SessionCreateManyInput = {
    id?: string
    userId: string
    clientType: $Enums.ClientType
    chatId?: bigint | number | null
    webAppInitData?: string | null
    userAgent?: string | null
    ipAddress?: string | null
    currentState?: string | null
    contextData?: NullableJsonNullValueInput | InputJsonValue
    lastActivity?: Date | string
    expiresAt: Date | string
    status?: $Enums.SessionStatus
    deviceInfo?: NullableJsonNullValueInput | InputJsonValue
    timezone?: string | null
    language?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SessionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientType?: EnumClientTypeFieldUpdateOperationsInput | $Enums.ClientType
    chatId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    webAppInitData?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    currentState?: NullableStringFieldUpdateOperationsInput | string | null
    contextData?: NullableJsonNullValueInput | InputJsonValue
    lastActivity?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumSessionStatusFieldUpdateOperationsInput | $Enums.SessionStatus
    deviceInfo?: NullableJsonNullValueInput | InputJsonValue
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SessionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    clientType?: EnumClientTypeFieldUpdateOperationsInput | $Enums.ClientType
    chatId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    webAppInitData?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    currentState?: NullableStringFieldUpdateOperationsInput | string | null
    contextData?: NullableJsonNullValueInput | InputJsonValue
    lastActivity?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumSessionStatusFieldUpdateOperationsInput | $Enums.SessionStatus
    deviceInfo?: NullableJsonNullValueInput | InputJsonValue
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificationCreateInput = {
    id?: string
    title: string
    message: string
    type: string
    sendToTelegram?: boolean
    sendToEmail?: boolean
    sendToWebApp?: boolean
    isRead?: boolean
    isDelivered?: boolean
    scheduledFor?: Date | string | null
    sentAt?: Date | string | null
    iconUrl?: string | null
    actionUrl?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutNotificationsInput
  }

  export type NotificationUncheckedCreateInput = {
    id?: string
    userId: string
    title: string
    message: string
    type: string
    sendToTelegram?: boolean
    sendToEmail?: boolean
    sendToWebApp?: boolean
    isRead?: boolean
    isDelivered?: boolean
    scheduledFor?: Date | string | null
    sentAt?: Date | string | null
    iconUrl?: string | null
    actionUrl?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type NotificationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    sendToTelegram?: BoolFieldUpdateOperationsInput | boolean
    sendToEmail?: BoolFieldUpdateOperationsInput | boolean
    sendToWebApp?: BoolFieldUpdateOperationsInput | boolean
    isRead?: BoolFieldUpdateOperationsInput | boolean
    isDelivered?: BoolFieldUpdateOperationsInput | boolean
    scheduledFor?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    iconUrl?: NullableStringFieldUpdateOperationsInput | string | null
    actionUrl?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutNotificationsNestedInput
  }

  export type NotificationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    sendToTelegram?: BoolFieldUpdateOperationsInput | boolean
    sendToEmail?: BoolFieldUpdateOperationsInput | boolean
    sendToWebApp?: BoolFieldUpdateOperationsInput | boolean
    isRead?: BoolFieldUpdateOperationsInput | boolean
    isDelivered?: BoolFieldUpdateOperationsInput | boolean
    scheduledFor?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    iconUrl?: NullableStringFieldUpdateOperationsInput | string | null
    actionUrl?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificationCreateManyInput = {
    id?: string
    userId: string
    title: string
    message: string
    type: string
    sendToTelegram?: boolean
    sendToEmail?: boolean
    sendToWebApp?: boolean
    isRead?: boolean
    isDelivered?: boolean
    scheduledFor?: Date | string | null
    sentAt?: Date | string | null
    iconUrl?: string | null
    actionUrl?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type NotificationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    sendToTelegram?: BoolFieldUpdateOperationsInput | boolean
    sendToEmail?: BoolFieldUpdateOperationsInput | boolean
    sendToWebApp?: BoolFieldUpdateOperationsInput | boolean
    isRead?: BoolFieldUpdateOperationsInput | boolean
    isDelivered?: BoolFieldUpdateOperationsInput | boolean
    scheduledFor?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    iconUrl?: NullableStringFieldUpdateOperationsInput | string | null
    actionUrl?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    sendToTelegram?: BoolFieldUpdateOperationsInput | boolean
    sendToEmail?: BoolFieldUpdateOperationsInput | boolean
    sendToWebApp?: BoolFieldUpdateOperationsInput | boolean
    isRead?: BoolFieldUpdateOperationsInput | boolean
    isDelivered?: BoolFieldUpdateOperationsInput | boolean
    scheduledFor?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    iconUrl?: NullableStringFieldUpdateOperationsInput | string | null
    actionUrl?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AdminActionCreateInput = {
    id?: string
    type: $Enums.AdminActionType
    targetId?: string | null
    targetType?: string | null
    description: string
    comment?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    ipAddress?: string | null
    userAgent?: string | null
    clientType?: $Enums.ClientType | null
    createdAt?: Date | string
    admin: UserCreateNestedOneWithoutAdminActionsInput
  }

  export type AdminActionUncheckedCreateInput = {
    id?: string
    adminId: string
    type: $Enums.AdminActionType
    targetId?: string | null
    targetType?: string | null
    description: string
    comment?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    ipAddress?: string | null
    userAgent?: string | null
    clientType?: $Enums.ClientType | null
    createdAt?: Date | string
  }

  export type AdminActionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumAdminActionTypeFieldUpdateOperationsInput | $Enums.AdminActionType
    targetId?: NullableStringFieldUpdateOperationsInput | string | null
    targetType?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    clientType?: NullableEnumClientTypeFieldUpdateOperationsInput | $Enums.ClientType | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    admin?: UserUpdateOneRequiredWithoutAdminActionsNestedInput
  }

  export type AdminActionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    adminId?: StringFieldUpdateOperationsInput | string
    type?: EnumAdminActionTypeFieldUpdateOperationsInput | $Enums.AdminActionType
    targetId?: NullableStringFieldUpdateOperationsInput | string | null
    targetType?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    clientType?: NullableEnumClientTypeFieldUpdateOperationsInput | $Enums.ClientType | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AdminActionCreateManyInput = {
    id?: string
    adminId: string
    type: $Enums.AdminActionType
    targetId?: string | null
    targetType?: string | null
    description: string
    comment?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    ipAddress?: string | null
    userAgent?: string | null
    clientType?: $Enums.ClientType | null
    createdAt?: Date | string
  }

  export type AdminActionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumAdminActionTypeFieldUpdateOperationsInput | $Enums.AdminActionType
    targetId?: NullableStringFieldUpdateOperationsInput | string | null
    targetType?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    clientType?: NullableEnumClientTypeFieldUpdateOperationsInput | $Enums.ClientType | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AdminActionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    adminId?: StringFieldUpdateOperationsInput | string
    type?: EnumAdminActionTypeFieldUpdateOperationsInput | $Enums.AdminActionType
    targetId?: NullableStringFieldUpdateOperationsInput | string | null
    targetType?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    clientType?: NullableEnumClientTypeFieldUpdateOperationsInput | $Enums.ClientType | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BroadcastCreateInput = {
    id?: string
    title: string
    message: string
    imageUrl?: string | null
    actionUrl?: string | null
    target: $Enums.BroadcastTarget
    sendToBot?: boolean
    sendToWebApp?: boolean
    status?: $Enums.BroadcastStatus
    scheduledFor?: Date | string | null
    totalRecipients?: number
    sentCount?: number
    deliveredCount?: number
    readCount?: number
    clickCount?: number
    failedCount?: number
    errorMessage?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    admin: UserCreateNestedOneWithoutBroadcastsInput
    targetRegion?: RegionCreateNestedOneWithoutBroadcastsInput
  }

  export type BroadcastUncheckedCreateInput = {
    id?: string
    adminId: string
    title: string
    message: string
    imageUrl?: string | null
    actionUrl?: string | null
    target: $Enums.BroadcastTarget
    targetRegionId?: string | null
    sendToBot?: boolean
    sendToWebApp?: boolean
    status?: $Enums.BroadcastStatus
    scheduledFor?: Date | string | null
    totalRecipients?: number
    sentCount?: number
    deliveredCount?: number
    readCount?: number
    clickCount?: number
    failedCount?: number
    errorMessage?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type BroadcastUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    actionUrl?: NullableStringFieldUpdateOperationsInput | string | null
    target?: EnumBroadcastTargetFieldUpdateOperationsInput | $Enums.BroadcastTarget
    sendToBot?: BoolFieldUpdateOperationsInput | boolean
    sendToWebApp?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumBroadcastStatusFieldUpdateOperationsInput | $Enums.BroadcastStatus
    scheduledFor?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalRecipients?: IntFieldUpdateOperationsInput | number
    sentCount?: IntFieldUpdateOperationsInput | number
    deliveredCount?: IntFieldUpdateOperationsInput | number
    readCount?: IntFieldUpdateOperationsInput | number
    clickCount?: IntFieldUpdateOperationsInput | number
    failedCount?: IntFieldUpdateOperationsInput | number
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    admin?: UserUpdateOneRequiredWithoutBroadcastsNestedInput
    targetRegion?: RegionUpdateOneWithoutBroadcastsNestedInput
  }

  export type BroadcastUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    adminId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    actionUrl?: NullableStringFieldUpdateOperationsInput | string | null
    target?: EnumBroadcastTargetFieldUpdateOperationsInput | $Enums.BroadcastTarget
    targetRegionId?: NullableStringFieldUpdateOperationsInput | string | null
    sendToBot?: BoolFieldUpdateOperationsInput | boolean
    sendToWebApp?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumBroadcastStatusFieldUpdateOperationsInput | $Enums.BroadcastStatus
    scheduledFor?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalRecipients?: IntFieldUpdateOperationsInput | number
    sentCount?: IntFieldUpdateOperationsInput | number
    deliveredCount?: IntFieldUpdateOperationsInput | number
    readCount?: IntFieldUpdateOperationsInput | number
    clickCount?: IntFieldUpdateOperationsInput | number
    failedCount?: IntFieldUpdateOperationsInput | number
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BroadcastCreateManyInput = {
    id?: string
    adminId: string
    title: string
    message: string
    imageUrl?: string | null
    actionUrl?: string | null
    target: $Enums.BroadcastTarget
    targetRegionId?: string | null
    sendToBot?: boolean
    sendToWebApp?: boolean
    status?: $Enums.BroadcastStatus
    scheduledFor?: Date | string | null
    totalRecipients?: number
    sentCount?: number
    deliveredCount?: number
    readCount?: number
    clickCount?: number
    failedCount?: number
    errorMessage?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type BroadcastUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    actionUrl?: NullableStringFieldUpdateOperationsInput | string | null
    target?: EnumBroadcastTargetFieldUpdateOperationsInput | $Enums.BroadcastTarget
    sendToBot?: BoolFieldUpdateOperationsInput | boolean
    sendToWebApp?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumBroadcastStatusFieldUpdateOperationsInput | $Enums.BroadcastStatus
    scheduledFor?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalRecipients?: IntFieldUpdateOperationsInput | number
    sentCount?: IntFieldUpdateOperationsInput | number
    deliveredCount?: IntFieldUpdateOperationsInput | number
    readCount?: IntFieldUpdateOperationsInput | number
    clickCount?: IntFieldUpdateOperationsInput | number
    failedCount?: IntFieldUpdateOperationsInput | number
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BroadcastUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    adminId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    actionUrl?: NullableStringFieldUpdateOperationsInput | string | null
    target?: EnumBroadcastTargetFieldUpdateOperationsInput | $Enums.BroadcastTarget
    targetRegionId?: NullableStringFieldUpdateOperationsInput | string | null
    sendToBot?: BoolFieldUpdateOperationsInput | boolean
    sendToWebApp?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumBroadcastStatusFieldUpdateOperationsInput | $Enums.BroadcastStatus
    scheduledFor?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalRecipients?: IntFieldUpdateOperationsInput | number
    sentCount?: IntFieldUpdateOperationsInput | number
    deliveredCount?: IntFieldUpdateOperationsInput | number
    readCount?: IntFieldUpdateOperationsInput | number
    clickCount?: IntFieldUpdateOperationsInput | number
    failedCount?: IntFieldUpdateOperationsInput | number
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ConfigCreateInput = {
    id?: string
    key: string
    value: string
    description?: string | null
    scope?: string
    isSystem?: boolean
    isEncrypted?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ConfigUncheckedCreateInput = {
    id?: string
    key: string
    value: string
    description?: string | null
    scope?: string
    isSystem?: boolean
    isEncrypted?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ConfigUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: StringFieldUpdateOperationsInput | string
    isSystem?: BoolFieldUpdateOperationsInput | boolean
    isEncrypted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ConfigUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: StringFieldUpdateOperationsInput | string
    isSystem?: BoolFieldUpdateOperationsInput | boolean
    isEncrypted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ConfigCreateManyInput = {
    id?: string
    key: string
    value: string
    description?: string | null
    scope?: string
    isSystem?: boolean
    isEncrypted?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ConfigUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: StringFieldUpdateOperationsInput | string
    isSystem?: BoolFieldUpdateOperationsInput | boolean
    isEncrypted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ConfigUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: StringFieldUpdateOperationsInput | string
    isSystem?: BoolFieldUpdateOperationsInput | boolean
    isEncrypted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type BigIntFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntFilter<$PrismaModel> | bigint | number
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type EnumRoleTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.RoleType | EnumRoleTypeFieldRefInput<$PrismaModel>
    in?: $Enums.RoleType[] | ListEnumRoleTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.RoleType[] | ListEnumRoleTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumRoleTypeFilter<$PrismaModel> | $Enums.RoleType
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }
  export type JsonFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonFilterBase<$PrismaModel>>, 'path'>>

  export type JsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type UserListRelationFilter = {
    every?: UserWhereInput
    some?: UserWhereInput
    none?: UserWhereInput
  }

  export type UserNullableRelationFilter = {
    is?: UserWhereInput | null
    isNot?: UserWhereInput | null
  }

  export type UserVehicleListRelationFilter = {
    every?: UserVehicleWhereInput
    some?: UserVehicleWhereInput
    none?: UserVehicleWhereInput
  }

  export type OrderListRelationFilter = {
    every?: OrderWhereInput
    some?: OrderWhereInput
    none?: OrderWhereInput
  }

  export type OrderResponseListRelationFilter = {
    every?: OrderResponseWhereInput
    some?: OrderResponseWhereInput
    none?: OrderResponseWhereInput
  }

  export type PaymentListRelationFilter = {
    every?: PaymentWhereInput
    some?: PaymentWhereInput
    none?: PaymentWhereInput
  }

  export type SessionListRelationFilter = {
    every?: SessionWhereInput
    some?: SessionWhereInput
    none?: SessionWhereInput
  }

  export type NotificationListRelationFilter = {
    every?: NotificationWhereInput
    some?: NotificationWhereInput
    none?: NotificationWhereInput
  }

  export type UserRegionListRelationFilter = {
    every?: UserRegionWhereInput
    some?: UserRegionWhereInput
    none?: UserRegionWhereInput
  }

  export type AdminActionListRelationFilter = {
    every?: AdminActionWhereInput
    some?: AdminActionWhereInput
    none?: AdminActionWhereInput
  }

  export type BroadcastListRelationFilter = {
    every?: BroadcastWhereInput
    some?: BroadcastWhereInput
    none?: BroadcastWhereInput
  }

  export type PaymentTransactionListRelationFilter = {
    every?: PaymentTransactionWhereInput
    some?: PaymentTransactionWhereInput
    none?: PaymentTransactionWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type UserOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserVehicleOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type OrderOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type OrderResponseOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PaymentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SessionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type NotificationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserRegionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AdminActionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type BroadcastOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PaymentTransactionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    telegramId?: SortOrder
    username?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    role?: SortOrder
    balance?: SortOrder
    frozenBalance?: SortOrder
    totalEarned?: SortOrder
    orderLimit?: SortOrder
    createLimit?: SortOrder
    completedOrders?: SortOrder
    cancelledOrders?: SortOrder
    averageRating?: SortOrder
    totalReviews?: SortOrder
    hasActivePlan?: SortOrder
    planExpiresAt?: SortOrder
    referralCode?: SortOrder
    referredById?: SortOrder
    isActive?: SortOrder
    isBanned?: SortOrder
    banReason?: SortOrder
    lastSeenAt?: SortOrder
    notificationsEnabled?: SortOrder
    emailNotifications?: SortOrder
    activityLog?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserAvgOrderByAggregateInput = {
    telegramId?: SortOrder
    balance?: SortOrder
    frozenBalance?: SortOrder
    totalEarned?: SortOrder
    orderLimit?: SortOrder
    createLimit?: SortOrder
    completedOrders?: SortOrder
    cancelledOrders?: SortOrder
    averageRating?: SortOrder
    totalReviews?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    telegramId?: SortOrder
    username?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    role?: SortOrder
    balance?: SortOrder
    frozenBalance?: SortOrder
    totalEarned?: SortOrder
    orderLimit?: SortOrder
    createLimit?: SortOrder
    completedOrders?: SortOrder
    cancelledOrders?: SortOrder
    averageRating?: SortOrder
    totalReviews?: SortOrder
    hasActivePlan?: SortOrder
    planExpiresAt?: SortOrder
    referralCode?: SortOrder
    referredById?: SortOrder
    isActive?: SortOrder
    isBanned?: SortOrder
    banReason?: SortOrder
    lastSeenAt?: SortOrder
    notificationsEnabled?: SortOrder
    emailNotifications?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    telegramId?: SortOrder
    username?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    role?: SortOrder
    balance?: SortOrder
    frozenBalance?: SortOrder
    totalEarned?: SortOrder
    orderLimit?: SortOrder
    createLimit?: SortOrder
    completedOrders?: SortOrder
    cancelledOrders?: SortOrder
    averageRating?: SortOrder
    totalReviews?: SortOrder
    hasActivePlan?: SortOrder
    planExpiresAt?: SortOrder
    referralCode?: SortOrder
    referredById?: SortOrder
    isActive?: SortOrder
    isBanned?: SortOrder
    banReason?: SortOrder
    lastSeenAt?: SortOrder
    notificationsEnabled?: SortOrder
    emailNotifications?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserSumOrderByAggregateInput = {
    telegramId?: SortOrder
    balance?: SortOrder
    frozenBalance?: SortOrder
    totalEarned?: SortOrder
    orderLimit?: SortOrder
    createLimit?: SortOrder
    completedOrders?: SortOrder
    cancelledOrders?: SortOrder
    averageRating?: SortOrder
    totalReviews?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type BigIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntWithAggregatesFilter<$PrismaModel> | bigint | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedBigIntFilter<$PrismaModel>
    _min?: NestedBigIntFilter<$PrismaModel>
    _max?: NestedBigIntFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type EnumRoleTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.RoleType | EnumRoleTypeFieldRefInput<$PrismaModel>
    in?: $Enums.RoleType[] | ListEnumRoleTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.RoleType[] | ListEnumRoleTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumRoleTypeWithAggregatesFilter<$PrismaModel> | $Enums.RoleType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRoleTypeFilter<$PrismaModel>
    _max?: NestedEnumRoleTypeFilter<$PrismaModel>
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }
  export type JsonWithAggregatesFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedJsonFilter<$PrismaModel>
    _max?: NestedJsonFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type RegionCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    code?: SortOrder
    regionCode?: SortOrder
    subRegions?: SortOrder
    centerLatitude?: SortOrder
    centerLongitude?: SortOrder
    oneTimePlanPrice?: SortOrder
    monthlyPlanPrice?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RegionAvgOrderByAggregateInput = {
    centerLatitude?: SortOrder
    centerLongitude?: SortOrder
    oneTimePlanPrice?: SortOrder
    monthlyPlanPrice?: SortOrder
  }

  export type RegionMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    code?: SortOrder
    regionCode?: SortOrder
    centerLatitude?: SortOrder
    centerLongitude?: SortOrder
    oneTimePlanPrice?: SortOrder
    monthlyPlanPrice?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RegionMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    code?: SortOrder
    regionCode?: SortOrder
    centerLatitude?: SortOrder
    centerLongitude?: SortOrder
    oneTimePlanPrice?: SortOrder
    monthlyPlanPrice?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RegionSumOrderByAggregateInput = {
    centerLatitude?: SortOrder
    centerLongitude?: SortOrder
    oneTimePlanPrice?: SortOrder
    monthlyPlanPrice?: SortOrder
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type EnumTariffTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.TariffType | EnumTariffTypeFieldRefInput<$PrismaModel>
    in?: $Enums.TariffType[] | ListEnumTariffTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.TariffType[] | ListEnumTariffTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumTariffTypeFilter<$PrismaModel> | $Enums.TariffType
  }

  export type UserRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type RegionRelationFilter = {
    is?: RegionWhereInput
    isNot?: RegionWhereInput
  }

  export type UserRegionUserIdRegionIdCompoundUniqueInput = {
    userId: string
    regionId: string
  }

  export type UserRegionCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    regionId?: SortOrder
    regionCode?: SortOrder
    activeSubRegions?: SortOrder
    planType?: SortOrder
    paidUntil?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserRegionMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    regionId?: SortOrder
    regionCode?: SortOrder
    planType?: SortOrder
    paidUntil?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserRegionMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    regionId?: SortOrder
    regionCode?: SortOrder
    planType?: SortOrder
    paidUntil?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EnumTariffTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TariffType | EnumTariffTypeFieldRefInput<$PrismaModel>
    in?: $Enums.TariffType[] | ListEnumTariffTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.TariffType[] | ListEnumTariffTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumTariffTypeWithAggregatesFilter<$PrismaModel> | $Enums.TariffType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTariffTypeFilter<$PrismaModel>
    _max?: NestedEnumTariffTypeFilter<$PrismaModel>
  }

  export type VehicleTypeListRelationFilter = {
    every?: VehicleTypeWhereInput
    some?: VehicleTypeWhereInput
    none?: VehicleTypeWhereInput
  }

  export type VehicleTypeOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type VehicleCategoryCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    displayName?: SortOrder
    description?: SortOrder
    iconUrl?: SortOrder
    sortOrder?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type VehicleCategoryAvgOrderByAggregateInput = {
    sortOrder?: SortOrder
  }

  export type VehicleCategoryMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    displayName?: SortOrder
    description?: SortOrder
    iconUrl?: SortOrder
    sortOrder?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type VehicleCategoryMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    displayName?: SortOrder
    description?: SortOrder
    iconUrl?: SortOrder
    sortOrder?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type VehicleCategorySumOrderByAggregateInput = {
    sortOrder?: SortOrder
  }

  export type VehicleCategoryRelationFilter = {
    is?: VehicleCategoryWhereInput
    isNot?: VehicleCategoryWhereInput
  }

  export type VehicleSubtypeListRelationFilter = {
    every?: VehicleSubtypeWhereInput
    some?: VehicleSubtypeWhereInput
    none?: VehicleSubtypeWhereInput
  }

  export type VehicleSubtypeOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type VehicleTypeCategoryIdNameCompoundUniqueInput = {
    categoryId: string
    name: string
  }

  export type VehicleTypeCountOrderByAggregateInput = {
    id?: SortOrder
    categoryId?: SortOrder
    name?: SortOrder
    displayName?: SortOrder
    description?: SortOrder
    iconUrl?: SortOrder
    sortOrder?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type VehicleTypeAvgOrderByAggregateInput = {
    sortOrder?: SortOrder
  }

  export type VehicleTypeMaxOrderByAggregateInput = {
    id?: SortOrder
    categoryId?: SortOrder
    name?: SortOrder
    displayName?: SortOrder
    description?: SortOrder
    iconUrl?: SortOrder
    sortOrder?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type VehicleTypeMinOrderByAggregateInput = {
    id?: SortOrder
    categoryId?: SortOrder
    name?: SortOrder
    displayName?: SortOrder
    description?: SortOrder
    iconUrl?: SortOrder
    sortOrder?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type VehicleTypeSumOrderByAggregateInput = {
    sortOrder?: SortOrder
  }

  export type VehicleTypeRelationFilter = {
    is?: VehicleTypeWhereInput
    isNot?: VehicleTypeWhereInput
  }

  export type VehicleSubtypeTypeIdNameCompoundUniqueInput = {
    typeId: string
    name: string
  }

  export type VehicleSubtypeCountOrderByAggregateInput = {
    id?: SortOrder
    typeId?: SortOrder
    name?: SortOrder
    displayName?: SortOrder
    description?: SortOrder
    iconUrl?: SortOrder
    sortOrder?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type VehicleSubtypeAvgOrderByAggregateInput = {
    sortOrder?: SortOrder
  }

  export type VehicleSubtypeMaxOrderByAggregateInput = {
    id?: SortOrder
    typeId?: SortOrder
    name?: SortOrder
    displayName?: SortOrder
    description?: SortOrder
    iconUrl?: SortOrder
    sortOrder?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type VehicleSubtypeMinOrderByAggregateInput = {
    id?: SortOrder
    typeId?: SortOrder
    name?: SortOrder
    displayName?: SortOrder
    description?: SortOrder
    iconUrl?: SortOrder
    sortOrder?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type VehicleSubtypeSumOrderByAggregateInput = {
    sortOrder?: SortOrder
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type VehicleSubtypeRelationFilter = {
    is?: VehicleSubtypeWhereInput
    isNot?: VehicleSubtypeWhereInput
  }

  export type UserVehicleUserIdSubtypeIdCompoundUniqueInput = {
    userId: string
    subtypeId: string
  }

  export type UserVehicleCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    subtypeId?: SortOrder
    brand?: SortOrder
    model?: SortOrder
    year?: SortOrder
    licensePlate?: SortOrder
    color?: SortOrder
    loadCapacity?: SortOrder
    volumeCapacity?: SortOrder
    hasRefrigerator?: SortOrder
    hasLifting?: SortOrder
    canCarryFragile?: SortOrder
    photos?: SortOrder
    documents?: SortOrder
    isActive?: SortOrder
    isVerified?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserVehicleAvgOrderByAggregateInput = {
    year?: SortOrder
    loadCapacity?: SortOrder
    volumeCapacity?: SortOrder
  }

  export type UserVehicleMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    subtypeId?: SortOrder
    brand?: SortOrder
    model?: SortOrder
    year?: SortOrder
    licensePlate?: SortOrder
    color?: SortOrder
    loadCapacity?: SortOrder
    volumeCapacity?: SortOrder
    hasRefrigerator?: SortOrder
    hasLifting?: SortOrder
    canCarryFragile?: SortOrder
    isActive?: SortOrder
    isVerified?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserVehicleMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    subtypeId?: SortOrder
    brand?: SortOrder
    model?: SortOrder
    year?: SortOrder
    licensePlate?: SortOrder
    color?: SortOrder
    loadCapacity?: SortOrder
    volumeCapacity?: SortOrder
    hasRefrigerator?: SortOrder
    hasLifting?: SortOrder
    canCarryFragile?: SortOrder
    isActive?: SortOrder
    isVerified?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserVehicleSumOrderByAggregateInput = {
    year?: SortOrder
    loadCapacity?: SortOrder
    volumeCapacity?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type EnumOrderTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderType | EnumOrderTypeFieldRefInput<$PrismaModel>
    in?: $Enums.OrderType[] | ListEnumOrderTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderType[] | ListEnumOrderTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderTypeFilter<$PrismaModel> | $Enums.OrderType
  }

  export type EnumOrderStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderStatus | EnumOrderStatusFieldRefInput<$PrismaModel>
    in?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderStatusFilter<$PrismaModel> | $Enums.OrderStatus
  }

  export type VehicleSubtypeNullableRelationFilter = {
    is?: VehicleSubtypeWhereInput | null
    isNot?: VehicleSubtypeWhereInput | null
  }

  export type OrderCountOrderByAggregateInput = {
    id?: SortOrder
    orderNumber?: SortOrder
    customerId?: SortOrder
    executorId?: SortOrder
    regionId?: SortOrder
    vehicleSubtypeId?: SortOrder
    type?: SortOrder
    title?: SortOrder
    description?: SortOrder
    pickupAddress?: SortOrder
    deliveryAddress?: SortOrder
    workAddress?: SortOrder
    pickupLatitude?: SortOrder
    pickupLongitude?: SortOrder
    deliveryLatitude?: SortOrder
    deliveryLongitude?: SortOrder
    regionCode?: SortOrder
    subRegion?: SortOrder
    scheduledDate?: SortOrder
    scheduledTime?: SortOrder
    deadlineDate?: SortOrder
    isUrgent?: SortOrder
    budgetFrom?: SortOrder
    budgetTo?: SortOrder
    proposedPrice?: SortOrder
    agreedPrice?: SortOrder
    isPriceFixed?: SortOrder
    cargoWeight?: SortOrder
    cargoVolume?: SortOrder
    cargoDescription?: SortOrder
    estimatedDistance?: SortOrder
    needsRefrigerator?: SortOrder
    needsLifting?: SortOrder
    isFragile?: SortOrder
    passengerCount?: SortOrder
    requirements?: SortOrder
    customerComment?: SortOrder
    executorComment?: SortOrder
    status?: SortOrder
    moderationComment?: SortOrder
    moderatedAt?: SortOrder
    moderatedById?: SortOrder
    isSentToExecutors?: SortOrder
    sentToAllRegions?: SortOrder
    viewsCount?: SortOrder
    responsesCount?: SortOrder
    contactPhone?: SortOrder
    contactName?: SortOrder
    photos?: SortOrder
    documents?: SortOrder
    activityLog?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type OrderAvgOrderByAggregateInput = {
    pickupLatitude?: SortOrder
    pickupLongitude?: SortOrder
    deliveryLatitude?: SortOrder
    deliveryLongitude?: SortOrder
    budgetFrom?: SortOrder
    budgetTo?: SortOrder
    proposedPrice?: SortOrder
    agreedPrice?: SortOrder
    cargoWeight?: SortOrder
    cargoVolume?: SortOrder
    estimatedDistance?: SortOrder
    passengerCount?: SortOrder
    viewsCount?: SortOrder
    responsesCount?: SortOrder
  }

  export type OrderMaxOrderByAggregateInput = {
    id?: SortOrder
    orderNumber?: SortOrder
    customerId?: SortOrder
    executorId?: SortOrder
    regionId?: SortOrder
    vehicleSubtypeId?: SortOrder
    type?: SortOrder
    title?: SortOrder
    description?: SortOrder
    pickupAddress?: SortOrder
    deliveryAddress?: SortOrder
    workAddress?: SortOrder
    pickupLatitude?: SortOrder
    pickupLongitude?: SortOrder
    deliveryLatitude?: SortOrder
    deliveryLongitude?: SortOrder
    regionCode?: SortOrder
    subRegion?: SortOrder
    scheduledDate?: SortOrder
    scheduledTime?: SortOrder
    deadlineDate?: SortOrder
    isUrgent?: SortOrder
    budgetFrom?: SortOrder
    budgetTo?: SortOrder
    proposedPrice?: SortOrder
    agreedPrice?: SortOrder
    isPriceFixed?: SortOrder
    cargoWeight?: SortOrder
    cargoVolume?: SortOrder
    cargoDescription?: SortOrder
    estimatedDistance?: SortOrder
    needsRefrigerator?: SortOrder
    needsLifting?: SortOrder
    isFragile?: SortOrder
    passengerCount?: SortOrder
    requirements?: SortOrder
    customerComment?: SortOrder
    executorComment?: SortOrder
    status?: SortOrder
    moderationComment?: SortOrder
    moderatedAt?: SortOrder
    moderatedById?: SortOrder
    isSentToExecutors?: SortOrder
    sentToAllRegions?: SortOrder
    viewsCount?: SortOrder
    responsesCount?: SortOrder
    contactPhone?: SortOrder
    contactName?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type OrderMinOrderByAggregateInput = {
    id?: SortOrder
    orderNumber?: SortOrder
    customerId?: SortOrder
    executorId?: SortOrder
    regionId?: SortOrder
    vehicleSubtypeId?: SortOrder
    type?: SortOrder
    title?: SortOrder
    description?: SortOrder
    pickupAddress?: SortOrder
    deliveryAddress?: SortOrder
    workAddress?: SortOrder
    pickupLatitude?: SortOrder
    pickupLongitude?: SortOrder
    deliveryLatitude?: SortOrder
    deliveryLongitude?: SortOrder
    regionCode?: SortOrder
    subRegion?: SortOrder
    scheduledDate?: SortOrder
    scheduledTime?: SortOrder
    deadlineDate?: SortOrder
    isUrgent?: SortOrder
    budgetFrom?: SortOrder
    budgetTo?: SortOrder
    proposedPrice?: SortOrder
    agreedPrice?: SortOrder
    isPriceFixed?: SortOrder
    cargoWeight?: SortOrder
    cargoVolume?: SortOrder
    cargoDescription?: SortOrder
    estimatedDistance?: SortOrder
    needsRefrigerator?: SortOrder
    needsLifting?: SortOrder
    isFragile?: SortOrder
    passengerCount?: SortOrder
    requirements?: SortOrder
    customerComment?: SortOrder
    executorComment?: SortOrder
    status?: SortOrder
    moderationComment?: SortOrder
    moderatedAt?: SortOrder
    moderatedById?: SortOrder
    isSentToExecutors?: SortOrder
    sentToAllRegions?: SortOrder
    viewsCount?: SortOrder
    responsesCount?: SortOrder
    contactPhone?: SortOrder
    contactName?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type OrderSumOrderByAggregateInput = {
    pickupLatitude?: SortOrder
    pickupLongitude?: SortOrder
    deliveryLatitude?: SortOrder
    deliveryLongitude?: SortOrder
    budgetFrom?: SortOrder
    budgetTo?: SortOrder
    proposedPrice?: SortOrder
    agreedPrice?: SortOrder
    cargoWeight?: SortOrder
    cargoVolume?: SortOrder
    estimatedDistance?: SortOrder
    passengerCount?: SortOrder
    viewsCount?: SortOrder
    responsesCount?: SortOrder
  }

  export type EnumOrderTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderType | EnumOrderTypeFieldRefInput<$PrismaModel>
    in?: $Enums.OrderType[] | ListEnumOrderTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderType[] | ListEnumOrderTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderTypeWithAggregatesFilter<$PrismaModel> | $Enums.OrderType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumOrderTypeFilter<$PrismaModel>
    _max?: NestedEnumOrderTypeFilter<$PrismaModel>
  }

  export type EnumOrderStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderStatus | EnumOrderStatusFieldRefInput<$PrismaModel>
    in?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderStatusWithAggregatesFilter<$PrismaModel> | $Enums.OrderStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumOrderStatusFilter<$PrismaModel>
    _max?: NestedEnumOrderStatusFilter<$PrismaModel>
  }

  export type OrderRelationFilter = {
    is?: OrderWhereInput
    isNot?: OrderWhereInput
  }

  export type OrderResponseOrderIdExecutorIdCompoundUniqueInput = {
    orderId: string
    executorId: string
  }

  export type OrderResponseCountOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    executorId?: SortOrder
    proposedPrice?: SortOrder
    comment?: SortOrder
    estimatedDuration?: SortOrder
    status?: SortOrder
    vehiclePhotos?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type OrderResponseAvgOrderByAggregateInput = {
    proposedPrice?: SortOrder
  }

  export type OrderResponseMaxOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    executorId?: SortOrder
    proposedPrice?: SortOrder
    comment?: SortOrder
    estimatedDuration?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type OrderResponseMinOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    executorId?: SortOrder
    proposedPrice?: SortOrder
    comment?: SortOrder
    estimatedDuration?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type OrderResponseSumOrderByAggregateInput = {
    proposedPrice?: SortOrder
  }

  export type EnumPaymentStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentStatus | EnumPaymentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentStatusFilter<$PrismaModel> | $Enums.PaymentStatus
  }
  export type JsonNullableFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type PaymentCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    tinkoffPaymentId?: SortOrder
    tinkoffStatus?: SortOrder
    amount?: SortOrder
    description?: SortOrder
    status?: SortOrder
    metadata?: SortOrder
    paidAt?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PaymentAvgOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type PaymentMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    tinkoffPaymentId?: SortOrder
    tinkoffStatus?: SortOrder
    amount?: SortOrder
    description?: SortOrder
    status?: SortOrder
    paidAt?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PaymentMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    tinkoffPaymentId?: SortOrder
    tinkoffStatus?: SortOrder
    amount?: SortOrder
    description?: SortOrder
    status?: SortOrder
    paidAt?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PaymentSumOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type EnumPaymentStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentStatus | EnumPaymentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentStatusWithAggregatesFilter<$PrismaModel> | $Enums.PaymentStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPaymentStatusFilter<$PrismaModel>
    _max?: NestedEnumPaymentStatusFilter<$PrismaModel>
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type PaymentTransactionCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    orderId?: SortOrder
    type?: SortOrder
    amount?: SortOrder
    description?: SortOrder
    status?: SortOrder
    paymentMethod?: SortOrder
    externalId?: SortOrder
    metadata?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PaymentTransactionAvgOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type PaymentTransactionMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    orderId?: SortOrder
    type?: SortOrder
    amount?: SortOrder
    description?: SortOrder
    status?: SortOrder
    paymentMethod?: SortOrder
    externalId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PaymentTransactionMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    orderId?: SortOrder
    type?: SortOrder
    amount?: SortOrder
    description?: SortOrder
    status?: SortOrder
    paymentMethod?: SortOrder
    externalId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PaymentTransactionSumOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type EnumClientTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.ClientType | EnumClientTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ClientType[] | ListEnumClientTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ClientType[] | ListEnumClientTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumClientTypeFilter<$PrismaModel> | $Enums.ClientType
  }

  export type BigIntNullableFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel> | null
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntNullableFilter<$PrismaModel> | bigint | number | null
  }

  export type EnumSessionStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.SessionStatus | EnumSessionStatusFieldRefInput<$PrismaModel>
    in?: $Enums.SessionStatus[] | ListEnumSessionStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.SessionStatus[] | ListEnumSessionStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumSessionStatusFilter<$PrismaModel> | $Enums.SessionStatus
  }

  export type SessionCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    clientType?: SortOrder
    chatId?: SortOrder
    webAppInitData?: SortOrder
    userAgent?: SortOrder
    ipAddress?: SortOrder
    currentState?: SortOrder
    contextData?: SortOrder
    lastActivity?: SortOrder
    expiresAt?: SortOrder
    status?: SortOrder
    deviceInfo?: SortOrder
    timezone?: SortOrder
    language?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SessionAvgOrderByAggregateInput = {
    chatId?: SortOrder
  }

  export type SessionMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    clientType?: SortOrder
    chatId?: SortOrder
    webAppInitData?: SortOrder
    userAgent?: SortOrder
    ipAddress?: SortOrder
    currentState?: SortOrder
    lastActivity?: SortOrder
    expiresAt?: SortOrder
    status?: SortOrder
    timezone?: SortOrder
    language?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SessionMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    clientType?: SortOrder
    chatId?: SortOrder
    webAppInitData?: SortOrder
    userAgent?: SortOrder
    ipAddress?: SortOrder
    currentState?: SortOrder
    lastActivity?: SortOrder
    expiresAt?: SortOrder
    status?: SortOrder
    timezone?: SortOrder
    language?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SessionSumOrderByAggregateInput = {
    chatId?: SortOrder
  }

  export type EnumClientTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ClientType | EnumClientTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ClientType[] | ListEnumClientTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ClientType[] | ListEnumClientTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumClientTypeWithAggregatesFilter<$PrismaModel> | $Enums.ClientType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumClientTypeFilter<$PrismaModel>
    _max?: NestedEnumClientTypeFilter<$PrismaModel>
  }

  export type BigIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel> | null
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntNullableWithAggregatesFilter<$PrismaModel> | bigint | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedBigIntNullableFilter<$PrismaModel>
    _min?: NestedBigIntNullableFilter<$PrismaModel>
    _max?: NestedBigIntNullableFilter<$PrismaModel>
  }

  export type EnumSessionStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SessionStatus | EnumSessionStatusFieldRefInput<$PrismaModel>
    in?: $Enums.SessionStatus[] | ListEnumSessionStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.SessionStatus[] | ListEnumSessionStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumSessionStatusWithAggregatesFilter<$PrismaModel> | $Enums.SessionStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumSessionStatusFilter<$PrismaModel>
    _max?: NestedEnumSessionStatusFilter<$PrismaModel>
  }

  export type NotificationCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    title?: SortOrder
    message?: SortOrder
    type?: SortOrder
    sendToTelegram?: SortOrder
    sendToEmail?: SortOrder
    sendToWebApp?: SortOrder
    isRead?: SortOrder
    isDelivered?: SortOrder
    scheduledFor?: SortOrder
    sentAt?: SortOrder
    iconUrl?: SortOrder
    actionUrl?: SortOrder
    metadata?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type NotificationMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    title?: SortOrder
    message?: SortOrder
    type?: SortOrder
    sendToTelegram?: SortOrder
    sendToEmail?: SortOrder
    sendToWebApp?: SortOrder
    isRead?: SortOrder
    isDelivered?: SortOrder
    scheduledFor?: SortOrder
    sentAt?: SortOrder
    iconUrl?: SortOrder
    actionUrl?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type NotificationMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    title?: SortOrder
    message?: SortOrder
    type?: SortOrder
    sendToTelegram?: SortOrder
    sendToEmail?: SortOrder
    sendToWebApp?: SortOrder
    isRead?: SortOrder
    isDelivered?: SortOrder
    scheduledFor?: SortOrder
    sentAt?: SortOrder
    iconUrl?: SortOrder
    actionUrl?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EnumAdminActionTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.AdminActionType | EnumAdminActionTypeFieldRefInput<$PrismaModel>
    in?: $Enums.AdminActionType[] | ListEnumAdminActionTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.AdminActionType[] | ListEnumAdminActionTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumAdminActionTypeFilter<$PrismaModel> | $Enums.AdminActionType
  }

  export type EnumClientTypeNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.ClientType | EnumClientTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.ClientType[] | ListEnumClientTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.ClientType[] | ListEnumClientTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumClientTypeNullableFilter<$PrismaModel> | $Enums.ClientType | null
  }

  export type AdminActionCountOrderByAggregateInput = {
    id?: SortOrder
    adminId?: SortOrder
    type?: SortOrder
    targetId?: SortOrder
    targetType?: SortOrder
    description?: SortOrder
    comment?: SortOrder
    metadata?: SortOrder
    ipAddress?: SortOrder
    userAgent?: SortOrder
    clientType?: SortOrder
    createdAt?: SortOrder
  }

  export type AdminActionMaxOrderByAggregateInput = {
    id?: SortOrder
    adminId?: SortOrder
    type?: SortOrder
    targetId?: SortOrder
    targetType?: SortOrder
    description?: SortOrder
    comment?: SortOrder
    ipAddress?: SortOrder
    userAgent?: SortOrder
    clientType?: SortOrder
    createdAt?: SortOrder
  }

  export type AdminActionMinOrderByAggregateInput = {
    id?: SortOrder
    adminId?: SortOrder
    type?: SortOrder
    targetId?: SortOrder
    targetType?: SortOrder
    description?: SortOrder
    comment?: SortOrder
    ipAddress?: SortOrder
    userAgent?: SortOrder
    clientType?: SortOrder
    createdAt?: SortOrder
  }

  export type EnumAdminActionTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AdminActionType | EnumAdminActionTypeFieldRefInput<$PrismaModel>
    in?: $Enums.AdminActionType[] | ListEnumAdminActionTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.AdminActionType[] | ListEnumAdminActionTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumAdminActionTypeWithAggregatesFilter<$PrismaModel> | $Enums.AdminActionType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAdminActionTypeFilter<$PrismaModel>
    _max?: NestedEnumAdminActionTypeFilter<$PrismaModel>
  }

  export type EnumClientTypeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ClientType | EnumClientTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.ClientType[] | ListEnumClientTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.ClientType[] | ListEnumClientTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumClientTypeNullableWithAggregatesFilter<$PrismaModel> | $Enums.ClientType | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumClientTypeNullableFilter<$PrismaModel>
    _max?: NestedEnumClientTypeNullableFilter<$PrismaModel>
  }

  export type EnumBroadcastTargetFilter<$PrismaModel = never> = {
    equals?: $Enums.BroadcastTarget | EnumBroadcastTargetFieldRefInput<$PrismaModel>
    in?: $Enums.BroadcastTarget[] | ListEnumBroadcastTargetFieldRefInput<$PrismaModel>
    notIn?: $Enums.BroadcastTarget[] | ListEnumBroadcastTargetFieldRefInput<$PrismaModel>
    not?: NestedEnumBroadcastTargetFilter<$PrismaModel> | $Enums.BroadcastTarget
  }

  export type EnumBroadcastStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.BroadcastStatus | EnumBroadcastStatusFieldRefInput<$PrismaModel>
    in?: $Enums.BroadcastStatus[] | ListEnumBroadcastStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.BroadcastStatus[] | ListEnumBroadcastStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumBroadcastStatusFilter<$PrismaModel> | $Enums.BroadcastStatus
  }

  export type RegionNullableRelationFilter = {
    is?: RegionWhereInput | null
    isNot?: RegionWhereInput | null
  }

  export type BroadcastCountOrderByAggregateInput = {
    id?: SortOrder
    adminId?: SortOrder
    title?: SortOrder
    message?: SortOrder
    imageUrl?: SortOrder
    actionUrl?: SortOrder
    target?: SortOrder
    targetRegionId?: SortOrder
    sendToBot?: SortOrder
    sendToWebApp?: SortOrder
    status?: SortOrder
    scheduledFor?: SortOrder
    totalRecipients?: SortOrder
    sentCount?: SortOrder
    deliveredCount?: SortOrder
    readCount?: SortOrder
    clickCount?: SortOrder
    failedCount?: SortOrder
    errorMessage?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BroadcastAvgOrderByAggregateInput = {
    totalRecipients?: SortOrder
    sentCount?: SortOrder
    deliveredCount?: SortOrder
    readCount?: SortOrder
    clickCount?: SortOrder
    failedCount?: SortOrder
  }

  export type BroadcastMaxOrderByAggregateInput = {
    id?: SortOrder
    adminId?: SortOrder
    title?: SortOrder
    message?: SortOrder
    imageUrl?: SortOrder
    actionUrl?: SortOrder
    target?: SortOrder
    targetRegionId?: SortOrder
    sendToBot?: SortOrder
    sendToWebApp?: SortOrder
    status?: SortOrder
    scheduledFor?: SortOrder
    totalRecipients?: SortOrder
    sentCount?: SortOrder
    deliveredCount?: SortOrder
    readCount?: SortOrder
    clickCount?: SortOrder
    failedCount?: SortOrder
    errorMessage?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BroadcastMinOrderByAggregateInput = {
    id?: SortOrder
    adminId?: SortOrder
    title?: SortOrder
    message?: SortOrder
    imageUrl?: SortOrder
    actionUrl?: SortOrder
    target?: SortOrder
    targetRegionId?: SortOrder
    sendToBot?: SortOrder
    sendToWebApp?: SortOrder
    status?: SortOrder
    scheduledFor?: SortOrder
    totalRecipients?: SortOrder
    sentCount?: SortOrder
    deliveredCount?: SortOrder
    readCount?: SortOrder
    clickCount?: SortOrder
    failedCount?: SortOrder
    errorMessage?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BroadcastSumOrderByAggregateInput = {
    totalRecipients?: SortOrder
    sentCount?: SortOrder
    deliveredCount?: SortOrder
    readCount?: SortOrder
    clickCount?: SortOrder
    failedCount?: SortOrder
  }

  export type EnumBroadcastTargetWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.BroadcastTarget | EnumBroadcastTargetFieldRefInput<$PrismaModel>
    in?: $Enums.BroadcastTarget[] | ListEnumBroadcastTargetFieldRefInput<$PrismaModel>
    notIn?: $Enums.BroadcastTarget[] | ListEnumBroadcastTargetFieldRefInput<$PrismaModel>
    not?: NestedEnumBroadcastTargetWithAggregatesFilter<$PrismaModel> | $Enums.BroadcastTarget
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumBroadcastTargetFilter<$PrismaModel>
    _max?: NestedEnumBroadcastTargetFilter<$PrismaModel>
  }

  export type EnumBroadcastStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.BroadcastStatus | EnumBroadcastStatusFieldRefInput<$PrismaModel>
    in?: $Enums.BroadcastStatus[] | ListEnumBroadcastStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.BroadcastStatus[] | ListEnumBroadcastStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumBroadcastStatusWithAggregatesFilter<$PrismaModel> | $Enums.BroadcastStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumBroadcastStatusFilter<$PrismaModel>
    _max?: NestedEnumBroadcastStatusFilter<$PrismaModel>
  }

  export type ConfigCountOrderByAggregateInput = {
    id?: SortOrder
    key?: SortOrder
    value?: SortOrder
    description?: SortOrder
    scope?: SortOrder
    isSystem?: SortOrder
    isEncrypted?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ConfigMaxOrderByAggregateInput = {
    id?: SortOrder
    key?: SortOrder
    value?: SortOrder
    description?: SortOrder
    scope?: SortOrder
    isSystem?: SortOrder
    isEncrypted?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ConfigMinOrderByAggregateInput = {
    id?: SortOrder
    key?: SortOrder
    value?: SortOrder
    description?: SortOrder
    scope?: SortOrder
    isSystem?: SortOrder
    isEncrypted?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserCreateNestedManyWithoutReferrerInput = {
    create?: XOR<UserCreateWithoutReferrerInput, UserUncheckedCreateWithoutReferrerInput> | UserCreateWithoutReferrerInput[] | UserUncheckedCreateWithoutReferrerInput[]
    connectOrCreate?: UserCreateOrConnectWithoutReferrerInput | UserCreateOrConnectWithoutReferrerInput[]
    createMany?: UserCreateManyReferrerInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutReferredUsersInput = {
    create?: XOR<UserCreateWithoutReferredUsersInput, UserUncheckedCreateWithoutReferredUsersInput>
    connectOrCreate?: UserCreateOrConnectWithoutReferredUsersInput
    connect?: UserWhereUniqueInput
  }

  export type UserVehicleCreateNestedManyWithoutUserInput = {
    create?: XOR<UserVehicleCreateWithoutUserInput, UserVehicleUncheckedCreateWithoutUserInput> | UserVehicleCreateWithoutUserInput[] | UserVehicleUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserVehicleCreateOrConnectWithoutUserInput | UserVehicleCreateOrConnectWithoutUserInput[]
    createMany?: UserVehicleCreateManyUserInputEnvelope
    connect?: UserVehicleWhereUniqueInput | UserVehicleWhereUniqueInput[]
  }

  export type OrderCreateNestedManyWithoutCustomerInput = {
    create?: XOR<OrderCreateWithoutCustomerInput, OrderUncheckedCreateWithoutCustomerInput> | OrderCreateWithoutCustomerInput[] | OrderUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutCustomerInput | OrderCreateOrConnectWithoutCustomerInput[]
    createMany?: OrderCreateManyCustomerInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type OrderCreateNestedManyWithoutExecutorInput = {
    create?: XOR<OrderCreateWithoutExecutorInput, OrderUncheckedCreateWithoutExecutorInput> | OrderCreateWithoutExecutorInput[] | OrderUncheckedCreateWithoutExecutorInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutExecutorInput | OrderCreateOrConnectWithoutExecutorInput[]
    createMany?: OrderCreateManyExecutorInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type OrderResponseCreateNestedManyWithoutExecutorInput = {
    create?: XOR<OrderResponseCreateWithoutExecutorInput, OrderResponseUncheckedCreateWithoutExecutorInput> | OrderResponseCreateWithoutExecutorInput[] | OrderResponseUncheckedCreateWithoutExecutorInput[]
    connectOrCreate?: OrderResponseCreateOrConnectWithoutExecutorInput | OrderResponseCreateOrConnectWithoutExecutorInput[]
    createMany?: OrderResponseCreateManyExecutorInputEnvelope
    connect?: OrderResponseWhereUniqueInput | OrderResponseWhereUniqueInput[]
  }

  export type PaymentCreateNestedManyWithoutUserInput = {
    create?: XOR<PaymentCreateWithoutUserInput, PaymentUncheckedCreateWithoutUserInput> | PaymentCreateWithoutUserInput[] | PaymentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutUserInput | PaymentCreateOrConnectWithoutUserInput[]
    createMany?: PaymentCreateManyUserInputEnvelope
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
  }

  export type SessionCreateNestedManyWithoutUserInput = {
    create?: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput> | SessionCreateWithoutUserInput[] | SessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SessionCreateOrConnectWithoutUserInput | SessionCreateOrConnectWithoutUserInput[]
    createMany?: SessionCreateManyUserInputEnvelope
    connect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
  }

  export type NotificationCreateNestedManyWithoutUserInput = {
    create?: XOR<NotificationCreateWithoutUserInput, NotificationUncheckedCreateWithoutUserInput> | NotificationCreateWithoutUserInput[] | NotificationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutUserInput | NotificationCreateOrConnectWithoutUserInput[]
    createMany?: NotificationCreateManyUserInputEnvelope
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
  }

  export type UserRegionCreateNestedManyWithoutUserInput = {
    create?: XOR<UserRegionCreateWithoutUserInput, UserRegionUncheckedCreateWithoutUserInput> | UserRegionCreateWithoutUserInput[] | UserRegionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserRegionCreateOrConnectWithoutUserInput | UserRegionCreateOrConnectWithoutUserInput[]
    createMany?: UserRegionCreateManyUserInputEnvelope
    connect?: UserRegionWhereUniqueInput | UserRegionWhereUniqueInput[]
  }

  export type AdminActionCreateNestedManyWithoutAdminInput = {
    create?: XOR<AdminActionCreateWithoutAdminInput, AdminActionUncheckedCreateWithoutAdminInput> | AdminActionCreateWithoutAdminInput[] | AdminActionUncheckedCreateWithoutAdminInput[]
    connectOrCreate?: AdminActionCreateOrConnectWithoutAdminInput | AdminActionCreateOrConnectWithoutAdminInput[]
    createMany?: AdminActionCreateManyAdminInputEnvelope
    connect?: AdminActionWhereUniqueInput | AdminActionWhereUniqueInput[]
  }

  export type BroadcastCreateNestedManyWithoutAdminInput = {
    create?: XOR<BroadcastCreateWithoutAdminInput, BroadcastUncheckedCreateWithoutAdminInput> | BroadcastCreateWithoutAdminInput[] | BroadcastUncheckedCreateWithoutAdminInput[]
    connectOrCreate?: BroadcastCreateOrConnectWithoutAdminInput | BroadcastCreateOrConnectWithoutAdminInput[]
    createMany?: BroadcastCreateManyAdminInputEnvelope
    connect?: BroadcastWhereUniqueInput | BroadcastWhereUniqueInput[]
  }

  export type PaymentTransactionCreateNestedManyWithoutUserInput = {
    create?: XOR<PaymentTransactionCreateWithoutUserInput, PaymentTransactionUncheckedCreateWithoutUserInput> | PaymentTransactionCreateWithoutUserInput[] | PaymentTransactionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PaymentTransactionCreateOrConnectWithoutUserInput | PaymentTransactionCreateOrConnectWithoutUserInput[]
    createMany?: PaymentTransactionCreateManyUserInputEnvelope
    connect?: PaymentTransactionWhereUniqueInput | PaymentTransactionWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutReferrerInput = {
    create?: XOR<UserCreateWithoutReferrerInput, UserUncheckedCreateWithoutReferrerInput> | UserCreateWithoutReferrerInput[] | UserUncheckedCreateWithoutReferrerInput[]
    connectOrCreate?: UserCreateOrConnectWithoutReferrerInput | UserCreateOrConnectWithoutReferrerInput[]
    createMany?: UserCreateManyReferrerInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type UserVehicleUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<UserVehicleCreateWithoutUserInput, UserVehicleUncheckedCreateWithoutUserInput> | UserVehicleCreateWithoutUserInput[] | UserVehicleUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserVehicleCreateOrConnectWithoutUserInput | UserVehicleCreateOrConnectWithoutUserInput[]
    createMany?: UserVehicleCreateManyUserInputEnvelope
    connect?: UserVehicleWhereUniqueInput | UserVehicleWhereUniqueInput[]
  }

  export type OrderUncheckedCreateNestedManyWithoutCustomerInput = {
    create?: XOR<OrderCreateWithoutCustomerInput, OrderUncheckedCreateWithoutCustomerInput> | OrderCreateWithoutCustomerInput[] | OrderUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutCustomerInput | OrderCreateOrConnectWithoutCustomerInput[]
    createMany?: OrderCreateManyCustomerInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type OrderUncheckedCreateNestedManyWithoutExecutorInput = {
    create?: XOR<OrderCreateWithoutExecutorInput, OrderUncheckedCreateWithoutExecutorInput> | OrderCreateWithoutExecutorInput[] | OrderUncheckedCreateWithoutExecutorInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutExecutorInput | OrderCreateOrConnectWithoutExecutorInput[]
    createMany?: OrderCreateManyExecutorInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type OrderResponseUncheckedCreateNestedManyWithoutExecutorInput = {
    create?: XOR<OrderResponseCreateWithoutExecutorInput, OrderResponseUncheckedCreateWithoutExecutorInput> | OrderResponseCreateWithoutExecutorInput[] | OrderResponseUncheckedCreateWithoutExecutorInput[]
    connectOrCreate?: OrderResponseCreateOrConnectWithoutExecutorInput | OrderResponseCreateOrConnectWithoutExecutorInput[]
    createMany?: OrderResponseCreateManyExecutorInputEnvelope
    connect?: OrderResponseWhereUniqueInput | OrderResponseWhereUniqueInput[]
  }

  export type PaymentUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<PaymentCreateWithoutUserInput, PaymentUncheckedCreateWithoutUserInput> | PaymentCreateWithoutUserInput[] | PaymentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutUserInput | PaymentCreateOrConnectWithoutUserInput[]
    createMany?: PaymentCreateManyUserInputEnvelope
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
  }

  export type SessionUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput> | SessionCreateWithoutUserInput[] | SessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SessionCreateOrConnectWithoutUserInput | SessionCreateOrConnectWithoutUserInput[]
    createMany?: SessionCreateManyUserInputEnvelope
    connect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
  }

  export type NotificationUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<NotificationCreateWithoutUserInput, NotificationUncheckedCreateWithoutUserInput> | NotificationCreateWithoutUserInput[] | NotificationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutUserInput | NotificationCreateOrConnectWithoutUserInput[]
    createMany?: NotificationCreateManyUserInputEnvelope
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
  }

  export type UserRegionUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<UserRegionCreateWithoutUserInput, UserRegionUncheckedCreateWithoutUserInput> | UserRegionCreateWithoutUserInput[] | UserRegionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserRegionCreateOrConnectWithoutUserInput | UserRegionCreateOrConnectWithoutUserInput[]
    createMany?: UserRegionCreateManyUserInputEnvelope
    connect?: UserRegionWhereUniqueInput | UserRegionWhereUniqueInput[]
  }

  export type AdminActionUncheckedCreateNestedManyWithoutAdminInput = {
    create?: XOR<AdminActionCreateWithoutAdminInput, AdminActionUncheckedCreateWithoutAdminInput> | AdminActionCreateWithoutAdminInput[] | AdminActionUncheckedCreateWithoutAdminInput[]
    connectOrCreate?: AdminActionCreateOrConnectWithoutAdminInput | AdminActionCreateOrConnectWithoutAdminInput[]
    createMany?: AdminActionCreateManyAdminInputEnvelope
    connect?: AdminActionWhereUniqueInput | AdminActionWhereUniqueInput[]
  }

  export type BroadcastUncheckedCreateNestedManyWithoutAdminInput = {
    create?: XOR<BroadcastCreateWithoutAdminInput, BroadcastUncheckedCreateWithoutAdminInput> | BroadcastCreateWithoutAdminInput[] | BroadcastUncheckedCreateWithoutAdminInput[]
    connectOrCreate?: BroadcastCreateOrConnectWithoutAdminInput | BroadcastCreateOrConnectWithoutAdminInput[]
    createMany?: BroadcastCreateManyAdminInputEnvelope
    connect?: BroadcastWhereUniqueInput | BroadcastWhereUniqueInput[]
  }

  export type PaymentTransactionUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<PaymentTransactionCreateWithoutUserInput, PaymentTransactionUncheckedCreateWithoutUserInput> | PaymentTransactionCreateWithoutUserInput[] | PaymentTransactionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PaymentTransactionCreateOrConnectWithoutUserInput | PaymentTransactionCreateOrConnectWithoutUserInput[]
    createMany?: PaymentTransactionCreateManyUserInputEnvelope
    connect?: PaymentTransactionWhereUniqueInput | PaymentTransactionWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type BigIntFieldUpdateOperationsInput = {
    set?: bigint | number
    increment?: bigint | number
    decrement?: bigint | number
    multiply?: bigint | number
    divide?: bigint | number
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type EnumRoleTypeFieldUpdateOperationsInput = {
    set?: $Enums.RoleType
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type UserUpdateManyWithoutReferrerNestedInput = {
    create?: XOR<UserCreateWithoutReferrerInput, UserUncheckedCreateWithoutReferrerInput> | UserCreateWithoutReferrerInput[] | UserUncheckedCreateWithoutReferrerInput[]
    connectOrCreate?: UserCreateOrConnectWithoutReferrerInput | UserCreateOrConnectWithoutReferrerInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutReferrerInput | UserUpsertWithWhereUniqueWithoutReferrerInput[]
    createMany?: UserCreateManyReferrerInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutReferrerInput | UserUpdateWithWhereUniqueWithoutReferrerInput[]
    updateMany?: UserUpdateManyWithWhereWithoutReferrerInput | UserUpdateManyWithWhereWithoutReferrerInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type UserUpdateOneWithoutReferredUsersNestedInput = {
    create?: XOR<UserCreateWithoutReferredUsersInput, UserUncheckedCreateWithoutReferredUsersInput>
    connectOrCreate?: UserCreateOrConnectWithoutReferredUsersInput
    upsert?: UserUpsertWithoutReferredUsersInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutReferredUsersInput, UserUpdateWithoutReferredUsersInput>, UserUncheckedUpdateWithoutReferredUsersInput>
  }

  export type UserVehicleUpdateManyWithoutUserNestedInput = {
    create?: XOR<UserVehicleCreateWithoutUserInput, UserVehicleUncheckedCreateWithoutUserInput> | UserVehicleCreateWithoutUserInput[] | UserVehicleUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserVehicleCreateOrConnectWithoutUserInput | UserVehicleCreateOrConnectWithoutUserInput[]
    upsert?: UserVehicleUpsertWithWhereUniqueWithoutUserInput | UserVehicleUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: UserVehicleCreateManyUserInputEnvelope
    set?: UserVehicleWhereUniqueInput | UserVehicleWhereUniqueInput[]
    disconnect?: UserVehicleWhereUniqueInput | UserVehicleWhereUniqueInput[]
    delete?: UserVehicleWhereUniqueInput | UserVehicleWhereUniqueInput[]
    connect?: UserVehicleWhereUniqueInput | UserVehicleWhereUniqueInput[]
    update?: UserVehicleUpdateWithWhereUniqueWithoutUserInput | UserVehicleUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: UserVehicleUpdateManyWithWhereWithoutUserInput | UserVehicleUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: UserVehicleScalarWhereInput | UserVehicleScalarWhereInput[]
  }

  export type OrderUpdateManyWithoutCustomerNestedInput = {
    create?: XOR<OrderCreateWithoutCustomerInput, OrderUncheckedCreateWithoutCustomerInput> | OrderCreateWithoutCustomerInput[] | OrderUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutCustomerInput | OrderCreateOrConnectWithoutCustomerInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutCustomerInput | OrderUpsertWithWhereUniqueWithoutCustomerInput[]
    createMany?: OrderCreateManyCustomerInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutCustomerInput | OrderUpdateWithWhereUniqueWithoutCustomerInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutCustomerInput | OrderUpdateManyWithWhereWithoutCustomerInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type OrderUpdateManyWithoutExecutorNestedInput = {
    create?: XOR<OrderCreateWithoutExecutorInput, OrderUncheckedCreateWithoutExecutorInput> | OrderCreateWithoutExecutorInput[] | OrderUncheckedCreateWithoutExecutorInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutExecutorInput | OrderCreateOrConnectWithoutExecutorInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutExecutorInput | OrderUpsertWithWhereUniqueWithoutExecutorInput[]
    createMany?: OrderCreateManyExecutorInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutExecutorInput | OrderUpdateWithWhereUniqueWithoutExecutorInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutExecutorInput | OrderUpdateManyWithWhereWithoutExecutorInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type OrderResponseUpdateManyWithoutExecutorNestedInput = {
    create?: XOR<OrderResponseCreateWithoutExecutorInput, OrderResponseUncheckedCreateWithoutExecutorInput> | OrderResponseCreateWithoutExecutorInput[] | OrderResponseUncheckedCreateWithoutExecutorInput[]
    connectOrCreate?: OrderResponseCreateOrConnectWithoutExecutorInput | OrderResponseCreateOrConnectWithoutExecutorInput[]
    upsert?: OrderResponseUpsertWithWhereUniqueWithoutExecutorInput | OrderResponseUpsertWithWhereUniqueWithoutExecutorInput[]
    createMany?: OrderResponseCreateManyExecutorInputEnvelope
    set?: OrderResponseWhereUniqueInput | OrderResponseWhereUniqueInput[]
    disconnect?: OrderResponseWhereUniqueInput | OrderResponseWhereUniqueInput[]
    delete?: OrderResponseWhereUniqueInput | OrderResponseWhereUniqueInput[]
    connect?: OrderResponseWhereUniqueInput | OrderResponseWhereUniqueInput[]
    update?: OrderResponseUpdateWithWhereUniqueWithoutExecutorInput | OrderResponseUpdateWithWhereUniqueWithoutExecutorInput[]
    updateMany?: OrderResponseUpdateManyWithWhereWithoutExecutorInput | OrderResponseUpdateManyWithWhereWithoutExecutorInput[]
    deleteMany?: OrderResponseScalarWhereInput | OrderResponseScalarWhereInput[]
  }

  export type PaymentUpdateManyWithoutUserNestedInput = {
    create?: XOR<PaymentCreateWithoutUserInput, PaymentUncheckedCreateWithoutUserInput> | PaymentCreateWithoutUserInput[] | PaymentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutUserInput | PaymentCreateOrConnectWithoutUserInput[]
    upsert?: PaymentUpsertWithWhereUniqueWithoutUserInput | PaymentUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: PaymentCreateManyUserInputEnvelope
    set?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    disconnect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    delete?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    update?: PaymentUpdateWithWhereUniqueWithoutUserInput | PaymentUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: PaymentUpdateManyWithWhereWithoutUserInput | PaymentUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: PaymentScalarWhereInput | PaymentScalarWhereInput[]
  }

  export type SessionUpdateManyWithoutUserNestedInput = {
    create?: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput> | SessionCreateWithoutUserInput[] | SessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SessionCreateOrConnectWithoutUserInput | SessionCreateOrConnectWithoutUserInput[]
    upsert?: SessionUpsertWithWhereUniqueWithoutUserInput | SessionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: SessionCreateManyUserInputEnvelope
    set?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    disconnect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    delete?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    connect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    update?: SessionUpdateWithWhereUniqueWithoutUserInput | SessionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: SessionUpdateManyWithWhereWithoutUserInput | SessionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: SessionScalarWhereInput | SessionScalarWhereInput[]
  }

  export type NotificationUpdateManyWithoutUserNestedInput = {
    create?: XOR<NotificationCreateWithoutUserInput, NotificationUncheckedCreateWithoutUserInput> | NotificationCreateWithoutUserInput[] | NotificationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutUserInput | NotificationCreateOrConnectWithoutUserInput[]
    upsert?: NotificationUpsertWithWhereUniqueWithoutUserInput | NotificationUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: NotificationCreateManyUserInputEnvelope
    set?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    disconnect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    delete?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    update?: NotificationUpdateWithWhereUniqueWithoutUserInput | NotificationUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: NotificationUpdateManyWithWhereWithoutUserInput | NotificationUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
  }

  export type UserRegionUpdateManyWithoutUserNestedInput = {
    create?: XOR<UserRegionCreateWithoutUserInput, UserRegionUncheckedCreateWithoutUserInput> | UserRegionCreateWithoutUserInput[] | UserRegionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserRegionCreateOrConnectWithoutUserInput | UserRegionCreateOrConnectWithoutUserInput[]
    upsert?: UserRegionUpsertWithWhereUniqueWithoutUserInput | UserRegionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: UserRegionCreateManyUserInputEnvelope
    set?: UserRegionWhereUniqueInput | UserRegionWhereUniqueInput[]
    disconnect?: UserRegionWhereUniqueInput | UserRegionWhereUniqueInput[]
    delete?: UserRegionWhereUniqueInput | UserRegionWhereUniqueInput[]
    connect?: UserRegionWhereUniqueInput | UserRegionWhereUniqueInput[]
    update?: UserRegionUpdateWithWhereUniqueWithoutUserInput | UserRegionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: UserRegionUpdateManyWithWhereWithoutUserInput | UserRegionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: UserRegionScalarWhereInput | UserRegionScalarWhereInput[]
  }

  export type AdminActionUpdateManyWithoutAdminNestedInput = {
    create?: XOR<AdminActionCreateWithoutAdminInput, AdminActionUncheckedCreateWithoutAdminInput> | AdminActionCreateWithoutAdminInput[] | AdminActionUncheckedCreateWithoutAdminInput[]
    connectOrCreate?: AdminActionCreateOrConnectWithoutAdminInput | AdminActionCreateOrConnectWithoutAdminInput[]
    upsert?: AdminActionUpsertWithWhereUniqueWithoutAdminInput | AdminActionUpsertWithWhereUniqueWithoutAdminInput[]
    createMany?: AdminActionCreateManyAdminInputEnvelope
    set?: AdminActionWhereUniqueInput | AdminActionWhereUniqueInput[]
    disconnect?: AdminActionWhereUniqueInput | AdminActionWhereUniqueInput[]
    delete?: AdminActionWhereUniqueInput | AdminActionWhereUniqueInput[]
    connect?: AdminActionWhereUniqueInput | AdminActionWhereUniqueInput[]
    update?: AdminActionUpdateWithWhereUniqueWithoutAdminInput | AdminActionUpdateWithWhereUniqueWithoutAdminInput[]
    updateMany?: AdminActionUpdateManyWithWhereWithoutAdminInput | AdminActionUpdateManyWithWhereWithoutAdminInput[]
    deleteMany?: AdminActionScalarWhereInput | AdminActionScalarWhereInput[]
  }

  export type BroadcastUpdateManyWithoutAdminNestedInput = {
    create?: XOR<BroadcastCreateWithoutAdminInput, BroadcastUncheckedCreateWithoutAdminInput> | BroadcastCreateWithoutAdminInput[] | BroadcastUncheckedCreateWithoutAdminInput[]
    connectOrCreate?: BroadcastCreateOrConnectWithoutAdminInput | BroadcastCreateOrConnectWithoutAdminInput[]
    upsert?: BroadcastUpsertWithWhereUniqueWithoutAdminInput | BroadcastUpsertWithWhereUniqueWithoutAdminInput[]
    createMany?: BroadcastCreateManyAdminInputEnvelope
    set?: BroadcastWhereUniqueInput | BroadcastWhereUniqueInput[]
    disconnect?: BroadcastWhereUniqueInput | BroadcastWhereUniqueInput[]
    delete?: BroadcastWhereUniqueInput | BroadcastWhereUniqueInput[]
    connect?: BroadcastWhereUniqueInput | BroadcastWhereUniqueInput[]
    update?: BroadcastUpdateWithWhereUniqueWithoutAdminInput | BroadcastUpdateWithWhereUniqueWithoutAdminInput[]
    updateMany?: BroadcastUpdateManyWithWhereWithoutAdminInput | BroadcastUpdateManyWithWhereWithoutAdminInput[]
    deleteMany?: BroadcastScalarWhereInput | BroadcastScalarWhereInput[]
  }

  export type PaymentTransactionUpdateManyWithoutUserNestedInput = {
    create?: XOR<PaymentTransactionCreateWithoutUserInput, PaymentTransactionUncheckedCreateWithoutUserInput> | PaymentTransactionCreateWithoutUserInput[] | PaymentTransactionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PaymentTransactionCreateOrConnectWithoutUserInput | PaymentTransactionCreateOrConnectWithoutUserInput[]
    upsert?: PaymentTransactionUpsertWithWhereUniqueWithoutUserInput | PaymentTransactionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: PaymentTransactionCreateManyUserInputEnvelope
    set?: PaymentTransactionWhereUniqueInput | PaymentTransactionWhereUniqueInput[]
    disconnect?: PaymentTransactionWhereUniqueInput | PaymentTransactionWhereUniqueInput[]
    delete?: PaymentTransactionWhereUniqueInput | PaymentTransactionWhereUniqueInput[]
    connect?: PaymentTransactionWhereUniqueInput | PaymentTransactionWhereUniqueInput[]
    update?: PaymentTransactionUpdateWithWhereUniqueWithoutUserInput | PaymentTransactionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: PaymentTransactionUpdateManyWithWhereWithoutUserInput | PaymentTransactionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: PaymentTransactionScalarWhereInput | PaymentTransactionScalarWhereInput[]
  }

  export type UserUncheckedUpdateManyWithoutReferrerNestedInput = {
    create?: XOR<UserCreateWithoutReferrerInput, UserUncheckedCreateWithoutReferrerInput> | UserCreateWithoutReferrerInput[] | UserUncheckedCreateWithoutReferrerInput[]
    connectOrCreate?: UserCreateOrConnectWithoutReferrerInput | UserCreateOrConnectWithoutReferrerInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutReferrerInput | UserUpsertWithWhereUniqueWithoutReferrerInput[]
    createMany?: UserCreateManyReferrerInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutReferrerInput | UserUpdateWithWhereUniqueWithoutReferrerInput[]
    updateMany?: UserUpdateManyWithWhereWithoutReferrerInput | UserUpdateManyWithWhereWithoutReferrerInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type UserVehicleUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<UserVehicleCreateWithoutUserInput, UserVehicleUncheckedCreateWithoutUserInput> | UserVehicleCreateWithoutUserInput[] | UserVehicleUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserVehicleCreateOrConnectWithoutUserInput | UserVehicleCreateOrConnectWithoutUserInput[]
    upsert?: UserVehicleUpsertWithWhereUniqueWithoutUserInput | UserVehicleUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: UserVehicleCreateManyUserInputEnvelope
    set?: UserVehicleWhereUniqueInput | UserVehicleWhereUniqueInput[]
    disconnect?: UserVehicleWhereUniqueInput | UserVehicleWhereUniqueInput[]
    delete?: UserVehicleWhereUniqueInput | UserVehicleWhereUniqueInput[]
    connect?: UserVehicleWhereUniqueInput | UserVehicleWhereUniqueInput[]
    update?: UserVehicleUpdateWithWhereUniqueWithoutUserInput | UserVehicleUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: UserVehicleUpdateManyWithWhereWithoutUserInput | UserVehicleUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: UserVehicleScalarWhereInput | UserVehicleScalarWhereInput[]
  }

  export type OrderUncheckedUpdateManyWithoutCustomerNestedInput = {
    create?: XOR<OrderCreateWithoutCustomerInput, OrderUncheckedCreateWithoutCustomerInput> | OrderCreateWithoutCustomerInput[] | OrderUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutCustomerInput | OrderCreateOrConnectWithoutCustomerInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutCustomerInput | OrderUpsertWithWhereUniqueWithoutCustomerInput[]
    createMany?: OrderCreateManyCustomerInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutCustomerInput | OrderUpdateWithWhereUniqueWithoutCustomerInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutCustomerInput | OrderUpdateManyWithWhereWithoutCustomerInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type OrderUncheckedUpdateManyWithoutExecutorNestedInput = {
    create?: XOR<OrderCreateWithoutExecutorInput, OrderUncheckedCreateWithoutExecutorInput> | OrderCreateWithoutExecutorInput[] | OrderUncheckedCreateWithoutExecutorInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutExecutorInput | OrderCreateOrConnectWithoutExecutorInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutExecutorInput | OrderUpsertWithWhereUniqueWithoutExecutorInput[]
    createMany?: OrderCreateManyExecutorInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutExecutorInput | OrderUpdateWithWhereUniqueWithoutExecutorInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutExecutorInput | OrderUpdateManyWithWhereWithoutExecutorInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type OrderResponseUncheckedUpdateManyWithoutExecutorNestedInput = {
    create?: XOR<OrderResponseCreateWithoutExecutorInput, OrderResponseUncheckedCreateWithoutExecutorInput> | OrderResponseCreateWithoutExecutorInput[] | OrderResponseUncheckedCreateWithoutExecutorInput[]
    connectOrCreate?: OrderResponseCreateOrConnectWithoutExecutorInput | OrderResponseCreateOrConnectWithoutExecutorInput[]
    upsert?: OrderResponseUpsertWithWhereUniqueWithoutExecutorInput | OrderResponseUpsertWithWhereUniqueWithoutExecutorInput[]
    createMany?: OrderResponseCreateManyExecutorInputEnvelope
    set?: OrderResponseWhereUniqueInput | OrderResponseWhereUniqueInput[]
    disconnect?: OrderResponseWhereUniqueInput | OrderResponseWhereUniqueInput[]
    delete?: OrderResponseWhereUniqueInput | OrderResponseWhereUniqueInput[]
    connect?: OrderResponseWhereUniqueInput | OrderResponseWhereUniqueInput[]
    update?: OrderResponseUpdateWithWhereUniqueWithoutExecutorInput | OrderResponseUpdateWithWhereUniqueWithoutExecutorInput[]
    updateMany?: OrderResponseUpdateManyWithWhereWithoutExecutorInput | OrderResponseUpdateManyWithWhereWithoutExecutorInput[]
    deleteMany?: OrderResponseScalarWhereInput | OrderResponseScalarWhereInput[]
  }

  export type PaymentUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<PaymentCreateWithoutUserInput, PaymentUncheckedCreateWithoutUserInput> | PaymentCreateWithoutUserInput[] | PaymentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutUserInput | PaymentCreateOrConnectWithoutUserInput[]
    upsert?: PaymentUpsertWithWhereUniqueWithoutUserInput | PaymentUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: PaymentCreateManyUserInputEnvelope
    set?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    disconnect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    delete?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    update?: PaymentUpdateWithWhereUniqueWithoutUserInput | PaymentUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: PaymentUpdateManyWithWhereWithoutUserInput | PaymentUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: PaymentScalarWhereInput | PaymentScalarWhereInput[]
  }

  export type SessionUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput> | SessionCreateWithoutUserInput[] | SessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SessionCreateOrConnectWithoutUserInput | SessionCreateOrConnectWithoutUserInput[]
    upsert?: SessionUpsertWithWhereUniqueWithoutUserInput | SessionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: SessionCreateManyUserInputEnvelope
    set?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    disconnect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    delete?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    connect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    update?: SessionUpdateWithWhereUniqueWithoutUserInput | SessionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: SessionUpdateManyWithWhereWithoutUserInput | SessionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: SessionScalarWhereInput | SessionScalarWhereInput[]
  }

  export type NotificationUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<NotificationCreateWithoutUserInput, NotificationUncheckedCreateWithoutUserInput> | NotificationCreateWithoutUserInput[] | NotificationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutUserInput | NotificationCreateOrConnectWithoutUserInput[]
    upsert?: NotificationUpsertWithWhereUniqueWithoutUserInput | NotificationUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: NotificationCreateManyUserInputEnvelope
    set?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    disconnect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    delete?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    update?: NotificationUpdateWithWhereUniqueWithoutUserInput | NotificationUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: NotificationUpdateManyWithWhereWithoutUserInput | NotificationUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
  }

  export type UserRegionUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<UserRegionCreateWithoutUserInput, UserRegionUncheckedCreateWithoutUserInput> | UserRegionCreateWithoutUserInput[] | UserRegionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserRegionCreateOrConnectWithoutUserInput | UserRegionCreateOrConnectWithoutUserInput[]
    upsert?: UserRegionUpsertWithWhereUniqueWithoutUserInput | UserRegionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: UserRegionCreateManyUserInputEnvelope
    set?: UserRegionWhereUniqueInput | UserRegionWhereUniqueInput[]
    disconnect?: UserRegionWhereUniqueInput | UserRegionWhereUniqueInput[]
    delete?: UserRegionWhereUniqueInput | UserRegionWhereUniqueInput[]
    connect?: UserRegionWhereUniqueInput | UserRegionWhereUniqueInput[]
    update?: UserRegionUpdateWithWhereUniqueWithoutUserInput | UserRegionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: UserRegionUpdateManyWithWhereWithoutUserInput | UserRegionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: UserRegionScalarWhereInput | UserRegionScalarWhereInput[]
  }

  export type AdminActionUncheckedUpdateManyWithoutAdminNestedInput = {
    create?: XOR<AdminActionCreateWithoutAdminInput, AdminActionUncheckedCreateWithoutAdminInput> | AdminActionCreateWithoutAdminInput[] | AdminActionUncheckedCreateWithoutAdminInput[]
    connectOrCreate?: AdminActionCreateOrConnectWithoutAdminInput | AdminActionCreateOrConnectWithoutAdminInput[]
    upsert?: AdminActionUpsertWithWhereUniqueWithoutAdminInput | AdminActionUpsertWithWhereUniqueWithoutAdminInput[]
    createMany?: AdminActionCreateManyAdminInputEnvelope
    set?: AdminActionWhereUniqueInput | AdminActionWhereUniqueInput[]
    disconnect?: AdminActionWhereUniqueInput | AdminActionWhereUniqueInput[]
    delete?: AdminActionWhereUniqueInput | AdminActionWhereUniqueInput[]
    connect?: AdminActionWhereUniqueInput | AdminActionWhereUniqueInput[]
    update?: AdminActionUpdateWithWhereUniqueWithoutAdminInput | AdminActionUpdateWithWhereUniqueWithoutAdminInput[]
    updateMany?: AdminActionUpdateManyWithWhereWithoutAdminInput | AdminActionUpdateManyWithWhereWithoutAdminInput[]
    deleteMany?: AdminActionScalarWhereInput | AdminActionScalarWhereInput[]
  }

  export type BroadcastUncheckedUpdateManyWithoutAdminNestedInput = {
    create?: XOR<BroadcastCreateWithoutAdminInput, BroadcastUncheckedCreateWithoutAdminInput> | BroadcastCreateWithoutAdminInput[] | BroadcastUncheckedCreateWithoutAdminInput[]
    connectOrCreate?: BroadcastCreateOrConnectWithoutAdminInput | BroadcastCreateOrConnectWithoutAdminInput[]
    upsert?: BroadcastUpsertWithWhereUniqueWithoutAdminInput | BroadcastUpsertWithWhereUniqueWithoutAdminInput[]
    createMany?: BroadcastCreateManyAdminInputEnvelope
    set?: BroadcastWhereUniqueInput | BroadcastWhereUniqueInput[]
    disconnect?: BroadcastWhereUniqueInput | BroadcastWhereUniqueInput[]
    delete?: BroadcastWhereUniqueInput | BroadcastWhereUniqueInput[]
    connect?: BroadcastWhereUniqueInput | BroadcastWhereUniqueInput[]
    update?: BroadcastUpdateWithWhereUniqueWithoutAdminInput | BroadcastUpdateWithWhereUniqueWithoutAdminInput[]
    updateMany?: BroadcastUpdateManyWithWhereWithoutAdminInput | BroadcastUpdateManyWithWhereWithoutAdminInput[]
    deleteMany?: BroadcastScalarWhereInput | BroadcastScalarWhereInput[]
  }

  export type PaymentTransactionUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<PaymentTransactionCreateWithoutUserInput, PaymentTransactionUncheckedCreateWithoutUserInput> | PaymentTransactionCreateWithoutUserInput[] | PaymentTransactionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PaymentTransactionCreateOrConnectWithoutUserInput | PaymentTransactionCreateOrConnectWithoutUserInput[]
    upsert?: PaymentTransactionUpsertWithWhereUniqueWithoutUserInput | PaymentTransactionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: PaymentTransactionCreateManyUserInputEnvelope
    set?: PaymentTransactionWhereUniqueInput | PaymentTransactionWhereUniqueInput[]
    disconnect?: PaymentTransactionWhereUniqueInput | PaymentTransactionWhereUniqueInput[]
    delete?: PaymentTransactionWhereUniqueInput | PaymentTransactionWhereUniqueInput[]
    connect?: PaymentTransactionWhereUniqueInput | PaymentTransactionWhereUniqueInput[]
    update?: PaymentTransactionUpdateWithWhereUniqueWithoutUserInput | PaymentTransactionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: PaymentTransactionUpdateManyWithWhereWithoutUserInput | PaymentTransactionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: PaymentTransactionScalarWhereInput | PaymentTransactionScalarWhereInput[]
  }

  export type OrderCreateNestedManyWithoutRegionInput = {
    create?: XOR<OrderCreateWithoutRegionInput, OrderUncheckedCreateWithoutRegionInput> | OrderCreateWithoutRegionInput[] | OrderUncheckedCreateWithoutRegionInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutRegionInput | OrderCreateOrConnectWithoutRegionInput[]
    createMany?: OrderCreateManyRegionInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type UserRegionCreateNestedManyWithoutRegionInput = {
    create?: XOR<UserRegionCreateWithoutRegionInput, UserRegionUncheckedCreateWithoutRegionInput> | UserRegionCreateWithoutRegionInput[] | UserRegionUncheckedCreateWithoutRegionInput[]
    connectOrCreate?: UserRegionCreateOrConnectWithoutRegionInput | UserRegionCreateOrConnectWithoutRegionInput[]
    createMany?: UserRegionCreateManyRegionInputEnvelope
    connect?: UserRegionWhereUniqueInput | UserRegionWhereUniqueInput[]
  }

  export type BroadcastCreateNestedManyWithoutTargetRegionInput = {
    create?: XOR<BroadcastCreateWithoutTargetRegionInput, BroadcastUncheckedCreateWithoutTargetRegionInput> | BroadcastCreateWithoutTargetRegionInput[] | BroadcastUncheckedCreateWithoutTargetRegionInput[]
    connectOrCreate?: BroadcastCreateOrConnectWithoutTargetRegionInput | BroadcastCreateOrConnectWithoutTargetRegionInput[]
    createMany?: BroadcastCreateManyTargetRegionInputEnvelope
    connect?: BroadcastWhereUniqueInput | BroadcastWhereUniqueInput[]
  }

  export type OrderUncheckedCreateNestedManyWithoutRegionInput = {
    create?: XOR<OrderCreateWithoutRegionInput, OrderUncheckedCreateWithoutRegionInput> | OrderCreateWithoutRegionInput[] | OrderUncheckedCreateWithoutRegionInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutRegionInput | OrderCreateOrConnectWithoutRegionInput[]
    createMany?: OrderCreateManyRegionInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type UserRegionUncheckedCreateNestedManyWithoutRegionInput = {
    create?: XOR<UserRegionCreateWithoutRegionInput, UserRegionUncheckedCreateWithoutRegionInput> | UserRegionCreateWithoutRegionInput[] | UserRegionUncheckedCreateWithoutRegionInput[]
    connectOrCreate?: UserRegionCreateOrConnectWithoutRegionInput | UserRegionCreateOrConnectWithoutRegionInput[]
    createMany?: UserRegionCreateManyRegionInputEnvelope
    connect?: UserRegionWhereUniqueInput | UserRegionWhereUniqueInput[]
  }

  export type BroadcastUncheckedCreateNestedManyWithoutTargetRegionInput = {
    create?: XOR<BroadcastCreateWithoutTargetRegionInput, BroadcastUncheckedCreateWithoutTargetRegionInput> | BroadcastCreateWithoutTargetRegionInput[] | BroadcastUncheckedCreateWithoutTargetRegionInput[]
    connectOrCreate?: BroadcastCreateOrConnectWithoutTargetRegionInput | BroadcastCreateOrConnectWithoutTargetRegionInput[]
    createMany?: BroadcastCreateManyTargetRegionInputEnvelope
    connect?: BroadcastWhereUniqueInput | BroadcastWhereUniqueInput[]
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type OrderUpdateManyWithoutRegionNestedInput = {
    create?: XOR<OrderCreateWithoutRegionInput, OrderUncheckedCreateWithoutRegionInput> | OrderCreateWithoutRegionInput[] | OrderUncheckedCreateWithoutRegionInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutRegionInput | OrderCreateOrConnectWithoutRegionInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutRegionInput | OrderUpsertWithWhereUniqueWithoutRegionInput[]
    createMany?: OrderCreateManyRegionInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutRegionInput | OrderUpdateWithWhereUniqueWithoutRegionInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutRegionInput | OrderUpdateManyWithWhereWithoutRegionInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type UserRegionUpdateManyWithoutRegionNestedInput = {
    create?: XOR<UserRegionCreateWithoutRegionInput, UserRegionUncheckedCreateWithoutRegionInput> | UserRegionCreateWithoutRegionInput[] | UserRegionUncheckedCreateWithoutRegionInput[]
    connectOrCreate?: UserRegionCreateOrConnectWithoutRegionInput | UserRegionCreateOrConnectWithoutRegionInput[]
    upsert?: UserRegionUpsertWithWhereUniqueWithoutRegionInput | UserRegionUpsertWithWhereUniqueWithoutRegionInput[]
    createMany?: UserRegionCreateManyRegionInputEnvelope
    set?: UserRegionWhereUniqueInput | UserRegionWhereUniqueInput[]
    disconnect?: UserRegionWhereUniqueInput | UserRegionWhereUniqueInput[]
    delete?: UserRegionWhereUniqueInput | UserRegionWhereUniqueInput[]
    connect?: UserRegionWhereUniqueInput | UserRegionWhereUniqueInput[]
    update?: UserRegionUpdateWithWhereUniqueWithoutRegionInput | UserRegionUpdateWithWhereUniqueWithoutRegionInput[]
    updateMany?: UserRegionUpdateManyWithWhereWithoutRegionInput | UserRegionUpdateManyWithWhereWithoutRegionInput[]
    deleteMany?: UserRegionScalarWhereInput | UserRegionScalarWhereInput[]
  }

  export type BroadcastUpdateManyWithoutTargetRegionNestedInput = {
    create?: XOR<BroadcastCreateWithoutTargetRegionInput, BroadcastUncheckedCreateWithoutTargetRegionInput> | BroadcastCreateWithoutTargetRegionInput[] | BroadcastUncheckedCreateWithoutTargetRegionInput[]
    connectOrCreate?: BroadcastCreateOrConnectWithoutTargetRegionInput | BroadcastCreateOrConnectWithoutTargetRegionInput[]
    upsert?: BroadcastUpsertWithWhereUniqueWithoutTargetRegionInput | BroadcastUpsertWithWhereUniqueWithoutTargetRegionInput[]
    createMany?: BroadcastCreateManyTargetRegionInputEnvelope
    set?: BroadcastWhereUniqueInput | BroadcastWhereUniqueInput[]
    disconnect?: BroadcastWhereUniqueInput | BroadcastWhereUniqueInput[]
    delete?: BroadcastWhereUniqueInput | BroadcastWhereUniqueInput[]
    connect?: BroadcastWhereUniqueInput | BroadcastWhereUniqueInput[]
    update?: BroadcastUpdateWithWhereUniqueWithoutTargetRegionInput | BroadcastUpdateWithWhereUniqueWithoutTargetRegionInput[]
    updateMany?: BroadcastUpdateManyWithWhereWithoutTargetRegionInput | BroadcastUpdateManyWithWhereWithoutTargetRegionInput[]
    deleteMany?: BroadcastScalarWhereInput | BroadcastScalarWhereInput[]
  }

  export type OrderUncheckedUpdateManyWithoutRegionNestedInput = {
    create?: XOR<OrderCreateWithoutRegionInput, OrderUncheckedCreateWithoutRegionInput> | OrderCreateWithoutRegionInput[] | OrderUncheckedCreateWithoutRegionInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutRegionInput | OrderCreateOrConnectWithoutRegionInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutRegionInput | OrderUpsertWithWhereUniqueWithoutRegionInput[]
    createMany?: OrderCreateManyRegionInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutRegionInput | OrderUpdateWithWhereUniqueWithoutRegionInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutRegionInput | OrderUpdateManyWithWhereWithoutRegionInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type UserRegionUncheckedUpdateManyWithoutRegionNestedInput = {
    create?: XOR<UserRegionCreateWithoutRegionInput, UserRegionUncheckedCreateWithoutRegionInput> | UserRegionCreateWithoutRegionInput[] | UserRegionUncheckedCreateWithoutRegionInput[]
    connectOrCreate?: UserRegionCreateOrConnectWithoutRegionInput | UserRegionCreateOrConnectWithoutRegionInput[]
    upsert?: UserRegionUpsertWithWhereUniqueWithoutRegionInput | UserRegionUpsertWithWhereUniqueWithoutRegionInput[]
    createMany?: UserRegionCreateManyRegionInputEnvelope
    set?: UserRegionWhereUniqueInput | UserRegionWhereUniqueInput[]
    disconnect?: UserRegionWhereUniqueInput | UserRegionWhereUniqueInput[]
    delete?: UserRegionWhereUniqueInput | UserRegionWhereUniqueInput[]
    connect?: UserRegionWhereUniqueInput | UserRegionWhereUniqueInput[]
    update?: UserRegionUpdateWithWhereUniqueWithoutRegionInput | UserRegionUpdateWithWhereUniqueWithoutRegionInput[]
    updateMany?: UserRegionUpdateManyWithWhereWithoutRegionInput | UserRegionUpdateManyWithWhereWithoutRegionInput[]
    deleteMany?: UserRegionScalarWhereInput | UserRegionScalarWhereInput[]
  }

  export type BroadcastUncheckedUpdateManyWithoutTargetRegionNestedInput = {
    create?: XOR<BroadcastCreateWithoutTargetRegionInput, BroadcastUncheckedCreateWithoutTargetRegionInput> | BroadcastCreateWithoutTargetRegionInput[] | BroadcastUncheckedCreateWithoutTargetRegionInput[]
    connectOrCreate?: BroadcastCreateOrConnectWithoutTargetRegionInput | BroadcastCreateOrConnectWithoutTargetRegionInput[]
    upsert?: BroadcastUpsertWithWhereUniqueWithoutTargetRegionInput | BroadcastUpsertWithWhereUniqueWithoutTargetRegionInput[]
    createMany?: BroadcastCreateManyTargetRegionInputEnvelope
    set?: BroadcastWhereUniqueInput | BroadcastWhereUniqueInput[]
    disconnect?: BroadcastWhereUniqueInput | BroadcastWhereUniqueInput[]
    delete?: BroadcastWhereUniqueInput | BroadcastWhereUniqueInput[]
    connect?: BroadcastWhereUniqueInput | BroadcastWhereUniqueInput[]
    update?: BroadcastUpdateWithWhereUniqueWithoutTargetRegionInput | BroadcastUpdateWithWhereUniqueWithoutTargetRegionInput[]
    updateMany?: BroadcastUpdateManyWithWhereWithoutTargetRegionInput | BroadcastUpdateManyWithWhereWithoutTargetRegionInput[]
    deleteMany?: BroadcastScalarWhereInput | BroadcastScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutUserRegionsInput = {
    create?: XOR<UserCreateWithoutUserRegionsInput, UserUncheckedCreateWithoutUserRegionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutUserRegionsInput
    connect?: UserWhereUniqueInput
  }

  export type RegionCreateNestedOneWithoutUserRegionsInput = {
    create?: XOR<RegionCreateWithoutUserRegionsInput, RegionUncheckedCreateWithoutUserRegionsInput>
    connectOrCreate?: RegionCreateOrConnectWithoutUserRegionsInput
    connect?: RegionWhereUniqueInput
  }

  export type EnumTariffTypeFieldUpdateOperationsInput = {
    set?: $Enums.TariffType
  }

  export type UserUpdateOneRequiredWithoutUserRegionsNestedInput = {
    create?: XOR<UserCreateWithoutUserRegionsInput, UserUncheckedCreateWithoutUserRegionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutUserRegionsInput
    upsert?: UserUpsertWithoutUserRegionsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUserRegionsInput, UserUpdateWithoutUserRegionsInput>, UserUncheckedUpdateWithoutUserRegionsInput>
  }

  export type RegionUpdateOneRequiredWithoutUserRegionsNestedInput = {
    create?: XOR<RegionCreateWithoutUserRegionsInput, RegionUncheckedCreateWithoutUserRegionsInput>
    connectOrCreate?: RegionCreateOrConnectWithoutUserRegionsInput
    upsert?: RegionUpsertWithoutUserRegionsInput
    connect?: RegionWhereUniqueInput
    update?: XOR<XOR<RegionUpdateToOneWithWhereWithoutUserRegionsInput, RegionUpdateWithoutUserRegionsInput>, RegionUncheckedUpdateWithoutUserRegionsInput>
  }

  export type VehicleTypeCreateNestedManyWithoutCategoryInput = {
    create?: XOR<VehicleTypeCreateWithoutCategoryInput, VehicleTypeUncheckedCreateWithoutCategoryInput> | VehicleTypeCreateWithoutCategoryInput[] | VehicleTypeUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: VehicleTypeCreateOrConnectWithoutCategoryInput | VehicleTypeCreateOrConnectWithoutCategoryInput[]
    createMany?: VehicleTypeCreateManyCategoryInputEnvelope
    connect?: VehicleTypeWhereUniqueInput | VehicleTypeWhereUniqueInput[]
  }

  export type VehicleTypeUncheckedCreateNestedManyWithoutCategoryInput = {
    create?: XOR<VehicleTypeCreateWithoutCategoryInput, VehicleTypeUncheckedCreateWithoutCategoryInput> | VehicleTypeCreateWithoutCategoryInput[] | VehicleTypeUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: VehicleTypeCreateOrConnectWithoutCategoryInput | VehicleTypeCreateOrConnectWithoutCategoryInput[]
    createMany?: VehicleTypeCreateManyCategoryInputEnvelope
    connect?: VehicleTypeWhereUniqueInput | VehicleTypeWhereUniqueInput[]
  }

  export type VehicleTypeUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<VehicleTypeCreateWithoutCategoryInput, VehicleTypeUncheckedCreateWithoutCategoryInput> | VehicleTypeCreateWithoutCategoryInput[] | VehicleTypeUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: VehicleTypeCreateOrConnectWithoutCategoryInput | VehicleTypeCreateOrConnectWithoutCategoryInput[]
    upsert?: VehicleTypeUpsertWithWhereUniqueWithoutCategoryInput | VehicleTypeUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: VehicleTypeCreateManyCategoryInputEnvelope
    set?: VehicleTypeWhereUniqueInput | VehicleTypeWhereUniqueInput[]
    disconnect?: VehicleTypeWhereUniqueInput | VehicleTypeWhereUniqueInput[]
    delete?: VehicleTypeWhereUniqueInput | VehicleTypeWhereUniqueInput[]
    connect?: VehicleTypeWhereUniqueInput | VehicleTypeWhereUniqueInput[]
    update?: VehicleTypeUpdateWithWhereUniqueWithoutCategoryInput | VehicleTypeUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: VehicleTypeUpdateManyWithWhereWithoutCategoryInput | VehicleTypeUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: VehicleTypeScalarWhereInput | VehicleTypeScalarWhereInput[]
  }

  export type VehicleTypeUncheckedUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<VehicleTypeCreateWithoutCategoryInput, VehicleTypeUncheckedCreateWithoutCategoryInput> | VehicleTypeCreateWithoutCategoryInput[] | VehicleTypeUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: VehicleTypeCreateOrConnectWithoutCategoryInput | VehicleTypeCreateOrConnectWithoutCategoryInput[]
    upsert?: VehicleTypeUpsertWithWhereUniqueWithoutCategoryInput | VehicleTypeUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: VehicleTypeCreateManyCategoryInputEnvelope
    set?: VehicleTypeWhereUniqueInput | VehicleTypeWhereUniqueInput[]
    disconnect?: VehicleTypeWhereUniqueInput | VehicleTypeWhereUniqueInput[]
    delete?: VehicleTypeWhereUniqueInput | VehicleTypeWhereUniqueInput[]
    connect?: VehicleTypeWhereUniqueInput | VehicleTypeWhereUniqueInput[]
    update?: VehicleTypeUpdateWithWhereUniqueWithoutCategoryInput | VehicleTypeUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: VehicleTypeUpdateManyWithWhereWithoutCategoryInput | VehicleTypeUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: VehicleTypeScalarWhereInput | VehicleTypeScalarWhereInput[]
  }

  export type VehicleCategoryCreateNestedOneWithoutVehicleTypesInput = {
    create?: XOR<VehicleCategoryCreateWithoutVehicleTypesInput, VehicleCategoryUncheckedCreateWithoutVehicleTypesInput>
    connectOrCreate?: VehicleCategoryCreateOrConnectWithoutVehicleTypesInput
    connect?: VehicleCategoryWhereUniqueInput
  }

  export type VehicleSubtypeCreateNestedManyWithoutTypeInput = {
    create?: XOR<VehicleSubtypeCreateWithoutTypeInput, VehicleSubtypeUncheckedCreateWithoutTypeInput> | VehicleSubtypeCreateWithoutTypeInput[] | VehicleSubtypeUncheckedCreateWithoutTypeInput[]
    connectOrCreate?: VehicleSubtypeCreateOrConnectWithoutTypeInput | VehicleSubtypeCreateOrConnectWithoutTypeInput[]
    createMany?: VehicleSubtypeCreateManyTypeInputEnvelope
    connect?: VehicleSubtypeWhereUniqueInput | VehicleSubtypeWhereUniqueInput[]
  }

  export type VehicleSubtypeUncheckedCreateNestedManyWithoutTypeInput = {
    create?: XOR<VehicleSubtypeCreateWithoutTypeInput, VehicleSubtypeUncheckedCreateWithoutTypeInput> | VehicleSubtypeCreateWithoutTypeInput[] | VehicleSubtypeUncheckedCreateWithoutTypeInput[]
    connectOrCreate?: VehicleSubtypeCreateOrConnectWithoutTypeInput | VehicleSubtypeCreateOrConnectWithoutTypeInput[]
    createMany?: VehicleSubtypeCreateManyTypeInputEnvelope
    connect?: VehicleSubtypeWhereUniqueInput | VehicleSubtypeWhereUniqueInput[]
  }

  export type VehicleCategoryUpdateOneRequiredWithoutVehicleTypesNestedInput = {
    create?: XOR<VehicleCategoryCreateWithoutVehicleTypesInput, VehicleCategoryUncheckedCreateWithoutVehicleTypesInput>
    connectOrCreate?: VehicleCategoryCreateOrConnectWithoutVehicleTypesInput
    upsert?: VehicleCategoryUpsertWithoutVehicleTypesInput
    connect?: VehicleCategoryWhereUniqueInput
    update?: XOR<XOR<VehicleCategoryUpdateToOneWithWhereWithoutVehicleTypesInput, VehicleCategoryUpdateWithoutVehicleTypesInput>, VehicleCategoryUncheckedUpdateWithoutVehicleTypesInput>
  }

  export type VehicleSubtypeUpdateManyWithoutTypeNestedInput = {
    create?: XOR<VehicleSubtypeCreateWithoutTypeInput, VehicleSubtypeUncheckedCreateWithoutTypeInput> | VehicleSubtypeCreateWithoutTypeInput[] | VehicleSubtypeUncheckedCreateWithoutTypeInput[]
    connectOrCreate?: VehicleSubtypeCreateOrConnectWithoutTypeInput | VehicleSubtypeCreateOrConnectWithoutTypeInput[]
    upsert?: VehicleSubtypeUpsertWithWhereUniqueWithoutTypeInput | VehicleSubtypeUpsertWithWhereUniqueWithoutTypeInput[]
    createMany?: VehicleSubtypeCreateManyTypeInputEnvelope
    set?: VehicleSubtypeWhereUniqueInput | VehicleSubtypeWhereUniqueInput[]
    disconnect?: VehicleSubtypeWhereUniqueInput | VehicleSubtypeWhereUniqueInput[]
    delete?: VehicleSubtypeWhereUniqueInput | VehicleSubtypeWhereUniqueInput[]
    connect?: VehicleSubtypeWhereUniqueInput | VehicleSubtypeWhereUniqueInput[]
    update?: VehicleSubtypeUpdateWithWhereUniqueWithoutTypeInput | VehicleSubtypeUpdateWithWhereUniqueWithoutTypeInput[]
    updateMany?: VehicleSubtypeUpdateManyWithWhereWithoutTypeInput | VehicleSubtypeUpdateManyWithWhereWithoutTypeInput[]
    deleteMany?: VehicleSubtypeScalarWhereInput | VehicleSubtypeScalarWhereInput[]
  }

  export type VehicleSubtypeUncheckedUpdateManyWithoutTypeNestedInput = {
    create?: XOR<VehicleSubtypeCreateWithoutTypeInput, VehicleSubtypeUncheckedCreateWithoutTypeInput> | VehicleSubtypeCreateWithoutTypeInput[] | VehicleSubtypeUncheckedCreateWithoutTypeInput[]
    connectOrCreate?: VehicleSubtypeCreateOrConnectWithoutTypeInput | VehicleSubtypeCreateOrConnectWithoutTypeInput[]
    upsert?: VehicleSubtypeUpsertWithWhereUniqueWithoutTypeInput | VehicleSubtypeUpsertWithWhereUniqueWithoutTypeInput[]
    createMany?: VehicleSubtypeCreateManyTypeInputEnvelope
    set?: VehicleSubtypeWhereUniqueInput | VehicleSubtypeWhereUniqueInput[]
    disconnect?: VehicleSubtypeWhereUniqueInput | VehicleSubtypeWhereUniqueInput[]
    delete?: VehicleSubtypeWhereUniqueInput | VehicleSubtypeWhereUniqueInput[]
    connect?: VehicleSubtypeWhereUniqueInput | VehicleSubtypeWhereUniqueInput[]
    update?: VehicleSubtypeUpdateWithWhereUniqueWithoutTypeInput | VehicleSubtypeUpdateWithWhereUniqueWithoutTypeInput[]
    updateMany?: VehicleSubtypeUpdateManyWithWhereWithoutTypeInput | VehicleSubtypeUpdateManyWithWhereWithoutTypeInput[]
    deleteMany?: VehicleSubtypeScalarWhereInput | VehicleSubtypeScalarWhereInput[]
  }

  export type VehicleTypeCreateNestedOneWithoutVehicleSubtypesInput = {
    create?: XOR<VehicleTypeCreateWithoutVehicleSubtypesInput, VehicleTypeUncheckedCreateWithoutVehicleSubtypesInput>
    connectOrCreate?: VehicleTypeCreateOrConnectWithoutVehicleSubtypesInput
    connect?: VehicleTypeWhereUniqueInput
  }

  export type UserVehicleCreateNestedManyWithoutSubtypeInput = {
    create?: XOR<UserVehicleCreateWithoutSubtypeInput, UserVehicleUncheckedCreateWithoutSubtypeInput> | UserVehicleCreateWithoutSubtypeInput[] | UserVehicleUncheckedCreateWithoutSubtypeInput[]
    connectOrCreate?: UserVehicleCreateOrConnectWithoutSubtypeInput | UserVehicleCreateOrConnectWithoutSubtypeInput[]
    createMany?: UserVehicleCreateManySubtypeInputEnvelope
    connect?: UserVehicleWhereUniqueInput | UserVehicleWhereUniqueInput[]
  }

  export type OrderCreateNestedManyWithoutVehicleSubtypeInput = {
    create?: XOR<OrderCreateWithoutVehicleSubtypeInput, OrderUncheckedCreateWithoutVehicleSubtypeInput> | OrderCreateWithoutVehicleSubtypeInput[] | OrderUncheckedCreateWithoutVehicleSubtypeInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutVehicleSubtypeInput | OrderCreateOrConnectWithoutVehicleSubtypeInput[]
    createMany?: OrderCreateManyVehicleSubtypeInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type UserVehicleUncheckedCreateNestedManyWithoutSubtypeInput = {
    create?: XOR<UserVehicleCreateWithoutSubtypeInput, UserVehicleUncheckedCreateWithoutSubtypeInput> | UserVehicleCreateWithoutSubtypeInput[] | UserVehicleUncheckedCreateWithoutSubtypeInput[]
    connectOrCreate?: UserVehicleCreateOrConnectWithoutSubtypeInput | UserVehicleCreateOrConnectWithoutSubtypeInput[]
    createMany?: UserVehicleCreateManySubtypeInputEnvelope
    connect?: UserVehicleWhereUniqueInput | UserVehicleWhereUniqueInput[]
  }

  export type OrderUncheckedCreateNestedManyWithoutVehicleSubtypeInput = {
    create?: XOR<OrderCreateWithoutVehicleSubtypeInput, OrderUncheckedCreateWithoutVehicleSubtypeInput> | OrderCreateWithoutVehicleSubtypeInput[] | OrderUncheckedCreateWithoutVehicleSubtypeInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutVehicleSubtypeInput | OrderCreateOrConnectWithoutVehicleSubtypeInput[]
    createMany?: OrderCreateManyVehicleSubtypeInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type VehicleTypeUpdateOneRequiredWithoutVehicleSubtypesNestedInput = {
    create?: XOR<VehicleTypeCreateWithoutVehicleSubtypesInput, VehicleTypeUncheckedCreateWithoutVehicleSubtypesInput>
    connectOrCreate?: VehicleTypeCreateOrConnectWithoutVehicleSubtypesInput
    upsert?: VehicleTypeUpsertWithoutVehicleSubtypesInput
    connect?: VehicleTypeWhereUniqueInput
    update?: XOR<XOR<VehicleTypeUpdateToOneWithWhereWithoutVehicleSubtypesInput, VehicleTypeUpdateWithoutVehicleSubtypesInput>, VehicleTypeUncheckedUpdateWithoutVehicleSubtypesInput>
  }

  export type UserVehicleUpdateManyWithoutSubtypeNestedInput = {
    create?: XOR<UserVehicleCreateWithoutSubtypeInput, UserVehicleUncheckedCreateWithoutSubtypeInput> | UserVehicleCreateWithoutSubtypeInput[] | UserVehicleUncheckedCreateWithoutSubtypeInput[]
    connectOrCreate?: UserVehicleCreateOrConnectWithoutSubtypeInput | UserVehicleCreateOrConnectWithoutSubtypeInput[]
    upsert?: UserVehicleUpsertWithWhereUniqueWithoutSubtypeInput | UserVehicleUpsertWithWhereUniqueWithoutSubtypeInput[]
    createMany?: UserVehicleCreateManySubtypeInputEnvelope
    set?: UserVehicleWhereUniqueInput | UserVehicleWhereUniqueInput[]
    disconnect?: UserVehicleWhereUniqueInput | UserVehicleWhereUniqueInput[]
    delete?: UserVehicleWhereUniqueInput | UserVehicleWhereUniqueInput[]
    connect?: UserVehicleWhereUniqueInput | UserVehicleWhereUniqueInput[]
    update?: UserVehicleUpdateWithWhereUniqueWithoutSubtypeInput | UserVehicleUpdateWithWhereUniqueWithoutSubtypeInput[]
    updateMany?: UserVehicleUpdateManyWithWhereWithoutSubtypeInput | UserVehicleUpdateManyWithWhereWithoutSubtypeInput[]
    deleteMany?: UserVehicleScalarWhereInput | UserVehicleScalarWhereInput[]
  }

  export type OrderUpdateManyWithoutVehicleSubtypeNestedInput = {
    create?: XOR<OrderCreateWithoutVehicleSubtypeInput, OrderUncheckedCreateWithoutVehicleSubtypeInput> | OrderCreateWithoutVehicleSubtypeInput[] | OrderUncheckedCreateWithoutVehicleSubtypeInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutVehicleSubtypeInput | OrderCreateOrConnectWithoutVehicleSubtypeInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutVehicleSubtypeInput | OrderUpsertWithWhereUniqueWithoutVehicleSubtypeInput[]
    createMany?: OrderCreateManyVehicleSubtypeInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutVehicleSubtypeInput | OrderUpdateWithWhereUniqueWithoutVehicleSubtypeInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutVehicleSubtypeInput | OrderUpdateManyWithWhereWithoutVehicleSubtypeInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type UserVehicleUncheckedUpdateManyWithoutSubtypeNestedInput = {
    create?: XOR<UserVehicleCreateWithoutSubtypeInput, UserVehicleUncheckedCreateWithoutSubtypeInput> | UserVehicleCreateWithoutSubtypeInput[] | UserVehicleUncheckedCreateWithoutSubtypeInput[]
    connectOrCreate?: UserVehicleCreateOrConnectWithoutSubtypeInput | UserVehicleCreateOrConnectWithoutSubtypeInput[]
    upsert?: UserVehicleUpsertWithWhereUniqueWithoutSubtypeInput | UserVehicleUpsertWithWhereUniqueWithoutSubtypeInput[]
    createMany?: UserVehicleCreateManySubtypeInputEnvelope
    set?: UserVehicleWhereUniqueInput | UserVehicleWhereUniqueInput[]
    disconnect?: UserVehicleWhereUniqueInput | UserVehicleWhereUniqueInput[]
    delete?: UserVehicleWhereUniqueInput | UserVehicleWhereUniqueInput[]
    connect?: UserVehicleWhereUniqueInput | UserVehicleWhereUniqueInput[]
    update?: UserVehicleUpdateWithWhereUniqueWithoutSubtypeInput | UserVehicleUpdateWithWhereUniqueWithoutSubtypeInput[]
    updateMany?: UserVehicleUpdateManyWithWhereWithoutSubtypeInput | UserVehicleUpdateManyWithWhereWithoutSubtypeInput[]
    deleteMany?: UserVehicleScalarWhereInput | UserVehicleScalarWhereInput[]
  }

  export type OrderUncheckedUpdateManyWithoutVehicleSubtypeNestedInput = {
    create?: XOR<OrderCreateWithoutVehicleSubtypeInput, OrderUncheckedCreateWithoutVehicleSubtypeInput> | OrderCreateWithoutVehicleSubtypeInput[] | OrderUncheckedCreateWithoutVehicleSubtypeInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutVehicleSubtypeInput | OrderCreateOrConnectWithoutVehicleSubtypeInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutVehicleSubtypeInput | OrderUpsertWithWhereUniqueWithoutVehicleSubtypeInput[]
    createMany?: OrderCreateManyVehicleSubtypeInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutVehicleSubtypeInput | OrderUpdateWithWhereUniqueWithoutVehicleSubtypeInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutVehicleSubtypeInput | OrderUpdateManyWithWhereWithoutVehicleSubtypeInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutVehiclesInput = {
    create?: XOR<UserCreateWithoutVehiclesInput, UserUncheckedCreateWithoutVehiclesInput>
    connectOrCreate?: UserCreateOrConnectWithoutVehiclesInput
    connect?: UserWhereUniqueInput
  }

  export type VehicleSubtypeCreateNestedOneWithoutUserVehiclesInput = {
    create?: XOR<VehicleSubtypeCreateWithoutUserVehiclesInput, VehicleSubtypeUncheckedCreateWithoutUserVehiclesInput>
    connectOrCreate?: VehicleSubtypeCreateOrConnectWithoutUserVehiclesInput
    connect?: VehicleSubtypeWhereUniqueInput
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type UserUpdateOneRequiredWithoutVehiclesNestedInput = {
    create?: XOR<UserCreateWithoutVehiclesInput, UserUncheckedCreateWithoutVehiclesInput>
    connectOrCreate?: UserCreateOrConnectWithoutVehiclesInput
    upsert?: UserUpsertWithoutVehiclesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutVehiclesInput, UserUpdateWithoutVehiclesInput>, UserUncheckedUpdateWithoutVehiclesInput>
  }

  export type VehicleSubtypeUpdateOneRequiredWithoutUserVehiclesNestedInput = {
    create?: XOR<VehicleSubtypeCreateWithoutUserVehiclesInput, VehicleSubtypeUncheckedCreateWithoutUserVehiclesInput>
    connectOrCreate?: VehicleSubtypeCreateOrConnectWithoutUserVehiclesInput
    upsert?: VehicleSubtypeUpsertWithoutUserVehiclesInput
    connect?: VehicleSubtypeWhereUniqueInput
    update?: XOR<XOR<VehicleSubtypeUpdateToOneWithWhereWithoutUserVehiclesInput, VehicleSubtypeUpdateWithoutUserVehiclesInput>, VehicleSubtypeUncheckedUpdateWithoutUserVehiclesInput>
  }

  export type UserCreateNestedOneWithoutOrdersAsCustomerInput = {
    create?: XOR<UserCreateWithoutOrdersAsCustomerInput, UserUncheckedCreateWithoutOrdersAsCustomerInput>
    connectOrCreate?: UserCreateOrConnectWithoutOrdersAsCustomerInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutOrdersAsExecutorInput = {
    create?: XOR<UserCreateWithoutOrdersAsExecutorInput, UserUncheckedCreateWithoutOrdersAsExecutorInput>
    connectOrCreate?: UserCreateOrConnectWithoutOrdersAsExecutorInput
    connect?: UserWhereUniqueInput
  }

  export type RegionCreateNestedOneWithoutOrdersInput = {
    create?: XOR<RegionCreateWithoutOrdersInput, RegionUncheckedCreateWithoutOrdersInput>
    connectOrCreate?: RegionCreateOrConnectWithoutOrdersInput
    connect?: RegionWhereUniqueInput
  }

  export type VehicleSubtypeCreateNestedOneWithoutOrdersInput = {
    create?: XOR<VehicleSubtypeCreateWithoutOrdersInput, VehicleSubtypeUncheckedCreateWithoutOrdersInput>
    connectOrCreate?: VehicleSubtypeCreateOrConnectWithoutOrdersInput
    connect?: VehicleSubtypeWhereUniqueInput
  }

  export type OrderResponseCreateNestedManyWithoutOrderInput = {
    create?: XOR<OrderResponseCreateWithoutOrderInput, OrderResponseUncheckedCreateWithoutOrderInput> | OrderResponseCreateWithoutOrderInput[] | OrderResponseUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderResponseCreateOrConnectWithoutOrderInput | OrderResponseCreateOrConnectWithoutOrderInput[]
    createMany?: OrderResponseCreateManyOrderInputEnvelope
    connect?: OrderResponseWhereUniqueInput | OrderResponseWhereUniqueInput[]
  }

  export type OrderResponseUncheckedCreateNestedManyWithoutOrderInput = {
    create?: XOR<OrderResponseCreateWithoutOrderInput, OrderResponseUncheckedCreateWithoutOrderInput> | OrderResponseCreateWithoutOrderInput[] | OrderResponseUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderResponseCreateOrConnectWithoutOrderInput | OrderResponseCreateOrConnectWithoutOrderInput[]
    createMany?: OrderResponseCreateManyOrderInputEnvelope
    connect?: OrderResponseWhereUniqueInput | OrderResponseWhereUniqueInput[]
  }

  export type EnumOrderTypeFieldUpdateOperationsInput = {
    set?: $Enums.OrderType
  }

  export type EnumOrderStatusFieldUpdateOperationsInput = {
    set?: $Enums.OrderStatus
  }

  export type UserUpdateOneRequiredWithoutOrdersAsCustomerNestedInput = {
    create?: XOR<UserCreateWithoutOrdersAsCustomerInput, UserUncheckedCreateWithoutOrdersAsCustomerInput>
    connectOrCreate?: UserCreateOrConnectWithoutOrdersAsCustomerInput
    upsert?: UserUpsertWithoutOrdersAsCustomerInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutOrdersAsCustomerInput, UserUpdateWithoutOrdersAsCustomerInput>, UserUncheckedUpdateWithoutOrdersAsCustomerInput>
  }

  export type UserUpdateOneWithoutOrdersAsExecutorNestedInput = {
    create?: XOR<UserCreateWithoutOrdersAsExecutorInput, UserUncheckedCreateWithoutOrdersAsExecutorInput>
    connectOrCreate?: UserCreateOrConnectWithoutOrdersAsExecutorInput
    upsert?: UserUpsertWithoutOrdersAsExecutorInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutOrdersAsExecutorInput, UserUpdateWithoutOrdersAsExecutorInput>, UserUncheckedUpdateWithoutOrdersAsExecutorInput>
  }

  export type RegionUpdateOneRequiredWithoutOrdersNestedInput = {
    create?: XOR<RegionCreateWithoutOrdersInput, RegionUncheckedCreateWithoutOrdersInput>
    connectOrCreate?: RegionCreateOrConnectWithoutOrdersInput
    upsert?: RegionUpsertWithoutOrdersInput
    connect?: RegionWhereUniqueInput
    update?: XOR<XOR<RegionUpdateToOneWithWhereWithoutOrdersInput, RegionUpdateWithoutOrdersInput>, RegionUncheckedUpdateWithoutOrdersInput>
  }

  export type VehicleSubtypeUpdateOneWithoutOrdersNestedInput = {
    create?: XOR<VehicleSubtypeCreateWithoutOrdersInput, VehicleSubtypeUncheckedCreateWithoutOrdersInput>
    connectOrCreate?: VehicleSubtypeCreateOrConnectWithoutOrdersInput
    upsert?: VehicleSubtypeUpsertWithoutOrdersInput
    disconnect?: VehicleSubtypeWhereInput | boolean
    delete?: VehicleSubtypeWhereInput | boolean
    connect?: VehicleSubtypeWhereUniqueInput
    update?: XOR<XOR<VehicleSubtypeUpdateToOneWithWhereWithoutOrdersInput, VehicleSubtypeUpdateWithoutOrdersInput>, VehicleSubtypeUncheckedUpdateWithoutOrdersInput>
  }

  export type OrderResponseUpdateManyWithoutOrderNestedInput = {
    create?: XOR<OrderResponseCreateWithoutOrderInput, OrderResponseUncheckedCreateWithoutOrderInput> | OrderResponseCreateWithoutOrderInput[] | OrderResponseUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderResponseCreateOrConnectWithoutOrderInput | OrderResponseCreateOrConnectWithoutOrderInput[]
    upsert?: OrderResponseUpsertWithWhereUniqueWithoutOrderInput | OrderResponseUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: OrderResponseCreateManyOrderInputEnvelope
    set?: OrderResponseWhereUniqueInput | OrderResponseWhereUniqueInput[]
    disconnect?: OrderResponseWhereUniqueInput | OrderResponseWhereUniqueInput[]
    delete?: OrderResponseWhereUniqueInput | OrderResponseWhereUniqueInput[]
    connect?: OrderResponseWhereUniqueInput | OrderResponseWhereUniqueInput[]
    update?: OrderResponseUpdateWithWhereUniqueWithoutOrderInput | OrderResponseUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: OrderResponseUpdateManyWithWhereWithoutOrderInput | OrderResponseUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: OrderResponseScalarWhereInput | OrderResponseScalarWhereInput[]
  }

  export type OrderResponseUncheckedUpdateManyWithoutOrderNestedInput = {
    create?: XOR<OrderResponseCreateWithoutOrderInput, OrderResponseUncheckedCreateWithoutOrderInput> | OrderResponseCreateWithoutOrderInput[] | OrderResponseUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderResponseCreateOrConnectWithoutOrderInput | OrderResponseCreateOrConnectWithoutOrderInput[]
    upsert?: OrderResponseUpsertWithWhereUniqueWithoutOrderInput | OrderResponseUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: OrderResponseCreateManyOrderInputEnvelope
    set?: OrderResponseWhereUniqueInput | OrderResponseWhereUniqueInput[]
    disconnect?: OrderResponseWhereUniqueInput | OrderResponseWhereUniqueInput[]
    delete?: OrderResponseWhereUniqueInput | OrderResponseWhereUniqueInput[]
    connect?: OrderResponseWhereUniqueInput | OrderResponseWhereUniqueInput[]
    update?: OrderResponseUpdateWithWhereUniqueWithoutOrderInput | OrderResponseUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: OrderResponseUpdateManyWithWhereWithoutOrderInput | OrderResponseUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: OrderResponseScalarWhereInput | OrderResponseScalarWhereInput[]
  }

  export type OrderCreateNestedOneWithoutResponsesInput = {
    create?: XOR<OrderCreateWithoutResponsesInput, OrderUncheckedCreateWithoutResponsesInput>
    connectOrCreate?: OrderCreateOrConnectWithoutResponsesInput
    connect?: OrderWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutOrderResponsesInput = {
    create?: XOR<UserCreateWithoutOrderResponsesInput, UserUncheckedCreateWithoutOrderResponsesInput>
    connectOrCreate?: UserCreateOrConnectWithoutOrderResponsesInput
    connect?: UserWhereUniqueInput
  }

  export type OrderUpdateOneRequiredWithoutResponsesNestedInput = {
    create?: XOR<OrderCreateWithoutResponsesInput, OrderUncheckedCreateWithoutResponsesInput>
    connectOrCreate?: OrderCreateOrConnectWithoutResponsesInput
    upsert?: OrderUpsertWithoutResponsesInput
    connect?: OrderWhereUniqueInput
    update?: XOR<XOR<OrderUpdateToOneWithWhereWithoutResponsesInput, OrderUpdateWithoutResponsesInput>, OrderUncheckedUpdateWithoutResponsesInput>
  }

  export type UserUpdateOneRequiredWithoutOrderResponsesNestedInput = {
    create?: XOR<UserCreateWithoutOrderResponsesInput, UserUncheckedCreateWithoutOrderResponsesInput>
    connectOrCreate?: UserCreateOrConnectWithoutOrderResponsesInput
    upsert?: UserUpsertWithoutOrderResponsesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutOrderResponsesInput, UserUpdateWithoutOrderResponsesInput>, UserUncheckedUpdateWithoutOrderResponsesInput>
  }

  export type UserCreateNestedOneWithoutPaymentsInput = {
    create?: XOR<UserCreateWithoutPaymentsInput, UserUncheckedCreateWithoutPaymentsInput>
    connectOrCreate?: UserCreateOrConnectWithoutPaymentsInput
    connect?: UserWhereUniqueInput
  }

  export type EnumPaymentStatusFieldUpdateOperationsInput = {
    set?: $Enums.PaymentStatus
  }

  export type UserUpdateOneRequiredWithoutPaymentsNestedInput = {
    create?: XOR<UserCreateWithoutPaymentsInput, UserUncheckedCreateWithoutPaymentsInput>
    connectOrCreate?: UserCreateOrConnectWithoutPaymentsInput
    upsert?: UserUpsertWithoutPaymentsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutPaymentsInput, UserUpdateWithoutPaymentsInput>, UserUncheckedUpdateWithoutPaymentsInput>
  }

  export type UserCreateNestedOneWithoutPaymentTransactionsInput = {
    create?: XOR<UserCreateWithoutPaymentTransactionsInput, UserUncheckedCreateWithoutPaymentTransactionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutPaymentTransactionsInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutPaymentTransactionsNestedInput = {
    create?: XOR<UserCreateWithoutPaymentTransactionsInput, UserUncheckedCreateWithoutPaymentTransactionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutPaymentTransactionsInput
    upsert?: UserUpsertWithoutPaymentTransactionsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutPaymentTransactionsInput, UserUpdateWithoutPaymentTransactionsInput>, UserUncheckedUpdateWithoutPaymentTransactionsInput>
  }

  export type UserCreateNestedOneWithoutSessionsInput = {
    create?: XOR<UserCreateWithoutSessionsInput, UserUncheckedCreateWithoutSessionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSessionsInput
    connect?: UserWhereUniqueInput
  }

  export type EnumClientTypeFieldUpdateOperationsInput = {
    set?: $Enums.ClientType
  }

  export type NullableBigIntFieldUpdateOperationsInput = {
    set?: bigint | number | null
    increment?: bigint | number
    decrement?: bigint | number
    multiply?: bigint | number
    divide?: bigint | number
  }

  export type EnumSessionStatusFieldUpdateOperationsInput = {
    set?: $Enums.SessionStatus
  }

  export type UserUpdateOneRequiredWithoutSessionsNestedInput = {
    create?: XOR<UserCreateWithoutSessionsInput, UserUncheckedCreateWithoutSessionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSessionsInput
    upsert?: UserUpsertWithoutSessionsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSessionsInput, UserUpdateWithoutSessionsInput>, UserUncheckedUpdateWithoutSessionsInput>
  }

  export type UserCreateNestedOneWithoutNotificationsInput = {
    create?: XOR<UserCreateWithoutNotificationsInput, UserUncheckedCreateWithoutNotificationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutNotificationsInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutNotificationsNestedInput = {
    create?: XOR<UserCreateWithoutNotificationsInput, UserUncheckedCreateWithoutNotificationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutNotificationsInput
    upsert?: UserUpsertWithoutNotificationsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutNotificationsInput, UserUpdateWithoutNotificationsInput>, UserUncheckedUpdateWithoutNotificationsInput>
  }

  export type UserCreateNestedOneWithoutAdminActionsInput = {
    create?: XOR<UserCreateWithoutAdminActionsInput, UserUncheckedCreateWithoutAdminActionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAdminActionsInput
    connect?: UserWhereUniqueInput
  }

  export type EnumAdminActionTypeFieldUpdateOperationsInput = {
    set?: $Enums.AdminActionType
  }

  export type NullableEnumClientTypeFieldUpdateOperationsInput = {
    set?: $Enums.ClientType | null
  }

  export type UserUpdateOneRequiredWithoutAdminActionsNestedInput = {
    create?: XOR<UserCreateWithoutAdminActionsInput, UserUncheckedCreateWithoutAdminActionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAdminActionsInput
    upsert?: UserUpsertWithoutAdminActionsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutAdminActionsInput, UserUpdateWithoutAdminActionsInput>, UserUncheckedUpdateWithoutAdminActionsInput>
  }

  export type UserCreateNestedOneWithoutBroadcastsInput = {
    create?: XOR<UserCreateWithoutBroadcastsInput, UserUncheckedCreateWithoutBroadcastsInput>
    connectOrCreate?: UserCreateOrConnectWithoutBroadcastsInput
    connect?: UserWhereUniqueInput
  }

  export type RegionCreateNestedOneWithoutBroadcastsInput = {
    create?: XOR<RegionCreateWithoutBroadcastsInput, RegionUncheckedCreateWithoutBroadcastsInput>
    connectOrCreate?: RegionCreateOrConnectWithoutBroadcastsInput
    connect?: RegionWhereUniqueInput
  }

  export type EnumBroadcastTargetFieldUpdateOperationsInput = {
    set?: $Enums.BroadcastTarget
  }

  export type EnumBroadcastStatusFieldUpdateOperationsInput = {
    set?: $Enums.BroadcastStatus
  }

  export type UserUpdateOneRequiredWithoutBroadcastsNestedInput = {
    create?: XOR<UserCreateWithoutBroadcastsInput, UserUncheckedCreateWithoutBroadcastsInput>
    connectOrCreate?: UserCreateOrConnectWithoutBroadcastsInput
    upsert?: UserUpsertWithoutBroadcastsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutBroadcastsInput, UserUpdateWithoutBroadcastsInput>, UserUncheckedUpdateWithoutBroadcastsInput>
  }

  export type RegionUpdateOneWithoutBroadcastsNestedInput = {
    create?: XOR<RegionCreateWithoutBroadcastsInput, RegionUncheckedCreateWithoutBroadcastsInput>
    connectOrCreate?: RegionCreateOrConnectWithoutBroadcastsInput
    upsert?: RegionUpsertWithoutBroadcastsInput
    disconnect?: RegionWhereInput | boolean
    delete?: RegionWhereInput | boolean
    connect?: RegionWhereUniqueInput
    update?: XOR<XOR<RegionUpdateToOneWithWhereWithoutBroadcastsInput, RegionUpdateWithoutBroadcastsInput>, RegionUncheckedUpdateWithoutBroadcastsInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedBigIntFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntFilter<$PrismaModel> | bigint | number
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedEnumRoleTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.RoleType | EnumRoleTypeFieldRefInput<$PrismaModel>
    in?: $Enums.RoleType[] | ListEnumRoleTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.RoleType[] | ListEnumRoleTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumRoleTypeFilter<$PrismaModel> | $Enums.RoleType
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedBigIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntWithAggregatesFilter<$PrismaModel> | bigint | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedBigIntFilter<$PrismaModel>
    _min?: NestedBigIntFilter<$PrismaModel>
    _max?: NestedBigIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedEnumRoleTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.RoleType | EnumRoleTypeFieldRefInput<$PrismaModel>
    in?: $Enums.RoleType[] | ListEnumRoleTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.RoleType[] | ListEnumRoleTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumRoleTypeWithAggregatesFilter<$PrismaModel> | $Enums.RoleType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRoleTypeFilter<$PrismaModel>
    _max?: NestedEnumRoleTypeFilter<$PrismaModel>
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }
  export type NestedJsonFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<NestedJsonFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type NestedEnumTariffTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.TariffType | EnumTariffTypeFieldRefInput<$PrismaModel>
    in?: $Enums.TariffType[] | ListEnumTariffTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.TariffType[] | ListEnumTariffTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumTariffTypeFilter<$PrismaModel> | $Enums.TariffType
  }

  export type NestedEnumTariffTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TariffType | EnumTariffTypeFieldRefInput<$PrismaModel>
    in?: $Enums.TariffType[] | ListEnumTariffTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.TariffType[] | ListEnumTariffTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumTariffTypeWithAggregatesFilter<$PrismaModel> | $Enums.TariffType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTariffTypeFilter<$PrismaModel>
    _max?: NestedEnumTariffTypeFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedEnumOrderTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderType | EnumOrderTypeFieldRefInput<$PrismaModel>
    in?: $Enums.OrderType[] | ListEnumOrderTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderType[] | ListEnumOrderTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderTypeFilter<$PrismaModel> | $Enums.OrderType
  }

  export type NestedEnumOrderStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderStatus | EnumOrderStatusFieldRefInput<$PrismaModel>
    in?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderStatusFilter<$PrismaModel> | $Enums.OrderStatus
  }

  export type NestedEnumOrderTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderType | EnumOrderTypeFieldRefInput<$PrismaModel>
    in?: $Enums.OrderType[] | ListEnumOrderTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderType[] | ListEnumOrderTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderTypeWithAggregatesFilter<$PrismaModel> | $Enums.OrderType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumOrderTypeFilter<$PrismaModel>
    _max?: NestedEnumOrderTypeFilter<$PrismaModel>
  }

  export type NestedEnumOrderStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderStatus | EnumOrderStatusFieldRefInput<$PrismaModel>
    in?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderStatusWithAggregatesFilter<$PrismaModel> | $Enums.OrderStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumOrderStatusFilter<$PrismaModel>
    _max?: NestedEnumOrderStatusFilter<$PrismaModel>
  }

  export type NestedEnumPaymentStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentStatus | EnumPaymentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentStatusFilter<$PrismaModel> | $Enums.PaymentStatus
  }

  export type NestedEnumPaymentStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentStatus | EnumPaymentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentStatusWithAggregatesFilter<$PrismaModel> | $Enums.PaymentStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPaymentStatusFilter<$PrismaModel>
    _max?: NestedEnumPaymentStatusFilter<$PrismaModel>
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedEnumClientTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.ClientType | EnumClientTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ClientType[] | ListEnumClientTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ClientType[] | ListEnumClientTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumClientTypeFilter<$PrismaModel> | $Enums.ClientType
  }

  export type NestedBigIntNullableFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel> | null
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntNullableFilter<$PrismaModel> | bigint | number | null
  }

  export type NestedEnumSessionStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.SessionStatus | EnumSessionStatusFieldRefInput<$PrismaModel>
    in?: $Enums.SessionStatus[] | ListEnumSessionStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.SessionStatus[] | ListEnumSessionStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumSessionStatusFilter<$PrismaModel> | $Enums.SessionStatus
  }

  export type NestedEnumClientTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ClientType | EnumClientTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ClientType[] | ListEnumClientTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ClientType[] | ListEnumClientTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumClientTypeWithAggregatesFilter<$PrismaModel> | $Enums.ClientType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumClientTypeFilter<$PrismaModel>
    _max?: NestedEnumClientTypeFilter<$PrismaModel>
  }

  export type NestedBigIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel> | null
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntNullableWithAggregatesFilter<$PrismaModel> | bigint | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedBigIntNullableFilter<$PrismaModel>
    _min?: NestedBigIntNullableFilter<$PrismaModel>
    _max?: NestedBigIntNullableFilter<$PrismaModel>
  }

  export type NestedEnumSessionStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SessionStatus | EnumSessionStatusFieldRefInput<$PrismaModel>
    in?: $Enums.SessionStatus[] | ListEnumSessionStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.SessionStatus[] | ListEnumSessionStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumSessionStatusWithAggregatesFilter<$PrismaModel> | $Enums.SessionStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumSessionStatusFilter<$PrismaModel>
    _max?: NestedEnumSessionStatusFilter<$PrismaModel>
  }

  export type NestedEnumAdminActionTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.AdminActionType | EnumAdminActionTypeFieldRefInput<$PrismaModel>
    in?: $Enums.AdminActionType[] | ListEnumAdminActionTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.AdminActionType[] | ListEnumAdminActionTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumAdminActionTypeFilter<$PrismaModel> | $Enums.AdminActionType
  }

  export type NestedEnumClientTypeNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.ClientType | EnumClientTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.ClientType[] | ListEnumClientTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.ClientType[] | ListEnumClientTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumClientTypeNullableFilter<$PrismaModel> | $Enums.ClientType | null
  }

  export type NestedEnumAdminActionTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AdminActionType | EnumAdminActionTypeFieldRefInput<$PrismaModel>
    in?: $Enums.AdminActionType[] | ListEnumAdminActionTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.AdminActionType[] | ListEnumAdminActionTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumAdminActionTypeWithAggregatesFilter<$PrismaModel> | $Enums.AdminActionType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAdminActionTypeFilter<$PrismaModel>
    _max?: NestedEnumAdminActionTypeFilter<$PrismaModel>
  }

  export type NestedEnumClientTypeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ClientType | EnumClientTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.ClientType[] | ListEnumClientTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.ClientType[] | ListEnumClientTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumClientTypeNullableWithAggregatesFilter<$PrismaModel> | $Enums.ClientType | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumClientTypeNullableFilter<$PrismaModel>
    _max?: NestedEnumClientTypeNullableFilter<$PrismaModel>
  }

  export type NestedEnumBroadcastTargetFilter<$PrismaModel = never> = {
    equals?: $Enums.BroadcastTarget | EnumBroadcastTargetFieldRefInput<$PrismaModel>
    in?: $Enums.BroadcastTarget[] | ListEnumBroadcastTargetFieldRefInput<$PrismaModel>
    notIn?: $Enums.BroadcastTarget[] | ListEnumBroadcastTargetFieldRefInput<$PrismaModel>
    not?: NestedEnumBroadcastTargetFilter<$PrismaModel> | $Enums.BroadcastTarget
  }

  export type NestedEnumBroadcastStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.BroadcastStatus | EnumBroadcastStatusFieldRefInput<$PrismaModel>
    in?: $Enums.BroadcastStatus[] | ListEnumBroadcastStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.BroadcastStatus[] | ListEnumBroadcastStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumBroadcastStatusFilter<$PrismaModel> | $Enums.BroadcastStatus
  }

  export type NestedEnumBroadcastTargetWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.BroadcastTarget | EnumBroadcastTargetFieldRefInput<$PrismaModel>
    in?: $Enums.BroadcastTarget[] | ListEnumBroadcastTargetFieldRefInput<$PrismaModel>
    notIn?: $Enums.BroadcastTarget[] | ListEnumBroadcastTargetFieldRefInput<$PrismaModel>
    not?: NestedEnumBroadcastTargetWithAggregatesFilter<$PrismaModel> | $Enums.BroadcastTarget
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumBroadcastTargetFilter<$PrismaModel>
    _max?: NestedEnumBroadcastTargetFilter<$PrismaModel>
  }

  export type NestedEnumBroadcastStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.BroadcastStatus | EnumBroadcastStatusFieldRefInput<$PrismaModel>
    in?: $Enums.BroadcastStatus[] | ListEnumBroadcastStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.BroadcastStatus[] | ListEnumBroadcastStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumBroadcastStatusWithAggregatesFilter<$PrismaModel> | $Enums.BroadcastStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumBroadcastStatusFilter<$PrismaModel>
    _max?: NestedEnumBroadcastStatusFilter<$PrismaModel>
  }

  export type UserCreateWithoutReferrerInput = {
    id?: string
    telegramId: bigint | number
    username?: string | null
    firstName: string
    lastName?: string | null
    phone?: string | null
    email?: string | null
    role?: $Enums.RoleType
    balance?: Decimal | DecimalJsLike | number | string
    frozenBalance?: Decimal | DecimalJsLike | number | string
    totalEarned?: Decimal | DecimalJsLike | number | string
    orderLimit?: number
    createLimit?: number
    completedOrders?: number
    cancelledOrders?: number
    averageRating?: Decimal | DecimalJsLike | number | string
    totalReviews?: number
    hasActivePlan?: boolean
    planExpiresAt?: Date | string | null
    referralCode?: string | null
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    lastSeenAt?: Date | string | null
    notificationsEnabled?: boolean
    emailNotifications?: boolean
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    referredUsers?: UserCreateNestedManyWithoutReferrerInput
    vehicles?: UserVehicleCreateNestedManyWithoutUserInput
    ordersAsCustomer?: OrderCreateNestedManyWithoutCustomerInput
    ordersAsExecutor?: OrderCreateNestedManyWithoutExecutorInput
    orderResponses?: OrderResponseCreateNestedManyWithoutExecutorInput
    payments?: PaymentCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    userRegions?: UserRegionCreateNestedManyWithoutUserInput
    adminActions?: AdminActionCreateNestedManyWithoutAdminInput
    broadcasts?: BroadcastCreateNestedManyWithoutAdminInput
    paymentTransactions?: PaymentTransactionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutReferrerInput = {
    id?: string
    telegramId: bigint | number
    username?: string | null
    firstName: string
    lastName?: string | null
    phone?: string | null
    email?: string | null
    role?: $Enums.RoleType
    balance?: Decimal | DecimalJsLike | number | string
    frozenBalance?: Decimal | DecimalJsLike | number | string
    totalEarned?: Decimal | DecimalJsLike | number | string
    orderLimit?: number
    createLimit?: number
    completedOrders?: number
    cancelledOrders?: number
    averageRating?: Decimal | DecimalJsLike | number | string
    totalReviews?: number
    hasActivePlan?: boolean
    planExpiresAt?: Date | string | null
    referralCode?: string | null
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    lastSeenAt?: Date | string | null
    notificationsEnabled?: boolean
    emailNotifications?: boolean
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    referredUsers?: UserUncheckedCreateNestedManyWithoutReferrerInput
    vehicles?: UserVehicleUncheckedCreateNestedManyWithoutUserInput
    ordersAsCustomer?: OrderUncheckedCreateNestedManyWithoutCustomerInput
    ordersAsExecutor?: OrderUncheckedCreateNestedManyWithoutExecutorInput
    orderResponses?: OrderResponseUncheckedCreateNestedManyWithoutExecutorInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    userRegions?: UserRegionUncheckedCreateNestedManyWithoutUserInput
    adminActions?: AdminActionUncheckedCreateNestedManyWithoutAdminInput
    broadcasts?: BroadcastUncheckedCreateNestedManyWithoutAdminInput
    paymentTransactions?: PaymentTransactionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutReferrerInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutReferrerInput, UserUncheckedCreateWithoutReferrerInput>
  }

  export type UserCreateManyReferrerInputEnvelope = {
    data: UserCreateManyReferrerInput | UserCreateManyReferrerInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutReferredUsersInput = {
    id?: string
    telegramId: bigint | number
    username?: string | null
    firstName: string
    lastName?: string | null
    phone?: string | null
    email?: string | null
    role?: $Enums.RoleType
    balance?: Decimal | DecimalJsLike | number | string
    frozenBalance?: Decimal | DecimalJsLike | number | string
    totalEarned?: Decimal | DecimalJsLike | number | string
    orderLimit?: number
    createLimit?: number
    completedOrders?: number
    cancelledOrders?: number
    averageRating?: Decimal | DecimalJsLike | number | string
    totalReviews?: number
    hasActivePlan?: boolean
    planExpiresAt?: Date | string | null
    referralCode?: string | null
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    lastSeenAt?: Date | string | null
    notificationsEnabled?: boolean
    emailNotifications?: boolean
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    referrer?: UserCreateNestedOneWithoutReferredUsersInput
    vehicles?: UserVehicleCreateNestedManyWithoutUserInput
    ordersAsCustomer?: OrderCreateNestedManyWithoutCustomerInput
    ordersAsExecutor?: OrderCreateNestedManyWithoutExecutorInput
    orderResponses?: OrderResponseCreateNestedManyWithoutExecutorInput
    payments?: PaymentCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    userRegions?: UserRegionCreateNestedManyWithoutUserInput
    adminActions?: AdminActionCreateNestedManyWithoutAdminInput
    broadcasts?: BroadcastCreateNestedManyWithoutAdminInput
    paymentTransactions?: PaymentTransactionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutReferredUsersInput = {
    id?: string
    telegramId: bigint | number
    username?: string | null
    firstName: string
    lastName?: string | null
    phone?: string | null
    email?: string | null
    role?: $Enums.RoleType
    balance?: Decimal | DecimalJsLike | number | string
    frozenBalance?: Decimal | DecimalJsLike | number | string
    totalEarned?: Decimal | DecimalJsLike | number | string
    orderLimit?: number
    createLimit?: number
    completedOrders?: number
    cancelledOrders?: number
    averageRating?: Decimal | DecimalJsLike | number | string
    totalReviews?: number
    hasActivePlan?: boolean
    planExpiresAt?: Date | string | null
    referralCode?: string | null
    referredById?: string | null
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    lastSeenAt?: Date | string | null
    notificationsEnabled?: boolean
    emailNotifications?: boolean
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    vehicles?: UserVehicleUncheckedCreateNestedManyWithoutUserInput
    ordersAsCustomer?: OrderUncheckedCreateNestedManyWithoutCustomerInput
    ordersAsExecutor?: OrderUncheckedCreateNestedManyWithoutExecutorInput
    orderResponses?: OrderResponseUncheckedCreateNestedManyWithoutExecutorInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    userRegions?: UserRegionUncheckedCreateNestedManyWithoutUserInput
    adminActions?: AdminActionUncheckedCreateNestedManyWithoutAdminInput
    broadcasts?: BroadcastUncheckedCreateNestedManyWithoutAdminInput
    paymentTransactions?: PaymentTransactionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutReferredUsersInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutReferredUsersInput, UserUncheckedCreateWithoutReferredUsersInput>
  }

  export type UserVehicleCreateWithoutUserInput = {
    id?: string
    brand?: string | null
    model?: string | null
    year?: number | null
    licensePlate?: string | null
    color?: string | null
    loadCapacity?: Decimal | DecimalJsLike | number | string | null
    volumeCapacity?: Decimal | DecimalJsLike | number | string | null
    hasRefrigerator?: boolean
    hasLifting?: boolean
    canCarryFragile?: boolean
    photos?: JsonNullValueInput | InputJsonValue
    documents?: JsonNullValueInput | InputJsonValue
    isActive?: boolean
    isVerified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    subtype: VehicleSubtypeCreateNestedOneWithoutUserVehiclesInput
  }

  export type UserVehicleUncheckedCreateWithoutUserInput = {
    id?: string
    subtypeId: string
    brand?: string | null
    model?: string | null
    year?: number | null
    licensePlate?: string | null
    color?: string | null
    loadCapacity?: Decimal | DecimalJsLike | number | string | null
    volumeCapacity?: Decimal | DecimalJsLike | number | string | null
    hasRefrigerator?: boolean
    hasLifting?: boolean
    canCarryFragile?: boolean
    photos?: JsonNullValueInput | InputJsonValue
    documents?: JsonNullValueInput | InputJsonValue
    isActive?: boolean
    isVerified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserVehicleCreateOrConnectWithoutUserInput = {
    where: UserVehicleWhereUniqueInput
    create: XOR<UserVehicleCreateWithoutUserInput, UserVehicleUncheckedCreateWithoutUserInput>
  }

  export type UserVehicleCreateManyUserInputEnvelope = {
    data: UserVehicleCreateManyUserInput | UserVehicleCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type OrderCreateWithoutCustomerInput = {
    id?: string
    orderNumber: string
    type: $Enums.OrderType
    title: string
    description: string
    pickupAddress?: string | null
    deliveryAddress?: string | null
    workAddress?: string | null
    pickupLatitude?: Decimal | DecimalJsLike | number | string | null
    pickupLongitude?: Decimal | DecimalJsLike | number | string | null
    deliveryLatitude?: Decimal | DecimalJsLike | number | string | null
    deliveryLongitude?: Decimal | DecimalJsLike | number | string | null
    regionCode: string
    subRegion?: string | null
    scheduledDate?: Date | string | null
    scheduledTime?: string | null
    deadlineDate?: Date | string | null
    isUrgent?: boolean
    budgetFrom?: Decimal | DecimalJsLike | number | string | null
    budgetTo?: Decimal | DecimalJsLike | number | string | null
    proposedPrice?: Decimal | DecimalJsLike | number | string | null
    agreedPrice?: Decimal | DecimalJsLike | number | string | null
    isPriceFixed?: boolean
    cargoWeight?: Decimal | DecimalJsLike | number | string | null
    cargoVolume?: Decimal | DecimalJsLike | number | string | null
    cargoDescription?: string | null
    estimatedDistance?: Decimal | DecimalJsLike | number | string | null
    needsRefrigerator?: boolean
    needsLifting?: boolean
    isFragile?: boolean
    passengerCount?: number | null
    requirements?: string | null
    customerComment?: string | null
    executorComment?: string | null
    status?: $Enums.OrderStatus
    moderationComment?: string | null
    moderatedAt?: Date | string | null
    moderatedById?: string | null
    isSentToExecutors?: boolean
    sentToAllRegions?: boolean
    viewsCount?: number
    responsesCount?: number
    contactPhone?: string | null
    contactName?: string | null
    photos?: JsonNullValueInput | InputJsonValue
    documents?: JsonNullValueInput | InputJsonValue
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    executor?: UserCreateNestedOneWithoutOrdersAsExecutorInput
    region: RegionCreateNestedOneWithoutOrdersInput
    vehicleSubtype?: VehicleSubtypeCreateNestedOneWithoutOrdersInput
    responses?: OrderResponseCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutCustomerInput = {
    id?: string
    orderNumber: string
    executorId?: string | null
    regionId: string
    vehicleSubtypeId?: string | null
    type: $Enums.OrderType
    title: string
    description: string
    pickupAddress?: string | null
    deliveryAddress?: string | null
    workAddress?: string | null
    pickupLatitude?: Decimal | DecimalJsLike | number | string | null
    pickupLongitude?: Decimal | DecimalJsLike | number | string | null
    deliveryLatitude?: Decimal | DecimalJsLike | number | string | null
    deliveryLongitude?: Decimal | DecimalJsLike | number | string | null
    regionCode: string
    subRegion?: string | null
    scheduledDate?: Date | string | null
    scheduledTime?: string | null
    deadlineDate?: Date | string | null
    isUrgent?: boolean
    budgetFrom?: Decimal | DecimalJsLike | number | string | null
    budgetTo?: Decimal | DecimalJsLike | number | string | null
    proposedPrice?: Decimal | DecimalJsLike | number | string | null
    agreedPrice?: Decimal | DecimalJsLike | number | string | null
    isPriceFixed?: boolean
    cargoWeight?: Decimal | DecimalJsLike | number | string | null
    cargoVolume?: Decimal | DecimalJsLike | number | string | null
    cargoDescription?: string | null
    estimatedDistance?: Decimal | DecimalJsLike | number | string | null
    needsRefrigerator?: boolean
    needsLifting?: boolean
    isFragile?: boolean
    passengerCount?: number | null
    requirements?: string | null
    customerComment?: string | null
    executorComment?: string | null
    status?: $Enums.OrderStatus
    moderationComment?: string | null
    moderatedAt?: Date | string | null
    moderatedById?: string | null
    isSentToExecutors?: boolean
    sentToAllRegions?: boolean
    viewsCount?: number
    responsesCount?: number
    contactPhone?: string | null
    contactName?: string | null
    photos?: JsonNullValueInput | InputJsonValue
    documents?: JsonNullValueInput | InputJsonValue
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    responses?: OrderResponseUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutCustomerInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutCustomerInput, OrderUncheckedCreateWithoutCustomerInput>
  }

  export type OrderCreateManyCustomerInputEnvelope = {
    data: OrderCreateManyCustomerInput | OrderCreateManyCustomerInput[]
    skipDuplicates?: boolean
  }

  export type OrderCreateWithoutExecutorInput = {
    id?: string
    orderNumber: string
    type: $Enums.OrderType
    title: string
    description: string
    pickupAddress?: string | null
    deliveryAddress?: string | null
    workAddress?: string | null
    pickupLatitude?: Decimal | DecimalJsLike | number | string | null
    pickupLongitude?: Decimal | DecimalJsLike | number | string | null
    deliveryLatitude?: Decimal | DecimalJsLike | number | string | null
    deliveryLongitude?: Decimal | DecimalJsLike | number | string | null
    regionCode: string
    subRegion?: string | null
    scheduledDate?: Date | string | null
    scheduledTime?: string | null
    deadlineDate?: Date | string | null
    isUrgent?: boolean
    budgetFrom?: Decimal | DecimalJsLike | number | string | null
    budgetTo?: Decimal | DecimalJsLike | number | string | null
    proposedPrice?: Decimal | DecimalJsLike | number | string | null
    agreedPrice?: Decimal | DecimalJsLike | number | string | null
    isPriceFixed?: boolean
    cargoWeight?: Decimal | DecimalJsLike | number | string | null
    cargoVolume?: Decimal | DecimalJsLike | number | string | null
    cargoDescription?: string | null
    estimatedDistance?: Decimal | DecimalJsLike | number | string | null
    needsRefrigerator?: boolean
    needsLifting?: boolean
    isFragile?: boolean
    passengerCount?: number | null
    requirements?: string | null
    customerComment?: string | null
    executorComment?: string | null
    status?: $Enums.OrderStatus
    moderationComment?: string | null
    moderatedAt?: Date | string | null
    moderatedById?: string | null
    isSentToExecutors?: boolean
    sentToAllRegions?: boolean
    viewsCount?: number
    responsesCount?: number
    contactPhone?: string | null
    contactName?: string | null
    photos?: JsonNullValueInput | InputJsonValue
    documents?: JsonNullValueInput | InputJsonValue
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    customer: UserCreateNestedOneWithoutOrdersAsCustomerInput
    region: RegionCreateNestedOneWithoutOrdersInput
    vehicleSubtype?: VehicleSubtypeCreateNestedOneWithoutOrdersInput
    responses?: OrderResponseCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutExecutorInput = {
    id?: string
    orderNumber: string
    customerId: string
    regionId: string
    vehicleSubtypeId?: string | null
    type: $Enums.OrderType
    title: string
    description: string
    pickupAddress?: string | null
    deliveryAddress?: string | null
    workAddress?: string | null
    pickupLatitude?: Decimal | DecimalJsLike | number | string | null
    pickupLongitude?: Decimal | DecimalJsLike | number | string | null
    deliveryLatitude?: Decimal | DecimalJsLike | number | string | null
    deliveryLongitude?: Decimal | DecimalJsLike | number | string | null
    regionCode: string
    subRegion?: string | null
    scheduledDate?: Date | string | null
    scheduledTime?: string | null
    deadlineDate?: Date | string | null
    isUrgent?: boolean
    budgetFrom?: Decimal | DecimalJsLike | number | string | null
    budgetTo?: Decimal | DecimalJsLike | number | string | null
    proposedPrice?: Decimal | DecimalJsLike | number | string | null
    agreedPrice?: Decimal | DecimalJsLike | number | string | null
    isPriceFixed?: boolean
    cargoWeight?: Decimal | DecimalJsLike | number | string | null
    cargoVolume?: Decimal | DecimalJsLike | number | string | null
    cargoDescription?: string | null
    estimatedDistance?: Decimal | DecimalJsLike | number | string | null
    needsRefrigerator?: boolean
    needsLifting?: boolean
    isFragile?: boolean
    passengerCount?: number | null
    requirements?: string | null
    customerComment?: string | null
    executorComment?: string | null
    status?: $Enums.OrderStatus
    moderationComment?: string | null
    moderatedAt?: Date | string | null
    moderatedById?: string | null
    isSentToExecutors?: boolean
    sentToAllRegions?: boolean
    viewsCount?: number
    responsesCount?: number
    contactPhone?: string | null
    contactName?: string | null
    photos?: JsonNullValueInput | InputJsonValue
    documents?: JsonNullValueInput | InputJsonValue
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    responses?: OrderResponseUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutExecutorInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutExecutorInput, OrderUncheckedCreateWithoutExecutorInput>
  }

  export type OrderCreateManyExecutorInputEnvelope = {
    data: OrderCreateManyExecutorInput | OrderCreateManyExecutorInput[]
    skipDuplicates?: boolean
  }

  export type OrderResponseCreateWithoutExecutorInput = {
    id?: string
    proposedPrice?: Decimal | DecimalJsLike | number | string | null
    comment?: string | null
    estimatedDuration?: string | null
    status?: string
    vehiclePhotos?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    order: OrderCreateNestedOneWithoutResponsesInput
  }

  export type OrderResponseUncheckedCreateWithoutExecutorInput = {
    id?: string
    orderId: string
    proposedPrice?: Decimal | DecimalJsLike | number | string | null
    comment?: string | null
    estimatedDuration?: string | null
    status?: string
    vehiclePhotos?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OrderResponseCreateOrConnectWithoutExecutorInput = {
    where: OrderResponseWhereUniqueInput
    create: XOR<OrderResponseCreateWithoutExecutorInput, OrderResponseUncheckedCreateWithoutExecutorInput>
  }

  export type OrderResponseCreateManyExecutorInputEnvelope = {
    data: OrderResponseCreateManyExecutorInput | OrderResponseCreateManyExecutorInput[]
    skipDuplicates?: boolean
  }

  export type PaymentCreateWithoutUserInput = {
    id?: string
    tinkoffPaymentId?: string | null
    tinkoffStatus?: string | null
    amount: Decimal | DecimalJsLike | number | string
    description: string
    status?: $Enums.PaymentStatus
    metadata?: NullableJsonNullValueInput | InputJsonValue
    paidAt?: Date | string | null
    expiresAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PaymentUncheckedCreateWithoutUserInput = {
    id?: string
    tinkoffPaymentId?: string | null
    tinkoffStatus?: string | null
    amount: Decimal | DecimalJsLike | number | string
    description: string
    status?: $Enums.PaymentStatus
    metadata?: NullableJsonNullValueInput | InputJsonValue
    paidAt?: Date | string | null
    expiresAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PaymentCreateOrConnectWithoutUserInput = {
    where: PaymentWhereUniqueInput
    create: XOR<PaymentCreateWithoutUserInput, PaymentUncheckedCreateWithoutUserInput>
  }

  export type PaymentCreateManyUserInputEnvelope = {
    data: PaymentCreateManyUserInput | PaymentCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type SessionCreateWithoutUserInput = {
    id?: string
    clientType: $Enums.ClientType
    chatId?: bigint | number | null
    webAppInitData?: string | null
    userAgent?: string | null
    ipAddress?: string | null
    currentState?: string | null
    contextData?: NullableJsonNullValueInput | InputJsonValue
    lastActivity?: Date | string
    expiresAt: Date | string
    status?: $Enums.SessionStatus
    deviceInfo?: NullableJsonNullValueInput | InputJsonValue
    timezone?: string | null
    language?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SessionUncheckedCreateWithoutUserInput = {
    id?: string
    clientType: $Enums.ClientType
    chatId?: bigint | number | null
    webAppInitData?: string | null
    userAgent?: string | null
    ipAddress?: string | null
    currentState?: string | null
    contextData?: NullableJsonNullValueInput | InputJsonValue
    lastActivity?: Date | string
    expiresAt: Date | string
    status?: $Enums.SessionStatus
    deviceInfo?: NullableJsonNullValueInput | InputJsonValue
    timezone?: string | null
    language?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SessionCreateOrConnectWithoutUserInput = {
    where: SessionWhereUniqueInput
    create: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput>
  }

  export type SessionCreateManyUserInputEnvelope = {
    data: SessionCreateManyUserInput | SessionCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type NotificationCreateWithoutUserInput = {
    id?: string
    title: string
    message: string
    type: string
    sendToTelegram?: boolean
    sendToEmail?: boolean
    sendToWebApp?: boolean
    isRead?: boolean
    isDelivered?: boolean
    scheduledFor?: Date | string | null
    sentAt?: Date | string | null
    iconUrl?: string | null
    actionUrl?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type NotificationUncheckedCreateWithoutUserInput = {
    id?: string
    title: string
    message: string
    type: string
    sendToTelegram?: boolean
    sendToEmail?: boolean
    sendToWebApp?: boolean
    isRead?: boolean
    isDelivered?: boolean
    scheduledFor?: Date | string | null
    sentAt?: Date | string | null
    iconUrl?: string | null
    actionUrl?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type NotificationCreateOrConnectWithoutUserInput = {
    where: NotificationWhereUniqueInput
    create: XOR<NotificationCreateWithoutUserInput, NotificationUncheckedCreateWithoutUserInput>
  }

  export type NotificationCreateManyUserInputEnvelope = {
    data: NotificationCreateManyUserInput | NotificationCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type UserRegionCreateWithoutUserInput = {
    id?: string
    regionCode: string
    activeSubRegions?: JsonNullValueInput | InputJsonValue
    planType: $Enums.TariffType
    paidUntil?: Date | string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    region: RegionCreateNestedOneWithoutUserRegionsInput
  }

  export type UserRegionUncheckedCreateWithoutUserInput = {
    id?: string
    regionId: string
    regionCode: string
    activeSubRegions?: JsonNullValueInput | InputJsonValue
    planType: $Enums.TariffType
    paidUntil?: Date | string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserRegionCreateOrConnectWithoutUserInput = {
    where: UserRegionWhereUniqueInput
    create: XOR<UserRegionCreateWithoutUserInput, UserRegionUncheckedCreateWithoutUserInput>
  }

  export type UserRegionCreateManyUserInputEnvelope = {
    data: UserRegionCreateManyUserInput | UserRegionCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type AdminActionCreateWithoutAdminInput = {
    id?: string
    type: $Enums.AdminActionType
    targetId?: string | null
    targetType?: string | null
    description: string
    comment?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    ipAddress?: string | null
    userAgent?: string | null
    clientType?: $Enums.ClientType | null
    createdAt?: Date | string
  }

  export type AdminActionUncheckedCreateWithoutAdminInput = {
    id?: string
    type: $Enums.AdminActionType
    targetId?: string | null
    targetType?: string | null
    description: string
    comment?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    ipAddress?: string | null
    userAgent?: string | null
    clientType?: $Enums.ClientType | null
    createdAt?: Date | string
  }

  export type AdminActionCreateOrConnectWithoutAdminInput = {
    where: AdminActionWhereUniqueInput
    create: XOR<AdminActionCreateWithoutAdminInput, AdminActionUncheckedCreateWithoutAdminInput>
  }

  export type AdminActionCreateManyAdminInputEnvelope = {
    data: AdminActionCreateManyAdminInput | AdminActionCreateManyAdminInput[]
    skipDuplicates?: boolean
  }

  export type BroadcastCreateWithoutAdminInput = {
    id?: string
    title: string
    message: string
    imageUrl?: string | null
    actionUrl?: string | null
    target: $Enums.BroadcastTarget
    sendToBot?: boolean
    sendToWebApp?: boolean
    status?: $Enums.BroadcastStatus
    scheduledFor?: Date | string | null
    totalRecipients?: number
    sentCount?: number
    deliveredCount?: number
    readCount?: number
    clickCount?: number
    failedCount?: number
    errorMessage?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    targetRegion?: RegionCreateNestedOneWithoutBroadcastsInput
  }

  export type BroadcastUncheckedCreateWithoutAdminInput = {
    id?: string
    title: string
    message: string
    imageUrl?: string | null
    actionUrl?: string | null
    target: $Enums.BroadcastTarget
    targetRegionId?: string | null
    sendToBot?: boolean
    sendToWebApp?: boolean
    status?: $Enums.BroadcastStatus
    scheduledFor?: Date | string | null
    totalRecipients?: number
    sentCount?: number
    deliveredCount?: number
    readCount?: number
    clickCount?: number
    failedCount?: number
    errorMessage?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type BroadcastCreateOrConnectWithoutAdminInput = {
    where: BroadcastWhereUniqueInput
    create: XOR<BroadcastCreateWithoutAdminInput, BroadcastUncheckedCreateWithoutAdminInput>
  }

  export type BroadcastCreateManyAdminInputEnvelope = {
    data: BroadcastCreateManyAdminInput | BroadcastCreateManyAdminInput[]
    skipDuplicates?: boolean
  }

  export type PaymentTransactionCreateWithoutUserInput = {
    id?: string
    orderId?: string | null
    type: string
    amount: Decimal | DecimalJsLike | number | string
    description: string
    status: string
    paymentMethod?: string | null
    externalId?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PaymentTransactionUncheckedCreateWithoutUserInput = {
    id?: string
    orderId?: string | null
    type: string
    amount: Decimal | DecimalJsLike | number | string
    description: string
    status: string
    paymentMethod?: string | null
    externalId?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PaymentTransactionCreateOrConnectWithoutUserInput = {
    where: PaymentTransactionWhereUniqueInput
    create: XOR<PaymentTransactionCreateWithoutUserInput, PaymentTransactionUncheckedCreateWithoutUserInput>
  }

  export type PaymentTransactionCreateManyUserInputEnvelope = {
    data: PaymentTransactionCreateManyUserInput | PaymentTransactionCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithWhereUniqueWithoutReferrerInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutReferrerInput, UserUncheckedUpdateWithoutReferrerInput>
    create: XOR<UserCreateWithoutReferrerInput, UserUncheckedCreateWithoutReferrerInput>
  }

  export type UserUpdateWithWhereUniqueWithoutReferrerInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutReferrerInput, UserUncheckedUpdateWithoutReferrerInput>
  }

  export type UserUpdateManyWithWhereWithoutReferrerInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutReferrerInput>
  }

  export type UserScalarWhereInput = {
    AND?: UserScalarWhereInput | UserScalarWhereInput[]
    OR?: UserScalarWhereInput[]
    NOT?: UserScalarWhereInput | UserScalarWhereInput[]
    id?: StringFilter<"User"> | string
    telegramId?: BigIntFilter<"User"> | bigint | number
    username?: StringNullableFilter<"User"> | string | null
    firstName?: StringFilter<"User"> | string
    lastName?: StringNullableFilter<"User"> | string | null
    phone?: StringNullableFilter<"User"> | string | null
    email?: StringNullableFilter<"User"> | string | null
    role?: EnumRoleTypeFilter<"User"> | $Enums.RoleType
    balance?: DecimalFilter<"User"> | Decimal | DecimalJsLike | number | string
    frozenBalance?: DecimalFilter<"User"> | Decimal | DecimalJsLike | number | string
    totalEarned?: DecimalFilter<"User"> | Decimal | DecimalJsLike | number | string
    orderLimit?: IntFilter<"User"> | number
    createLimit?: IntFilter<"User"> | number
    completedOrders?: IntFilter<"User"> | number
    cancelledOrders?: IntFilter<"User"> | number
    averageRating?: DecimalFilter<"User"> | Decimal | DecimalJsLike | number | string
    totalReviews?: IntFilter<"User"> | number
    hasActivePlan?: BoolFilter<"User"> | boolean
    planExpiresAt?: DateTimeNullableFilter<"User"> | Date | string | null
    referralCode?: StringNullableFilter<"User"> | string | null
    referredById?: StringNullableFilter<"User"> | string | null
    isActive?: BoolFilter<"User"> | boolean
    isBanned?: BoolFilter<"User"> | boolean
    banReason?: StringNullableFilter<"User"> | string | null
    lastSeenAt?: DateTimeNullableFilter<"User"> | Date | string | null
    notificationsEnabled?: BoolFilter<"User"> | boolean
    emailNotifications?: BoolFilter<"User"> | boolean
    activityLog?: JsonFilter<"User">
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
  }

  export type UserUpsertWithoutReferredUsersInput = {
    update: XOR<UserUpdateWithoutReferredUsersInput, UserUncheckedUpdateWithoutReferredUsersInput>
    create: XOR<UserCreateWithoutReferredUsersInput, UserUncheckedCreateWithoutReferredUsersInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutReferredUsersInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutReferredUsersInput, UserUncheckedUpdateWithoutReferredUsersInput>
  }

  export type UserUpdateWithoutReferredUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    telegramId?: BigIntFieldUpdateOperationsInput | bigint | number
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleTypeFieldUpdateOperationsInput | $Enums.RoleType
    balance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    frozenBalance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalEarned?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    orderLimit?: IntFieldUpdateOperationsInput | number
    createLimit?: IntFieldUpdateOperationsInput | number
    completedOrders?: IntFieldUpdateOperationsInput | number
    cancelledOrders?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalReviews?: IntFieldUpdateOperationsInput | number
    hasActivePlan?: BoolFieldUpdateOperationsInput | boolean
    planExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    referralCode?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    lastSeenAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notificationsEnabled?: BoolFieldUpdateOperationsInput | boolean
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    referrer?: UserUpdateOneWithoutReferredUsersNestedInput
    vehicles?: UserVehicleUpdateManyWithoutUserNestedInput
    ordersAsCustomer?: OrderUpdateManyWithoutCustomerNestedInput
    ordersAsExecutor?: OrderUpdateManyWithoutExecutorNestedInput
    orderResponses?: OrderResponseUpdateManyWithoutExecutorNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    userRegions?: UserRegionUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUpdateManyWithoutAdminNestedInput
    broadcasts?: BroadcastUpdateManyWithoutAdminNestedInput
    paymentTransactions?: PaymentTransactionUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutReferredUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    telegramId?: BigIntFieldUpdateOperationsInput | bigint | number
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleTypeFieldUpdateOperationsInput | $Enums.RoleType
    balance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    frozenBalance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalEarned?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    orderLimit?: IntFieldUpdateOperationsInput | number
    createLimit?: IntFieldUpdateOperationsInput | number
    completedOrders?: IntFieldUpdateOperationsInput | number
    cancelledOrders?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalReviews?: IntFieldUpdateOperationsInput | number
    hasActivePlan?: BoolFieldUpdateOperationsInput | boolean
    planExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    referralCode?: NullableStringFieldUpdateOperationsInput | string | null
    referredById?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    lastSeenAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notificationsEnabled?: BoolFieldUpdateOperationsInput | boolean
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    vehicles?: UserVehicleUncheckedUpdateManyWithoutUserNestedInput
    ordersAsCustomer?: OrderUncheckedUpdateManyWithoutCustomerNestedInput
    ordersAsExecutor?: OrderUncheckedUpdateManyWithoutExecutorNestedInput
    orderResponses?: OrderResponseUncheckedUpdateManyWithoutExecutorNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    userRegions?: UserRegionUncheckedUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUncheckedUpdateManyWithoutAdminNestedInput
    broadcasts?: BroadcastUncheckedUpdateManyWithoutAdminNestedInput
    paymentTransactions?: PaymentTransactionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserVehicleUpsertWithWhereUniqueWithoutUserInput = {
    where: UserVehicleWhereUniqueInput
    update: XOR<UserVehicleUpdateWithoutUserInput, UserVehicleUncheckedUpdateWithoutUserInput>
    create: XOR<UserVehicleCreateWithoutUserInput, UserVehicleUncheckedCreateWithoutUserInput>
  }

  export type UserVehicleUpdateWithWhereUniqueWithoutUserInput = {
    where: UserVehicleWhereUniqueInput
    data: XOR<UserVehicleUpdateWithoutUserInput, UserVehicleUncheckedUpdateWithoutUserInput>
  }

  export type UserVehicleUpdateManyWithWhereWithoutUserInput = {
    where: UserVehicleScalarWhereInput
    data: XOR<UserVehicleUpdateManyMutationInput, UserVehicleUncheckedUpdateManyWithoutUserInput>
  }

  export type UserVehicleScalarWhereInput = {
    AND?: UserVehicleScalarWhereInput | UserVehicleScalarWhereInput[]
    OR?: UserVehicleScalarWhereInput[]
    NOT?: UserVehicleScalarWhereInput | UserVehicleScalarWhereInput[]
    id?: StringFilter<"UserVehicle"> | string
    userId?: StringFilter<"UserVehicle"> | string
    subtypeId?: StringFilter<"UserVehicle"> | string
    brand?: StringNullableFilter<"UserVehicle"> | string | null
    model?: StringNullableFilter<"UserVehicle"> | string | null
    year?: IntNullableFilter<"UserVehicle"> | number | null
    licensePlate?: StringNullableFilter<"UserVehicle"> | string | null
    color?: StringNullableFilter<"UserVehicle"> | string | null
    loadCapacity?: DecimalNullableFilter<"UserVehicle"> | Decimal | DecimalJsLike | number | string | null
    volumeCapacity?: DecimalNullableFilter<"UserVehicle"> | Decimal | DecimalJsLike | number | string | null
    hasRefrigerator?: BoolFilter<"UserVehicle"> | boolean
    hasLifting?: BoolFilter<"UserVehicle"> | boolean
    canCarryFragile?: BoolFilter<"UserVehicle"> | boolean
    photos?: JsonFilter<"UserVehicle">
    documents?: JsonFilter<"UserVehicle">
    isActive?: BoolFilter<"UserVehicle"> | boolean
    isVerified?: BoolFilter<"UserVehicle"> | boolean
    createdAt?: DateTimeFilter<"UserVehicle"> | Date | string
    updatedAt?: DateTimeFilter<"UserVehicle"> | Date | string
  }

  export type OrderUpsertWithWhereUniqueWithoutCustomerInput = {
    where: OrderWhereUniqueInput
    update: XOR<OrderUpdateWithoutCustomerInput, OrderUncheckedUpdateWithoutCustomerInput>
    create: XOR<OrderCreateWithoutCustomerInput, OrderUncheckedCreateWithoutCustomerInput>
  }

  export type OrderUpdateWithWhereUniqueWithoutCustomerInput = {
    where: OrderWhereUniqueInput
    data: XOR<OrderUpdateWithoutCustomerInput, OrderUncheckedUpdateWithoutCustomerInput>
  }

  export type OrderUpdateManyWithWhereWithoutCustomerInput = {
    where: OrderScalarWhereInput
    data: XOR<OrderUpdateManyMutationInput, OrderUncheckedUpdateManyWithoutCustomerInput>
  }

  export type OrderScalarWhereInput = {
    AND?: OrderScalarWhereInput | OrderScalarWhereInput[]
    OR?: OrderScalarWhereInput[]
    NOT?: OrderScalarWhereInput | OrderScalarWhereInput[]
    id?: StringFilter<"Order"> | string
    orderNumber?: StringFilter<"Order"> | string
    customerId?: StringFilter<"Order"> | string
    executorId?: StringNullableFilter<"Order"> | string | null
    regionId?: StringFilter<"Order"> | string
    vehicleSubtypeId?: StringNullableFilter<"Order"> | string | null
    type?: EnumOrderTypeFilter<"Order"> | $Enums.OrderType
    title?: StringFilter<"Order"> | string
    description?: StringFilter<"Order"> | string
    pickupAddress?: StringNullableFilter<"Order"> | string | null
    deliveryAddress?: StringNullableFilter<"Order"> | string | null
    workAddress?: StringNullableFilter<"Order"> | string | null
    pickupLatitude?: DecimalNullableFilter<"Order"> | Decimal | DecimalJsLike | number | string | null
    pickupLongitude?: DecimalNullableFilter<"Order"> | Decimal | DecimalJsLike | number | string | null
    deliveryLatitude?: DecimalNullableFilter<"Order"> | Decimal | DecimalJsLike | number | string | null
    deliveryLongitude?: DecimalNullableFilter<"Order"> | Decimal | DecimalJsLike | number | string | null
    regionCode?: StringFilter<"Order"> | string
    subRegion?: StringNullableFilter<"Order"> | string | null
    scheduledDate?: DateTimeNullableFilter<"Order"> | Date | string | null
    scheduledTime?: StringNullableFilter<"Order"> | string | null
    deadlineDate?: DateTimeNullableFilter<"Order"> | Date | string | null
    isUrgent?: BoolFilter<"Order"> | boolean
    budgetFrom?: DecimalNullableFilter<"Order"> | Decimal | DecimalJsLike | number | string | null
    budgetTo?: DecimalNullableFilter<"Order"> | Decimal | DecimalJsLike | number | string | null
    proposedPrice?: DecimalNullableFilter<"Order"> | Decimal | DecimalJsLike | number | string | null
    agreedPrice?: DecimalNullableFilter<"Order"> | Decimal | DecimalJsLike | number | string | null
    isPriceFixed?: BoolFilter<"Order"> | boolean
    cargoWeight?: DecimalNullableFilter<"Order"> | Decimal | DecimalJsLike | number | string | null
    cargoVolume?: DecimalNullableFilter<"Order"> | Decimal | DecimalJsLike | number | string | null
    cargoDescription?: StringNullableFilter<"Order"> | string | null
    estimatedDistance?: DecimalNullableFilter<"Order"> | Decimal | DecimalJsLike | number | string | null
    needsRefrigerator?: BoolFilter<"Order"> | boolean
    needsLifting?: BoolFilter<"Order"> | boolean
    isFragile?: BoolFilter<"Order"> | boolean
    passengerCount?: IntNullableFilter<"Order"> | number | null
    requirements?: StringNullableFilter<"Order"> | string | null
    customerComment?: StringNullableFilter<"Order"> | string | null
    executorComment?: StringNullableFilter<"Order"> | string | null
    status?: EnumOrderStatusFilter<"Order"> | $Enums.OrderStatus
    moderationComment?: StringNullableFilter<"Order"> | string | null
    moderatedAt?: DateTimeNullableFilter<"Order"> | Date | string | null
    moderatedById?: StringNullableFilter<"Order"> | string | null
    isSentToExecutors?: BoolFilter<"Order"> | boolean
    sentToAllRegions?: BoolFilter<"Order"> | boolean
    viewsCount?: IntFilter<"Order"> | number
    responsesCount?: IntFilter<"Order"> | number
    contactPhone?: StringNullableFilter<"Order"> | string | null
    contactName?: StringNullableFilter<"Order"> | string | null
    photos?: JsonFilter<"Order">
    documents?: JsonFilter<"Order">
    activityLog?: JsonFilter<"Order">
    createdAt?: DateTimeFilter<"Order"> | Date | string
    updatedAt?: DateTimeFilter<"Order"> | Date | string
  }

  export type OrderUpsertWithWhereUniqueWithoutExecutorInput = {
    where: OrderWhereUniqueInput
    update: XOR<OrderUpdateWithoutExecutorInput, OrderUncheckedUpdateWithoutExecutorInput>
    create: XOR<OrderCreateWithoutExecutorInput, OrderUncheckedCreateWithoutExecutorInput>
  }

  export type OrderUpdateWithWhereUniqueWithoutExecutorInput = {
    where: OrderWhereUniqueInput
    data: XOR<OrderUpdateWithoutExecutorInput, OrderUncheckedUpdateWithoutExecutorInput>
  }

  export type OrderUpdateManyWithWhereWithoutExecutorInput = {
    where: OrderScalarWhereInput
    data: XOR<OrderUpdateManyMutationInput, OrderUncheckedUpdateManyWithoutExecutorInput>
  }

  export type OrderResponseUpsertWithWhereUniqueWithoutExecutorInput = {
    where: OrderResponseWhereUniqueInput
    update: XOR<OrderResponseUpdateWithoutExecutorInput, OrderResponseUncheckedUpdateWithoutExecutorInput>
    create: XOR<OrderResponseCreateWithoutExecutorInput, OrderResponseUncheckedCreateWithoutExecutorInput>
  }

  export type OrderResponseUpdateWithWhereUniqueWithoutExecutorInput = {
    where: OrderResponseWhereUniqueInput
    data: XOR<OrderResponseUpdateWithoutExecutorInput, OrderResponseUncheckedUpdateWithoutExecutorInput>
  }

  export type OrderResponseUpdateManyWithWhereWithoutExecutorInput = {
    where: OrderResponseScalarWhereInput
    data: XOR<OrderResponseUpdateManyMutationInput, OrderResponseUncheckedUpdateManyWithoutExecutorInput>
  }

  export type OrderResponseScalarWhereInput = {
    AND?: OrderResponseScalarWhereInput | OrderResponseScalarWhereInput[]
    OR?: OrderResponseScalarWhereInput[]
    NOT?: OrderResponseScalarWhereInput | OrderResponseScalarWhereInput[]
    id?: StringFilter<"OrderResponse"> | string
    orderId?: StringFilter<"OrderResponse"> | string
    executorId?: StringFilter<"OrderResponse"> | string
    proposedPrice?: DecimalNullableFilter<"OrderResponse"> | Decimal | DecimalJsLike | number | string | null
    comment?: StringNullableFilter<"OrderResponse"> | string | null
    estimatedDuration?: StringNullableFilter<"OrderResponse"> | string | null
    status?: StringFilter<"OrderResponse"> | string
    vehiclePhotos?: JsonFilter<"OrderResponse">
    createdAt?: DateTimeFilter<"OrderResponse"> | Date | string
    updatedAt?: DateTimeFilter<"OrderResponse"> | Date | string
  }

  export type PaymentUpsertWithWhereUniqueWithoutUserInput = {
    where: PaymentWhereUniqueInput
    update: XOR<PaymentUpdateWithoutUserInput, PaymentUncheckedUpdateWithoutUserInput>
    create: XOR<PaymentCreateWithoutUserInput, PaymentUncheckedCreateWithoutUserInput>
  }

  export type PaymentUpdateWithWhereUniqueWithoutUserInput = {
    where: PaymentWhereUniqueInput
    data: XOR<PaymentUpdateWithoutUserInput, PaymentUncheckedUpdateWithoutUserInput>
  }

  export type PaymentUpdateManyWithWhereWithoutUserInput = {
    where: PaymentScalarWhereInput
    data: XOR<PaymentUpdateManyMutationInput, PaymentUncheckedUpdateManyWithoutUserInput>
  }

  export type PaymentScalarWhereInput = {
    AND?: PaymentScalarWhereInput | PaymentScalarWhereInput[]
    OR?: PaymentScalarWhereInput[]
    NOT?: PaymentScalarWhereInput | PaymentScalarWhereInput[]
    id?: StringFilter<"Payment"> | string
    userId?: StringFilter<"Payment"> | string
    tinkoffPaymentId?: StringNullableFilter<"Payment"> | string | null
    tinkoffStatus?: StringNullableFilter<"Payment"> | string | null
    amount?: DecimalFilter<"Payment"> | Decimal | DecimalJsLike | number | string
    description?: StringFilter<"Payment"> | string
    status?: EnumPaymentStatusFilter<"Payment"> | $Enums.PaymentStatus
    metadata?: JsonNullableFilter<"Payment">
    paidAt?: DateTimeNullableFilter<"Payment"> | Date | string | null
    expiresAt?: DateTimeNullableFilter<"Payment"> | Date | string | null
    createdAt?: DateTimeFilter<"Payment"> | Date | string
    updatedAt?: DateTimeFilter<"Payment"> | Date | string
  }

  export type SessionUpsertWithWhereUniqueWithoutUserInput = {
    where: SessionWhereUniqueInput
    update: XOR<SessionUpdateWithoutUserInput, SessionUncheckedUpdateWithoutUserInput>
    create: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput>
  }

  export type SessionUpdateWithWhereUniqueWithoutUserInput = {
    where: SessionWhereUniqueInput
    data: XOR<SessionUpdateWithoutUserInput, SessionUncheckedUpdateWithoutUserInput>
  }

  export type SessionUpdateManyWithWhereWithoutUserInput = {
    where: SessionScalarWhereInput
    data: XOR<SessionUpdateManyMutationInput, SessionUncheckedUpdateManyWithoutUserInput>
  }

  export type SessionScalarWhereInput = {
    AND?: SessionScalarWhereInput | SessionScalarWhereInput[]
    OR?: SessionScalarWhereInput[]
    NOT?: SessionScalarWhereInput | SessionScalarWhereInput[]
    id?: StringFilter<"Session"> | string
    userId?: StringFilter<"Session"> | string
    clientType?: EnumClientTypeFilter<"Session"> | $Enums.ClientType
    chatId?: BigIntNullableFilter<"Session"> | bigint | number | null
    webAppInitData?: StringNullableFilter<"Session"> | string | null
    userAgent?: StringNullableFilter<"Session"> | string | null
    ipAddress?: StringNullableFilter<"Session"> | string | null
    currentState?: StringNullableFilter<"Session"> | string | null
    contextData?: JsonNullableFilter<"Session">
    lastActivity?: DateTimeFilter<"Session"> | Date | string
    expiresAt?: DateTimeFilter<"Session"> | Date | string
    status?: EnumSessionStatusFilter<"Session"> | $Enums.SessionStatus
    deviceInfo?: JsonNullableFilter<"Session">
    timezone?: StringNullableFilter<"Session"> | string | null
    language?: StringNullableFilter<"Session"> | string | null
    createdAt?: DateTimeFilter<"Session"> | Date | string
    updatedAt?: DateTimeFilter<"Session"> | Date | string
  }

  export type NotificationUpsertWithWhereUniqueWithoutUserInput = {
    where: NotificationWhereUniqueInput
    update: XOR<NotificationUpdateWithoutUserInput, NotificationUncheckedUpdateWithoutUserInput>
    create: XOR<NotificationCreateWithoutUserInput, NotificationUncheckedCreateWithoutUserInput>
  }

  export type NotificationUpdateWithWhereUniqueWithoutUserInput = {
    where: NotificationWhereUniqueInput
    data: XOR<NotificationUpdateWithoutUserInput, NotificationUncheckedUpdateWithoutUserInput>
  }

  export type NotificationUpdateManyWithWhereWithoutUserInput = {
    where: NotificationScalarWhereInput
    data: XOR<NotificationUpdateManyMutationInput, NotificationUncheckedUpdateManyWithoutUserInput>
  }

  export type NotificationScalarWhereInput = {
    AND?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
    OR?: NotificationScalarWhereInput[]
    NOT?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
    id?: StringFilter<"Notification"> | string
    userId?: StringFilter<"Notification"> | string
    title?: StringFilter<"Notification"> | string
    message?: StringFilter<"Notification"> | string
    type?: StringFilter<"Notification"> | string
    sendToTelegram?: BoolFilter<"Notification"> | boolean
    sendToEmail?: BoolFilter<"Notification"> | boolean
    sendToWebApp?: BoolFilter<"Notification"> | boolean
    isRead?: BoolFilter<"Notification"> | boolean
    isDelivered?: BoolFilter<"Notification"> | boolean
    scheduledFor?: DateTimeNullableFilter<"Notification"> | Date | string | null
    sentAt?: DateTimeNullableFilter<"Notification"> | Date | string | null
    iconUrl?: StringNullableFilter<"Notification"> | string | null
    actionUrl?: StringNullableFilter<"Notification"> | string | null
    metadata?: JsonNullableFilter<"Notification">
    createdAt?: DateTimeFilter<"Notification"> | Date | string
    updatedAt?: DateTimeFilter<"Notification"> | Date | string
  }

  export type UserRegionUpsertWithWhereUniqueWithoutUserInput = {
    where: UserRegionWhereUniqueInput
    update: XOR<UserRegionUpdateWithoutUserInput, UserRegionUncheckedUpdateWithoutUserInput>
    create: XOR<UserRegionCreateWithoutUserInput, UserRegionUncheckedCreateWithoutUserInput>
  }

  export type UserRegionUpdateWithWhereUniqueWithoutUserInput = {
    where: UserRegionWhereUniqueInput
    data: XOR<UserRegionUpdateWithoutUserInput, UserRegionUncheckedUpdateWithoutUserInput>
  }

  export type UserRegionUpdateManyWithWhereWithoutUserInput = {
    where: UserRegionScalarWhereInput
    data: XOR<UserRegionUpdateManyMutationInput, UserRegionUncheckedUpdateManyWithoutUserInput>
  }

  export type UserRegionScalarWhereInput = {
    AND?: UserRegionScalarWhereInput | UserRegionScalarWhereInput[]
    OR?: UserRegionScalarWhereInput[]
    NOT?: UserRegionScalarWhereInput | UserRegionScalarWhereInput[]
    id?: StringFilter<"UserRegion"> | string
    userId?: StringFilter<"UserRegion"> | string
    regionId?: StringFilter<"UserRegion"> | string
    regionCode?: StringFilter<"UserRegion"> | string
    activeSubRegions?: JsonFilter<"UserRegion">
    planType?: EnumTariffTypeFilter<"UserRegion"> | $Enums.TariffType
    paidUntil?: DateTimeNullableFilter<"UserRegion"> | Date | string | null
    isActive?: BoolFilter<"UserRegion"> | boolean
    createdAt?: DateTimeFilter<"UserRegion"> | Date | string
    updatedAt?: DateTimeFilter<"UserRegion"> | Date | string
  }

  export type AdminActionUpsertWithWhereUniqueWithoutAdminInput = {
    where: AdminActionWhereUniqueInput
    update: XOR<AdminActionUpdateWithoutAdminInput, AdminActionUncheckedUpdateWithoutAdminInput>
    create: XOR<AdminActionCreateWithoutAdminInput, AdminActionUncheckedCreateWithoutAdminInput>
  }

  export type AdminActionUpdateWithWhereUniqueWithoutAdminInput = {
    where: AdminActionWhereUniqueInput
    data: XOR<AdminActionUpdateWithoutAdminInput, AdminActionUncheckedUpdateWithoutAdminInput>
  }

  export type AdminActionUpdateManyWithWhereWithoutAdminInput = {
    where: AdminActionScalarWhereInput
    data: XOR<AdminActionUpdateManyMutationInput, AdminActionUncheckedUpdateManyWithoutAdminInput>
  }

  export type AdminActionScalarWhereInput = {
    AND?: AdminActionScalarWhereInput | AdminActionScalarWhereInput[]
    OR?: AdminActionScalarWhereInput[]
    NOT?: AdminActionScalarWhereInput | AdminActionScalarWhereInput[]
    id?: StringFilter<"AdminAction"> | string
    adminId?: StringFilter<"AdminAction"> | string
    type?: EnumAdminActionTypeFilter<"AdminAction"> | $Enums.AdminActionType
    targetId?: StringNullableFilter<"AdminAction"> | string | null
    targetType?: StringNullableFilter<"AdminAction"> | string | null
    description?: StringFilter<"AdminAction"> | string
    comment?: StringNullableFilter<"AdminAction"> | string | null
    metadata?: JsonNullableFilter<"AdminAction">
    ipAddress?: StringNullableFilter<"AdminAction"> | string | null
    userAgent?: StringNullableFilter<"AdminAction"> | string | null
    clientType?: EnumClientTypeNullableFilter<"AdminAction"> | $Enums.ClientType | null
    createdAt?: DateTimeFilter<"AdminAction"> | Date | string
  }

  export type BroadcastUpsertWithWhereUniqueWithoutAdminInput = {
    where: BroadcastWhereUniqueInput
    update: XOR<BroadcastUpdateWithoutAdminInput, BroadcastUncheckedUpdateWithoutAdminInput>
    create: XOR<BroadcastCreateWithoutAdminInput, BroadcastUncheckedCreateWithoutAdminInput>
  }

  export type BroadcastUpdateWithWhereUniqueWithoutAdminInput = {
    where: BroadcastWhereUniqueInput
    data: XOR<BroadcastUpdateWithoutAdminInput, BroadcastUncheckedUpdateWithoutAdminInput>
  }

  export type BroadcastUpdateManyWithWhereWithoutAdminInput = {
    where: BroadcastScalarWhereInput
    data: XOR<BroadcastUpdateManyMutationInput, BroadcastUncheckedUpdateManyWithoutAdminInput>
  }

  export type BroadcastScalarWhereInput = {
    AND?: BroadcastScalarWhereInput | BroadcastScalarWhereInput[]
    OR?: BroadcastScalarWhereInput[]
    NOT?: BroadcastScalarWhereInput | BroadcastScalarWhereInput[]
    id?: StringFilter<"Broadcast"> | string
    adminId?: StringFilter<"Broadcast"> | string
    title?: StringFilter<"Broadcast"> | string
    message?: StringFilter<"Broadcast"> | string
    imageUrl?: StringNullableFilter<"Broadcast"> | string | null
    actionUrl?: StringNullableFilter<"Broadcast"> | string | null
    target?: EnumBroadcastTargetFilter<"Broadcast"> | $Enums.BroadcastTarget
    targetRegionId?: StringNullableFilter<"Broadcast"> | string | null
    sendToBot?: BoolFilter<"Broadcast"> | boolean
    sendToWebApp?: BoolFilter<"Broadcast"> | boolean
    status?: EnumBroadcastStatusFilter<"Broadcast"> | $Enums.BroadcastStatus
    scheduledFor?: DateTimeNullableFilter<"Broadcast"> | Date | string | null
    totalRecipients?: IntFilter<"Broadcast"> | number
    sentCount?: IntFilter<"Broadcast"> | number
    deliveredCount?: IntFilter<"Broadcast"> | number
    readCount?: IntFilter<"Broadcast"> | number
    clickCount?: IntFilter<"Broadcast"> | number
    failedCount?: IntFilter<"Broadcast"> | number
    errorMessage?: StringNullableFilter<"Broadcast"> | string | null
    createdAt?: DateTimeFilter<"Broadcast"> | Date | string
    updatedAt?: DateTimeFilter<"Broadcast"> | Date | string
  }

  export type PaymentTransactionUpsertWithWhereUniqueWithoutUserInput = {
    where: PaymentTransactionWhereUniqueInput
    update: XOR<PaymentTransactionUpdateWithoutUserInput, PaymentTransactionUncheckedUpdateWithoutUserInput>
    create: XOR<PaymentTransactionCreateWithoutUserInput, PaymentTransactionUncheckedCreateWithoutUserInput>
  }

  export type PaymentTransactionUpdateWithWhereUniqueWithoutUserInput = {
    where: PaymentTransactionWhereUniqueInput
    data: XOR<PaymentTransactionUpdateWithoutUserInput, PaymentTransactionUncheckedUpdateWithoutUserInput>
  }

  export type PaymentTransactionUpdateManyWithWhereWithoutUserInput = {
    where: PaymentTransactionScalarWhereInput
    data: XOR<PaymentTransactionUpdateManyMutationInput, PaymentTransactionUncheckedUpdateManyWithoutUserInput>
  }

  export type PaymentTransactionScalarWhereInput = {
    AND?: PaymentTransactionScalarWhereInput | PaymentTransactionScalarWhereInput[]
    OR?: PaymentTransactionScalarWhereInput[]
    NOT?: PaymentTransactionScalarWhereInput | PaymentTransactionScalarWhereInput[]
    id?: StringFilter<"PaymentTransaction"> | string
    userId?: StringFilter<"PaymentTransaction"> | string
    orderId?: StringNullableFilter<"PaymentTransaction"> | string | null
    type?: StringFilter<"PaymentTransaction"> | string
    amount?: DecimalFilter<"PaymentTransaction"> | Decimal | DecimalJsLike | number | string
    description?: StringFilter<"PaymentTransaction"> | string
    status?: StringFilter<"PaymentTransaction"> | string
    paymentMethod?: StringNullableFilter<"PaymentTransaction"> | string | null
    externalId?: StringNullableFilter<"PaymentTransaction"> | string | null
    metadata?: JsonNullableFilter<"PaymentTransaction">
    createdAt?: DateTimeFilter<"PaymentTransaction"> | Date | string
    updatedAt?: DateTimeFilter<"PaymentTransaction"> | Date | string
  }

  export type OrderCreateWithoutRegionInput = {
    id?: string
    orderNumber: string
    type: $Enums.OrderType
    title: string
    description: string
    pickupAddress?: string | null
    deliveryAddress?: string | null
    workAddress?: string | null
    pickupLatitude?: Decimal | DecimalJsLike | number | string | null
    pickupLongitude?: Decimal | DecimalJsLike | number | string | null
    deliveryLatitude?: Decimal | DecimalJsLike | number | string | null
    deliveryLongitude?: Decimal | DecimalJsLike | number | string | null
    regionCode: string
    subRegion?: string | null
    scheduledDate?: Date | string | null
    scheduledTime?: string | null
    deadlineDate?: Date | string | null
    isUrgent?: boolean
    budgetFrom?: Decimal | DecimalJsLike | number | string | null
    budgetTo?: Decimal | DecimalJsLike | number | string | null
    proposedPrice?: Decimal | DecimalJsLike | number | string | null
    agreedPrice?: Decimal | DecimalJsLike | number | string | null
    isPriceFixed?: boolean
    cargoWeight?: Decimal | DecimalJsLike | number | string | null
    cargoVolume?: Decimal | DecimalJsLike | number | string | null
    cargoDescription?: string | null
    estimatedDistance?: Decimal | DecimalJsLike | number | string | null
    needsRefrigerator?: boolean
    needsLifting?: boolean
    isFragile?: boolean
    passengerCount?: number | null
    requirements?: string | null
    customerComment?: string | null
    executorComment?: string | null
    status?: $Enums.OrderStatus
    moderationComment?: string | null
    moderatedAt?: Date | string | null
    moderatedById?: string | null
    isSentToExecutors?: boolean
    sentToAllRegions?: boolean
    viewsCount?: number
    responsesCount?: number
    contactPhone?: string | null
    contactName?: string | null
    photos?: JsonNullValueInput | InputJsonValue
    documents?: JsonNullValueInput | InputJsonValue
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    customer: UserCreateNestedOneWithoutOrdersAsCustomerInput
    executor?: UserCreateNestedOneWithoutOrdersAsExecutorInput
    vehicleSubtype?: VehicleSubtypeCreateNestedOneWithoutOrdersInput
    responses?: OrderResponseCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutRegionInput = {
    id?: string
    orderNumber: string
    customerId: string
    executorId?: string | null
    vehicleSubtypeId?: string | null
    type: $Enums.OrderType
    title: string
    description: string
    pickupAddress?: string | null
    deliveryAddress?: string | null
    workAddress?: string | null
    pickupLatitude?: Decimal | DecimalJsLike | number | string | null
    pickupLongitude?: Decimal | DecimalJsLike | number | string | null
    deliveryLatitude?: Decimal | DecimalJsLike | number | string | null
    deliveryLongitude?: Decimal | DecimalJsLike | number | string | null
    regionCode: string
    subRegion?: string | null
    scheduledDate?: Date | string | null
    scheduledTime?: string | null
    deadlineDate?: Date | string | null
    isUrgent?: boolean
    budgetFrom?: Decimal | DecimalJsLike | number | string | null
    budgetTo?: Decimal | DecimalJsLike | number | string | null
    proposedPrice?: Decimal | DecimalJsLike | number | string | null
    agreedPrice?: Decimal | DecimalJsLike | number | string | null
    isPriceFixed?: boolean
    cargoWeight?: Decimal | DecimalJsLike | number | string | null
    cargoVolume?: Decimal | DecimalJsLike | number | string | null
    cargoDescription?: string | null
    estimatedDistance?: Decimal | DecimalJsLike | number | string | null
    needsRefrigerator?: boolean
    needsLifting?: boolean
    isFragile?: boolean
    passengerCount?: number | null
    requirements?: string | null
    customerComment?: string | null
    executorComment?: string | null
    status?: $Enums.OrderStatus
    moderationComment?: string | null
    moderatedAt?: Date | string | null
    moderatedById?: string | null
    isSentToExecutors?: boolean
    sentToAllRegions?: boolean
    viewsCount?: number
    responsesCount?: number
    contactPhone?: string | null
    contactName?: string | null
    photos?: JsonNullValueInput | InputJsonValue
    documents?: JsonNullValueInput | InputJsonValue
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    responses?: OrderResponseUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutRegionInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutRegionInput, OrderUncheckedCreateWithoutRegionInput>
  }

  export type OrderCreateManyRegionInputEnvelope = {
    data: OrderCreateManyRegionInput | OrderCreateManyRegionInput[]
    skipDuplicates?: boolean
  }

  export type UserRegionCreateWithoutRegionInput = {
    id?: string
    regionCode: string
    activeSubRegions?: JsonNullValueInput | InputJsonValue
    planType: $Enums.TariffType
    paidUntil?: Date | string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutUserRegionsInput
  }

  export type UserRegionUncheckedCreateWithoutRegionInput = {
    id?: string
    userId: string
    regionCode: string
    activeSubRegions?: JsonNullValueInput | InputJsonValue
    planType: $Enums.TariffType
    paidUntil?: Date | string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserRegionCreateOrConnectWithoutRegionInput = {
    where: UserRegionWhereUniqueInput
    create: XOR<UserRegionCreateWithoutRegionInput, UserRegionUncheckedCreateWithoutRegionInput>
  }

  export type UserRegionCreateManyRegionInputEnvelope = {
    data: UserRegionCreateManyRegionInput | UserRegionCreateManyRegionInput[]
    skipDuplicates?: boolean
  }

  export type BroadcastCreateWithoutTargetRegionInput = {
    id?: string
    title: string
    message: string
    imageUrl?: string | null
    actionUrl?: string | null
    target: $Enums.BroadcastTarget
    sendToBot?: boolean
    sendToWebApp?: boolean
    status?: $Enums.BroadcastStatus
    scheduledFor?: Date | string | null
    totalRecipients?: number
    sentCount?: number
    deliveredCount?: number
    readCount?: number
    clickCount?: number
    failedCount?: number
    errorMessage?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    admin: UserCreateNestedOneWithoutBroadcastsInput
  }

  export type BroadcastUncheckedCreateWithoutTargetRegionInput = {
    id?: string
    adminId: string
    title: string
    message: string
    imageUrl?: string | null
    actionUrl?: string | null
    target: $Enums.BroadcastTarget
    sendToBot?: boolean
    sendToWebApp?: boolean
    status?: $Enums.BroadcastStatus
    scheduledFor?: Date | string | null
    totalRecipients?: number
    sentCount?: number
    deliveredCount?: number
    readCount?: number
    clickCount?: number
    failedCount?: number
    errorMessage?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type BroadcastCreateOrConnectWithoutTargetRegionInput = {
    where: BroadcastWhereUniqueInput
    create: XOR<BroadcastCreateWithoutTargetRegionInput, BroadcastUncheckedCreateWithoutTargetRegionInput>
  }

  export type BroadcastCreateManyTargetRegionInputEnvelope = {
    data: BroadcastCreateManyTargetRegionInput | BroadcastCreateManyTargetRegionInput[]
    skipDuplicates?: boolean
  }

  export type OrderUpsertWithWhereUniqueWithoutRegionInput = {
    where: OrderWhereUniqueInput
    update: XOR<OrderUpdateWithoutRegionInput, OrderUncheckedUpdateWithoutRegionInput>
    create: XOR<OrderCreateWithoutRegionInput, OrderUncheckedCreateWithoutRegionInput>
  }

  export type OrderUpdateWithWhereUniqueWithoutRegionInput = {
    where: OrderWhereUniqueInput
    data: XOR<OrderUpdateWithoutRegionInput, OrderUncheckedUpdateWithoutRegionInput>
  }

  export type OrderUpdateManyWithWhereWithoutRegionInput = {
    where: OrderScalarWhereInput
    data: XOR<OrderUpdateManyMutationInput, OrderUncheckedUpdateManyWithoutRegionInput>
  }

  export type UserRegionUpsertWithWhereUniqueWithoutRegionInput = {
    where: UserRegionWhereUniqueInput
    update: XOR<UserRegionUpdateWithoutRegionInput, UserRegionUncheckedUpdateWithoutRegionInput>
    create: XOR<UserRegionCreateWithoutRegionInput, UserRegionUncheckedCreateWithoutRegionInput>
  }

  export type UserRegionUpdateWithWhereUniqueWithoutRegionInput = {
    where: UserRegionWhereUniqueInput
    data: XOR<UserRegionUpdateWithoutRegionInput, UserRegionUncheckedUpdateWithoutRegionInput>
  }

  export type UserRegionUpdateManyWithWhereWithoutRegionInput = {
    where: UserRegionScalarWhereInput
    data: XOR<UserRegionUpdateManyMutationInput, UserRegionUncheckedUpdateManyWithoutRegionInput>
  }

  export type BroadcastUpsertWithWhereUniqueWithoutTargetRegionInput = {
    where: BroadcastWhereUniqueInput
    update: XOR<BroadcastUpdateWithoutTargetRegionInput, BroadcastUncheckedUpdateWithoutTargetRegionInput>
    create: XOR<BroadcastCreateWithoutTargetRegionInput, BroadcastUncheckedCreateWithoutTargetRegionInput>
  }

  export type BroadcastUpdateWithWhereUniqueWithoutTargetRegionInput = {
    where: BroadcastWhereUniqueInput
    data: XOR<BroadcastUpdateWithoutTargetRegionInput, BroadcastUncheckedUpdateWithoutTargetRegionInput>
  }

  export type BroadcastUpdateManyWithWhereWithoutTargetRegionInput = {
    where: BroadcastScalarWhereInput
    data: XOR<BroadcastUpdateManyMutationInput, BroadcastUncheckedUpdateManyWithoutTargetRegionInput>
  }

  export type UserCreateWithoutUserRegionsInput = {
    id?: string
    telegramId: bigint | number
    username?: string | null
    firstName: string
    lastName?: string | null
    phone?: string | null
    email?: string | null
    role?: $Enums.RoleType
    balance?: Decimal | DecimalJsLike | number | string
    frozenBalance?: Decimal | DecimalJsLike | number | string
    totalEarned?: Decimal | DecimalJsLike | number | string
    orderLimit?: number
    createLimit?: number
    completedOrders?: number
    cancelledOrders?: number
    averageRating?: Decimal | DecimalJsLike | number | string
    totalReviews?: number
    hasActivePlan?: boolean
    planExpiresAt?: Date | string | null
    referralCode?: string | null
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    lastSeenAt?: Date | string | null
    notificationsEnabled?: boolean
    emailNotifications?: boolean
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    referredUsers?: UserCreateNestedManyWithoutReferrerInput
    referrer?: UserCreateNestedOneWithoutReferredUsersInput
    vehicles?: UserVehicleCreateNestedManyWithoutUserInput
    ordersAsCustomer?: OrderCreateNestedManyWithoutCustomerInput
    ordersAsExecutor?: OrderCreateNestedManyWithoutExecutorInput
    orderResponses?: OrderResponseCreateNestedManyWithoutExecutorInput
    payments?: PaymentCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    adminActions?: AdminActionCreateNestedManyWithoutAdminInput
    broadcasts?: BroadcastCreateNestedManyWithoutAdminInput
    paymentTransactions?: PaymentTransactionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutUserRegionsInput = {
    id?: string
    telegramId: bigint | number
    username?: string | null
    firstName: string
    lastName?: string | null
    phone?: string | null
    email?: string | null
    role?: $Enums.RoleType
    balance?: Decimal | DecimalJsLike | number | string
    frozenBalance?: Decimal | DecimalJsLike | number | string
    totalEarned?: Decimal | DecimalJsLike | number | string
    orderLimit?: number
    createLimit?: number
    completedOrders?: number
    cancelledOrders?: number
    averageRating?: Decimal | DecimalJsLike | number | string
    totalReviews?: number
    hasActivePlan?: boolean
    planExpiresAt?: Date | string | null
    referralCode?: string | null
    referredById?: string | null
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    lastSeenAt?: Date | string | null
    notificationsEnabled?: boolean
    emailNotifications?: boolean
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    referredUsers?: UserUncheckedCreateNestedManyWithoutReferrerInput
    vehicles?: UserVehicleUncheckedCreateNestedManyWithoutUserInput
    ordersAsCustomer?: OrderUncheckedCreateNestedManyWithoutCustomerInput
    ordersAsExecutor?: OrderUncheckedCreateNestedManyWithoutExecutorInput
    orderResponses?: OrderResponseUncheckedCreateNestedManyWithoutExecutorInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    adminActions?: AdminActionUncheckedCreateNestedManyWithoutAdminInput
    broadcasts?: BroadcastUncheckedCreateNestedManyWithoutAdminInput
    paymentTransactions?: PaymentTransactionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutUserRegionsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUserRegionsInput, UserUncheckedCreateWithoutUserRegionsInput>
  }

  export type RegionCreateWithoutUserRegionsInput = {
    id?: string
    name: string
    code: string
    regionCode: string
    subRegions?: JsonNullValueInput | InputJsonValue
    centerLatitude?: Decimal | DecimalJsLike | number | string | null
    centerLongitude?: Decimal | DecimalJsLike | number | string | null
    oneTimePlanPrice: Decimal | DecimalJsLike | number | string
    monthlyPlanPrice: Decimal | DecimalJsLike | number | string
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    orders?: OrderCreateNestedManyWithoutRegionInput
    broadcasts?: BroadcastCreateNestedManyWithoutTargetRegionInput
  }

  export type RegionUncheckedCreateWithoutUserRegionsInput = {
    id?: string
    name: string
    code: string
    regionCode: string
    subRegions?: JsonNullValueInput | InputJsonValue
    centerLatitude?: Decimal | DecimalJsLike | number | string | null
    centerLongitude?: Decimal | DecimalJsLike | number | string | null
    oneTimePlanPrice: Decimal | DecimalJsLike | number | string
    monthlyPlanPrice: Decimal | DecimalJsLike | number | string
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    orders?: OrderUncheckedCreateNestedManyWithoutRegionInput
    broadcasts?: BroadcastUncheckedCreateNestedManyWithoutTargetRegionInput
  }

  export type RegionCreateOrConnectWithoutUserRegionsInput = {
    where: RegionWhereUniqueInput
    create: XOR<RegionCreateWithoutUserRegionsInput, RegionUncheckedCreateWithoutUserRegionsInput>
  }

  export type UserUpsertWithoutUserRegionsInput = {
    update: XOR<UserUpdateWithoutUserRegionsInput, UserUncheckedUpdateWithoutUserRegionsInput>
    create: XOR<UserCreateWithoutUserRegionsInput, UserUncheckedCreateWithoutUserRegionsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutUserRegionsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUserRegionsInput, UserUncheckedUpdateWithoutUserRegionsInput>
  }

  export type UserUpdateWithoutUserRegionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    telegramId?: BigIntFieldUpdateOperationsInput | bigint | number
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleTypeFieldUpdateOperationsInput | $Enums.RoleType
    balance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    frozenBalance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalEarned?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    orderLimit?: IntFieldUpdateOperationsInput | number
    createLimit?: IntFieldUpdateOperationsInput | number
    completedOrders?: IntFieldUpdateOperationsInput | number
    cancelledOrders?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalReviews?: IntFieldUpdateOperationsInput | number
    hasActivePlan?: BoolFieldUpdateOperationsInput | boolean
    planExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    referralCode?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    lastSeenAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notificationsEnabled?: BoolFieldUpdateOperationsInput | boolean
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    referredUsers?: UserUpdateManyWithoutReferrerNestedInput
    referrer?: UserUpdateOneWithoutReferredUsersNestedInput
    vehicles?: UserVehicleUpdateManyWithoutUserNestedInput
    ordersAsCustomer?: OrderUpdateManyWithoutCustomerNestedInput
    ordersAsExecutor?: OrderUpdateManyWithoutExecutorNestedInput
    orderResponses?: OrderResponseUpdateManyWithoutExecutorNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUpdateManyWithoutAdminNestedInput
    broadcasts?: BroadcastUpdateManyWithoutAdminNestedInput
    paymentTransactions?: PaymentTransactionUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutUserRegionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    telegramId?: BigIntFieldUpdateOperationsInput | bigint | number
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleTypeFieldUpdateOperationsInput | $Enums.RoleType
    balance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    frozenBalance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalEarned?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    orderLimit?: IntFieldUpdateOperationsInput | number
    createLimit?: IntFieldUpdateOperationsInput | number
    completedOrders?: IntFieldUpdateOperationsInput | number
    cancelledOrders?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalReviews?: IntFieldUpdateOperationsInput | number
    hasActivePlan?: BoolFieldUpdateOperationsInput | boolean
    planExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    referralCode?: NullableStringFieldUpdateOperationsInput | string | null
    referredById?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    lastSeenAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notificationsEnabled?: BoolFieldUpdateOperationsInput | boolean
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    referredUsers?: UserUncheckedUpdateManyWithoutReferrerNestedInput
    vehicles?: UserVehicleUncheckedUpdateManyWithoutUserNestedInput
    ordersAsCustomer?: OrderUncheckedUpdateManyWithoutCustomerNestedInput
    ordersAsExecutor?: OrderUncheckedUpdateManyWithoutExecutorNestedInput
    orderResponses?: OrderResponseUncheckedUpdateManyWithoutExecutorNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUncheckedUpdateManyWithoutAdminNestedInput
    broadcasts?: BroadcastUncheckedUpdateManyWithoutAdminNestedInput
    paymentTransactions?: PaymentTransactionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type RegionUpsertWithoutUserRegionsInput = {
    update: XOR<RegionUpdateWithoutUserRegionsInput, RegionUncheckedUpdateWithoutUserRegionsInput>
    create: XOR<RegionCreateWithoutUserRegionsInput, RegionUncheckedCreateWithoutUserRegionsInput>
    where?: RegionWhereInput
  }

  export type RegionUpdateToOneWithWhereWithoutUserRegionsInput = {
    where?: RegionWhereInput
    data: XOR<RegionUpdateWithoutUserRegionsInput, RegionUncheckedUpdateWithoutUserRegionsInput>
  }

  export type RegionUpdateWithoutUserRegionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    regionCode?: StringFieldUpdateOperationsInput | string
    subRegions?: JsonNullValueInput | InputJsonValue
    centerLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    centerLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    oneTimePlanPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    monthlyPlanPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orders?: OrderUpdateManyWithoutRegionNestedInput
    broadcasts?: BroadcastUpdateManyWithoutTargetRegionNestedInput
  }

  export type RegionUncheckedUpdateWithoutUserRegionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    regionCode?: StringFieldUpdateOperationsInput | string
    subRegions?: JsonNullValueInput | InputJsonValue
    centerLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    centerLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    oneTimePlanPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    monthlyPlanPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orders?: OrderUncheckedUpdateManyWithoutRegionNestedInput
    broadcasts?: BroadcastUncheckedUpdateManyWithoutTargetRegionNestedInput
  }

  export type VehicleTypeCreateWithoutCategoryInput = {
    id?: string
    name: string
    displayName: string
    description?: string | null
    iconUrl?: string | null
    sortOrder?: number
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    vehicleSubtypes?: VehicleSubtypeCreateNestedManyWithoutTypeInput
  }

  export type VehicleTypeUncheckedCreateWithoutCategoryInput = {
    id?: string
    name: string
    displayName: string
    description?: string | null
    iconUrl?: string | null
    sortOrder?: number
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    vehicleSubtypes?: VehicleSubtypeUncheckedCreateNestedManyWithoutTypeInput
  }

  export type VehicleTypeCreateOrConnectWithoutCategoryInput = {
    where: VehicleTypeWhereUniqueInput
    create: XOR<VehicleTypeCreateWithoutCategoryInput, VehicleTypeUncheckedCreateWithoutCategoryInput>
  }

  export type VehicleTypeCreateManyCategoryInputEnvelope = {
    data: VehicleTypeCreateManyCategoryInput | VehicleTypeCreateManyCategoryInput[]
    skipDuplicates?: boolean
  }

  export type VehicleTypeUpsertWithWhereUniqueWithoutCategoryInput = {
    where: VehicleTypeWhereUniqueInput
    update: XOR<VehicleTypeUpdateWithoutCategoryInput, VehicleTypeUncheckedUpdateWithoutCategoryInput>
    create: XOR<VehicleTypeCreateWithoutCategoryInput, VehicleTypeUncheckedCreateWithoutCategoryInput>
  }

  export type VehicleTypeUpdateWithWhereUniqueWithoutCategoryInput = {
    where: VehicleTypeWhereUniqueInput
    data: XOR<VehicleTypeUpdateWithoutCategoryInput, VehicleTypeUncheckedUpdateWithoutCategoryInput>
  }

  export type VehicleTypeUpdateManyWithWhereWithoutCategoryInput = {
    where: VehicleTypeScalarWhereInput
    data: XOR<VehicleTypeUpdateManyMutationInput, VehicleTypeUncheckedUpdateManyWithoutCategoryInput>
  }

  export type VehicleTypeScalarWhereInput = {
    AND?: VehicleTypeScalarWhereInput | VehicleTypeScalarWhereInput[]
    OR?: VehicleTypeScalarWhereInput[]
    NOT?: VehicleTypeScalarWhereInput | VehicleTypeScalarWhereInput[]
    id?: StringFilter<"VehicleType"> | string
    categoryId?: StringFilter<"VehicleType"> | string
    name?: StringFilter<"VehicleType"> | string
    displayName?: StringFilter<"VehicleType"> | string
    description?: StringNullableFilter<"VehicleType"> | string | null
    iconUrl?: StringNullableFilter<"VehicleType"> | string | null
    sortOrder?: IntFilter<"VehicleType"> | number
    isActive?: BoolFilter<"VehicleType"> | boolean
    createdAt?: DateTimeFilter<"VehicleType"> | Date | string
    updatedAt?: DateTimeFilter<"VehicleType"> | Date | string
  }

  export type VehicleCategoryCreateWithoutVehicleTypesInput = {
    id?: string
    name: string
    displayName: string
    description?: string | null
    iconUrl?: string | null
    sortOrder?: number
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type VehicleCategoryUncheckedCreateWithoutVehicleTypesInput = {
    id?: string
    name: string
    displayName: string
    description?: string | null
    iconUrl?: string | null
    sortOrder?: number
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type VehicleCategoryCreateOrConnectWithoutVehicleTypesInput = {
    where: VehicleCategoryWhereUniqueInput
    create: XOR<VehicleCategoryCreateWithoutVehicleTypesInput, VehicleCategoryUncheckedCreateWithoutVehicleTypesInput>
  }

  export type VehicleSubtypeCreateWithoutTypeInput = {
    id?: string
    name: string
    displayName: string
    description?: string | null
    iconUrl?: string | null
    sortOrder?: number
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    userVehicles?: UserVehicleCreateNestedManyWithoutSubtypeInput
    orders?: OrderCreateNestedManyWithoutVehicleSubtypeInput
  }

  export type VehicleSubtypeUncheckedCreateWithoutTypeInput = {
    id?: string
    name: string
    displayName: string
    description?: string | null
    iconUrl?: string | null
    sortOrder?: number
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    userVehicles?: UserVehicleUncheckedCreateNestedManyWithoutSubtypeInput
    orders?: OrderUncheckedCreateNestedManyWithoutVehicleSubtypeInput
  }

  export type VehicleSubtypeCreateOrConnectWithoutTypeInput = {
    where: VehicleSubtypeWhereUniqueInput
    create: XOR<VehicleSubtypeCreateWithoutTypeInput, VehicleSubtypeUncheckedCreateWithoutTypeInput>
  }

  export type VehicleSubtypeCreateManyTypeInputEnvelope = {
    data: VehicleSubtypeCreateManyTypeInput | VehicleSubtypeCreateManyTypeInput[]
    skipDuplicates?: boolean
  }

  export type VehicleCategoryUpsertWithoutVehicleTypesInput = {
    update: XOR<VehicleCategoryUpdateWithoutVehicleTypesInput, VehicleCategoryUncheckedUpdateWithoutVehicleTypesInput>
    create: XOR<VehicleCategoryCreateWithoutVehicleTypesInput, VehicleCategoryUncheckedCreateWithoutVehicleTypesInput>
    where?: VehicleCategoryWhereInput
  }

  export type VehicleCategoryUpdateToOneWithWhereWithoutVehicleTypesInput = {
    where?: VehicleCategoryWhereInput
    data: XOR<VehicleCategoryUpdateWithoutVehicleTypesInput, VehicleCategoryUncheckedUpdateWithoutVehicleTypesInput>
  }

  export type VehicleCategoryUpdateWithoutVehicleTypesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    iconUrl?: NullableStringFieldUpdateOperationsInput | string | null
    sortOrder?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VehicleCategoryUncheckedUpdateWithoutVehicleTypesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    iconUrl?: NullableStringFieldUpdateOperationsInput | string | null
    sortOrder?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VehicleSubtypeUpsertWithWhereUniqueWithoutTypeInput = {
    where: VehicleSubtypeWhereUniqueInput
    update: XOR<VehicleSubtypeUpdateWithoutTypeInput, VehicleSubtypeUncheckedUpdateWithoutTypeInput>
    create: XOR<VehicleSubtypeCreateWithoutTypeInput, VehicleSubtypeUncheckedCreateWithoutTypeInput>
  }

  export type VehicleSubtypeUpdateWithWhereUniqueWithoutTypeInput = {
    where: VehicleSubtypeWhereUniqueInput
    data: XOR<VehicleSubtypeUpdateWithoutTypeInput, VehicleSubtypeUncheckedUpdateWithoutTypeInput>
  }

  export type VehicleSubtypeUpdateManyWithWhereWithoutTypeInput = {
    where: VehicleSubtypeScalarWhereInput
    data: XOR<VehicleSubtypeUpdateManyMutationInput, VehicleSubtypeUncheckedUpdateManyWithoutTypeInput>
  }

  export type VehicleSubtypeScalarWhereInput = {
    AND?: VehicleSubtypeScalarWhereInput | VehicleSubtypeScalarWhereInput[]
    OR?: VehicleSubtypeScalarWhereInput[]
    NOT?: VehicleSubtypeScalarWhereInput | VehicleSubtypeScalarWhereInput[]
    id?: StringFilter<"VehicleSubtype"> | string
    typeId?: StringFilter<"VehicleSubtype"> | string
    name?: StringFilter<"VehicleSubtype"> | string
    displayName?: StringFilter<"VehicleSubtype"> | string
    description?: StringNullableFilter<"VehicleSubtype"> | string | null
    iconUrl?: StringNullableFilter<"VehicleSubtype"> | string | null
    sortOrder?: IntFilter<"VehicleSubtype"> | number
    isActive?: BoolFilter<"VehicleSubtype"> | boolean
    createdAt?: DateTimeFilter<"VehicleSubtype"> | Date | string
    updatedAt?: DateTimeFilter<"VehicleSubtype"> | Date | string
  }

  export type VehicleTypeCreateWithoutVehicleSubtypesInput = {
    id?: string
    name: string
    displayName: string
    description?: string | null
    iconUrl?: string | null
    sortOrder?: number
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    category: VehicleCategoryCreateNestedOneWithoutVehicleTypesInput
  }

  export type VehicleTypeUncheckedCreateWithoutVehicleSubtypesInput = {
    id?: string
    categoryId: string
    name: string
    displayName: string
    description?: string | null
    iconUrl?: string | null
    sortOrder?: number
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type VehicleTypeCreateOrConnectWithoutVehicleSubtypesInput = {
    where: VehicleTypeWhereUniqueInput
    create: XOR<VehicleTypeCreateWithoutVehicleSubtypesInput, VehicleTypeUncheckedCreateWithoutVehicleSubtypesInput>
  }

  export type UserVehicleCreateWithoutSubtypeInput = {
    id?: string
    brand?: string | null
    model?: string | null
    year?: number | null
    licensePlate?: string | null
    color?: string | null
    loadCapacity?: Decimal | DecimalJsLike | number | string | null
    volumeCapacity?: Decimal | DecimalJsLike | number | string | null
    hasRefrigerator?: boolean
    hasLifting?: boolean
    canCarryFragile?: boolean
    photos?: JsonNullValueInput | InputJsonValue
    documents?: JsonNullValueInput | InputJsonValue
    isActive?: boolean
    isVerified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutVehiclesInput
  }

  export type UserVehicleUncheckedCreateWithoutSubtypeInput = {
    id?: string
    userId: string
    brand?: string | null
    model?: string | null
    year?: number | null
    licensePlate?: string | null
    color?: string | null
    loadCapacity?: Decimal | DecimalJsLike | number | string | null
    volumeCapacity?: Decimal | DecimalJsLike | number | string | null
    hasRefrigerator?: boolean
    hasLifting?: boolean
    canCarryFragile?: boolean
    photos?: JsonNullValueInput | InputJsonValue
    documents?: JsonNullValueInput | InputJsonValue
    isActive?: boolean
    isVerified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserVehicleCreateOrConnectWithoutSubtypeInput = {
    where: UserVehicleWhereUniqueInput
    create: XOR<UserVehicleCreateWithoutSubtypeInput, UserVehicleUncheckedCreateWithoutSubtypeInput>
  }

  export type UserVehicleCreateManySubtypeInputEnvelope = {
    data: UserVehicleCreateManySubtypeInput | UserVehicleCreateManySubtypeInput[]
    skipDuplicates?: boolean
  }

  export type OrderCreateWithoutVehicleSubtypeInput = {
    id?: string
    orderNumber: string
    type: $Enums.OrderType
    title: string
    description: string
    pickupAddress?: string | null
    deliveryAddress?: string | null
    workAddress?: string | null
    pickupLatitude?: Decimal | DecimalJsLike | number | string | null
    pickupLongitude?: Decimal | DecimalJsLike | number | string | null
    deliveryLatitude?: Decimal | DecimalJsLike | number | string | null
    deliveryLongitude?: Decimal | DecimalJsLike | number | string | null
    regionCode: string
    subRegion?: string | null
    scheduledDate?: Date | string | null
    scheduledTime?: string | null
    deadlineDate?: Date | string | null
    isUrgent?: boolean
    budgetFrom?: Decimal | DecimalJsLike | number | string | null
    budgetTo?: Decimal | DecimalJsLike | number | string | null
    proposedPrice?: Decimal | DecimalJsLike | number | string | null
    agreedPrice?: Decimal | DecimalJsLike | number | string | null
    isPriceFixed?: boolean
    cargoWeight?: Decimal | DecimalJsLike | number | string | null
    cargoVolume?: Decimal | DecimalJsLike | number | string | null
    cargoDescription?: string | null
    estimatedDistance?: Decimal | DecimalJsLike | number | string | null
    needsRefrigerator?: boolean
    needsLifting?: boolean
    isFragile?: boolean
    passengerCount?: number | null
    requirements?: string | null
    customerComment?: string | null
    executorComment?: string | null
    status?: $Enums.OrderStatus
    moderationComment?: string | null
    moderatedAt?: Date | string | null
    moderatedById?: string | null
    isSentToExecutors?: boolean
    sentToAllRegions?: boolean
    viewsCount?: number
    responsesCount?: number
    contactPhone?: string | null
    contactName?: string | null
    photos?: JsonNullValueInput | InputJsonValue
    documents?: JsonNullValueInput | InputJsonValue
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    customer: UserCreateNestedOneWithoutOrdersAsCustomerInput
    executor?: UserCreateNestedOneWithoutOrdersAsExecutorInput
    region: RegionCreateNestedOneWithoutOrdersInput
    responses?: OrderResponseCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutVehicleSubtypeInput = {
    id?: string
    orderNumber: string
    customerId: string
    executorId?: string | null
    regionId: string
    type: $Enums.OrderType
    title: string
    description: string
    pickupAddress?: string | null
    deliveryAddress?: string | null
    workAddress?: string | null
    pickupLatitude?: Decimal | DecimalJsLike | number | string | null
    pickupLongitude?: Decimal | DecimalJsLike | number | string | null
    deliveryLatitude?: Decimal | DecimalJsLike | number | string | null
    deliveryLongitude?: Decimal | DecimalJsLike | number | string | null
    regionCode: string
    subRegion?: string | null
    scheduledDate?: Date | string | null
    scheduledTime?: string | null
    deadlineDate?: Date | string | null
    isUrgent?: boolean
    budgetFrom?: Decimal | DecimalJsLike | number | string | null
    budgetTo?: Decimal | DecimalJsLike | number | string | null
    proposedPrice?: Decimal | DecimalJsLike | number | string | null
    agreedPrice?: Decimal | DecimalJsLike | number | string | null
    isPriceFixed?: boolean
    cargoWeight?: Decimal | DecimalJsLike | number | string | null
    cargoVolume?: Decimal | DecimalJsLike | number | string | null
    cargoDescription?: string | null
    estimatedDistance?: Decimal | DecimalJsLike | number | string | null
    needsRefrigerator?: boolean
    needsLifting?: boolean
    isFragile?: boolean
    passengerCount?: number | null
    requirements?: string | null
    customerComment?: string | null
    executorComment?: string | null
    status?: $Enums.OrderStatus
    moderationComment?: string | null
    moderatedAt?: Date | string | null
    moderatedById?: string | null
    isSentToExecutors?: boolean
    sentToAllRegions?: boolean
    viewsCount?: number
    responsesCount?: number
    contactPhone?: string | null
    contactName?: string | null
    photos?: JsonNullValueInput | InputJsonValue
    documents?: JsonNullValueInput | InputJsonValue
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    responses?: OrderResponseUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutVehicleSubtypeInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutVehicleSubtypeInput, OrderUncheckedCreateWithoutVehicleSubtypeInput>
  }

  export type OrderCreateManyVehicleSubtypeInputEnvelope = {
    data: OrderCreateManyVehicleSubtypeInput | OrderCreateManyVehicleSubtypeInput[]
    skipDuplicates?: boolean
  }

  export type VehicleTypeUpsertWithoutVehicleSubtypesInput = {
    update: XOR<VehicleTypeUpdateWithoutVehicleSubtypesInput, VehicleTypeUncheckedUpdateWithoutVehicleSubtypesInput>
    create: XOR<VehicleTypeCreateWithoutVehicleSubtypesInput, VehicleTypeUncheckedCreateWithoutVehicleSubtypesInput>
    where?: VehicleTypeWhereInput
  }

  export type VehicleTypeUpdateToOneWithWhereWithoutVehicleSubtypesInput = {
    where?: VehicleTypeWhereInput
    data: XOR<VehicleTypeUpdateWithoutVehicleSubtypesInput, VehicleTypeUncheckedUpdateWithoutVehicleSubtypesInput>
  }

  export type VehicleTypeUpdateWithoutVehicleSubtypesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    iconUrl?: NullableStringFieldUpdateOperationsInput | string | null
    sortOrder?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: VehicleCategoryUpdateOneRequiredWithoutVehicleTypesNestedInput
  }

  export type VehicleTypeUncheckedUpdateWithoutVehicleSubtypesInput = {
    id?: StringFieldUpdateOperationsInput | string
    categoryId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    iconUrl?: NullableStringFieldUpdateOperationsInput | string | null
    sortOrder?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserVehicleUpsertWithWhereUniqueWithoutSubtypeInput = {
    where: UserVehicleWhereUniqueInput
    update: XOR<UserVehicleUpdateWithoutSubtypeInput, UserVehicleUncheckedUpdateWithoutSubtypeInput>
    create: XOR<UserVehicleCreateWithoutSubtypeInput, UserVehicleUncheckedCreateWithoutSubtypeInput>
  }

  export type UserVehicleUpdateWithWhereUniqueWithoutSubtypeInput = {
    where: UserVehicleWhereUniqueInput
    data: XOR<UserVehicleUpdateWithoutSubtypeInput, UserVehicleUncheckedUpdateWithoutSubtypeInput>
  }

  export type UserVehicleUpdateManyWithWhereWithoutSubtypeInput = {
    where: UserVehicleScalarWhereInput
    data: XOR<UserVehicleUpdateManyMutationInput, UserVehicleUncheckedUpdateManyWithoutSubtypeInput>
  }

  export type OrderUpsertWithWhereUniqueWithoutVehicleSubtypeInput = {
    where: OrderWhereUniqueInput
    update: XOR<OrderUpdateWithoutVehicleSubtypeInput, OrderUncheckedUpdateWithoutVehicleSubtypeInput>
    create: XOR<OrderCreateWithoutVehicleSubtypeInput, OrderUncheckedCreateWithoutVehicleSubtypeInput>
  }

  export type OrderUpdateWithWhereUniqueWithoutVehicleSubtypeInput = {
    where: OrderWhereUniqueInput
    data: XOR<OrderUpdateWithoutVehicleSubtypeInput, OrderUncheckedUpdateWithoutVehicleSubtypeInput>
  }

  export type OrderUpdateManyWithWhereWithoutVehicleSubtypeInput = {
    where: OrderScalarWhereInput
    data: XOR<OrderUpdateManyMutationInput, OrderUncheckedUpdateManyWithoutVehicleSubtypeInput>
  }

  export type UserCreateWithoutVehiclesInput = {
    id?: string
    telegramId: bigint | number
    username?: string | null
    firstName: string
    lastName?: string | null
    phone?: string | null
    email?: string | null
    role?: $Enums.RoleType
    balance?: Decimal | DecimalJsLike | number | string
    frozenBalance?: Decimal | DecimalJsLike | number | string
    totalEarned?: Decimal | DecimalJsLike | number | string
    orderLimit?: number
    createLimit?: number
    completedOrders?: number
    cancelledOrders?: number
    averageRating?: Decimal | DecimalJsLike | number | string
    totalReviews?: number
    hasActivePlan?: boolean
    planExpiresAt?: Date | string | null
    referralCode?: string | null
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    lastSeenAt?: Date | string | null
    notificationsEnabled?: boolean
    emailNotifications?: boolean
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    referredUsers?: UserCreateNestedManyWithoutReferrerInput
    referrer?: UserCreateNestedOneWithoutReferredUsersInput
    ordersAsCustomer?: OrderCreateNestedManyWithoutCustomerInput
    ordersAsExecutor?: OrderCreateNestedManyWithoutExecutorInput
    orderResponses?: OrderResponseCreateNestedManyWithoutExecutorInput
    payments?: PaymentCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    userRegions?: UserRegionCreateNestedManyWithoutUserInput
    adminActions?: AdminActionCreateNestedManyWithoutAdminInput
    broadcasts?: BroadcastCreateNestedManyWithoutAdminInput
    paymentTransactions?: PaymentTransactionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutVehiclesInput = {
    id?: string
    telegramId: bigint | number
    username?: string | null
    firstName: string
    lastName?: string | null
    phone?: string | null
    email?: string | null
    role?: $Enums.RoleType
    balance?: Decimal | DecimalJsLike | number | string
    frozenBalance?: Decimal | DecimalJsLike | number | string
    totalEarned?: Decimal | DecimalJsLike | number | string
    orderLimit?: number
    createLimit?: number
    completedOrders?: number
    cancelledOrders?: number
    averageRating?: Decimal | DecimalJsLike | number | string
    totalReviews?: number
    hasActivePlan?: boolean
    planExpiresAt?: Date | string | null
    referralCode?: string | null
    referredById?: string | null
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    lastSeenAt?: Date | string | null
    notificationsEnabled?: boolean
    emailNotifications?: boolean
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    referredUsers?: UserUncheckedCreateNestedManyWithoutReferrerInput
    ordersAsCustomer?: OrderUncheckedCreateNestedManyWithoutCustomerInput
    ordersAsExecutor?: OrderUncheckedCreateNestedManyWithoutExecutorInput
    orderResponses?: OrderResponseUncheckedCreateNestedManyWithoutExecutorInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    userRegions?: UserRegionUncheckedCreateNestedManyWithoutUserInput
    adminActions?: AdminActionUncheckedCreateNestedManyWithoutAdminInput
    broadcasts?: BroadcastUncheckedCreateNestedManyWithoutAdminInput
    paymentTransactions?: PaymentTransactionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutVehiclesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutVehiclesInput, UserUncheckedCreateWithoutVehiclesInput>
  }

  export type VehicleSubtypeCreateWithoutUserVehiclesInput = {
    id?: string
    name: string
    displayName: string
    description?: string | null
    iconUrl?: string | null
    sortOrder?: number
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    type: VehicleTypeCreateNestedOneWithoutVehicleSubtypesInput
    orders?: OrderCreateNestedManyWithoutVehicleSubtypeInput
  }

  export type VehicleSubtypeUncheckedCreateWithoutUserVehiclesInput = {
    id?: string
    typeId: string
    name: string
    displayName: string
    description?: string | null
    iconUrl?: string | null
    sortOrder?: number
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    orders?: OrderUncheckedCreateNestedManyWithoutVehicleSubtypeInput
  }

  export type VehicleSubtypeCreateOrConnectWithoutUserVehiclesInput = {
    where: VehicleSubtypeWhereUniqueInput
    create: XOR<VehicleSubtypeCreateWithoutUserVehiclesInput, VehicleSubtypeUncheckedCreateWithoutUserVehiclesInput>
  }

  export type UserUpsertWithoutVehiclesInput = {
    update: XOR<UserUpdateWithoutVehiclesInput, UserUncheckedUpdateWithoutVehiclesInput>
    create: XOR<UserCreateWithoutVehiclesInput, UserUncheckedCreateWithoutVehiclesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutVehiclesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutVehiclesInput, UserUncheckedUpdateWithoutVehiclesInput>
  }

  export type UserUpdateWithoutVehiclesInput = {
    id?: StringFieldUpdateOperationsInput | string
    telegramId?: BigIntFieldUpdateOperationsInput | bigint | number
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleTypeFieldUpdateOperationsInput | $Enums.RoleType
    balance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    frozenBalance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalEarned?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    orderLimit?: IntFieldUpdateOperationsInput | number
    createLimit?: IntFieldUpdateOperationsInput | number
    completedOrders?: IntFieldUpdateOperationsInput | number
    cancelledOrders?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalReviews?: IntFieldUpdateOperationsInput | number
    hasActivePlan?: BoolFieldUpdateOperationsInput | boolean
    planExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    referralCode?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    lastSeenAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notificationsEnabled?: BoolFieldUpdateOperationsInput | boolean
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    referredUsers?: UserUpdateManyWithoutReferrerNestedInput
    referrer?: UserUpdateOneWithoutReferredUsersNestedInput
    ordersAsCustomer?: OrderUpdateManyWithoutCustomerNestedInput
    ordersAsExecutor?: OrderUpdateManyWithoutExecutorNestedInput
    orderResponses?: OrderResponseUpdateManyWithoutExecutorNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    userRegions?: UserRegionUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUpdateManyWithoutAdminNestedInput
    broadcasts?: BroadcastUpdateManyWithoutAdminNestedInput
    paymentTransactions?: PaymentTransactionUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutVehiclesInput = {
    id?: StringFieldUpdateOperationsInput | string
    telegramId?: BigIntFieldUpdateOperationsInput | bigint | number
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleTypeFieldUpdateOperationsInput | $Enums.RoleType
    balance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    frozenBalance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalEarned?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    orderLimit?: IntFieldUpdateOperationsInput | number
    createLimit?: IntFieldUpdateOperationsInput | number
    completedOrders?: IntFieldUpdateOperationsInput | number
    cancelledOrders?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalReviews?: IntFieldUpdateOperationsInput | number
    hasActivePlan?: BoolFieldUpdateOperationsInput | boolean
    planExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    referralCode?: NullableStringFieldUpdateOperationsInput | string | null
    referredById?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    lastSeenAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notificationsEnabled?: BoolFieldUpdateOperationsInput | boolean
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    referredUsers?: UserUncheckedUpdateManyWithoutReferrerNestedInput
    ordersAsCustomer?: OrderUncheckedUpdateManyWithoutCustomerNestedInput
    ordersAsExecutor?: OrderUncheckedUpdateManyWithoutExecutorNestedInput
    orderResponses?: OrderResponseUncheckedUpdateManyWithoutExecutorNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    userRegions?: UserRegionUncheckedUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUncheckedUpdateManyWithoutAdminNestedInput
    broadcasts?: BroadcastUncheckedUpdateManyWithoutAdminNestedInput
    paymentTransactions?: PaymentTransactionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type VehicleSubtypeUpsertWithoutUserVehiclesInput = {
    update: XOR<VehicleSubtypeUpdateWithoutUserVehiclesInput, VehicleSubtypeUncheckedUpdateWithoutUserVehiclesInput>
    create: XOR<VehicleSubtypeCreateWithoutUserVehiclesInput, VehicleSubtypeUncheckedCreateWithoutUserVehiclesInput>
    where?: VehicleSubtypeWhereInput
  }

  export type VehicleSubtypeUpdateToOneWithWhereWithoutUserVehiclesInput = {
    where?: VehicleSubtypeWhereInput
    data: XOR<VehicleSubtypeUpdateWithoutUserVehiclesInput, VehicleSubtypeUncheckedUpdateWithoutUserVehiclesInput>
  }

  export type VehicleSubtypeUpdateWithoutUserVehiclesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    iconUrl?: NullableStringFieldUpdateOperationsInput | string | null
    sortOrder?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: VehicleTypeUpdateOneRequiredWithoutVehicleSubtypesNestedInput
    orders?: OrderUpdateManyWithoutVehicleSubtypeNestedInput
  }

  export type VehicleSubtypeUncheckedUpdateWithoutUserVehiclesInput = {
    id?: StringFieldUpdateOperationsInput | string
    typeId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    iconUrl?: NullableStringFieldUpdateOperationsInput | string | null
    sortOrder?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orders?: OrderUncheckedUpdateManyWithoutVehicleSubtypeNestedInput
  }

  export type UserCreateWithoutOrdersAsCustomerInput = {
    id?: string
    telegramId: bigint | number
    username?: string | null
    firstName: string
    lastName?: string | null
    phone?: string | null
    email?: string | null
    role?: $Enums.RoleType
    balance?: Decimal | DecimalJsLike | number | string
    frozenBalance?: Decimal | DecimalJsLike | number | string
    totalEarned?: Decimal | DecimalJsLike | number | string
    orderLimit?: number
    createLimit?: number
    completedOrders?: number
    cancelledOrders?: number
    averageRating?: Decimal | DecimalJsLike | number | string
    totalReviews?: number
    hasActivePlan?: boolean
    planExpiresAt?: Date | string | null
    referralCode?: string | null
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    lastSeenAt?: Date | string | null
    notificationsEnabled?: boolean
    emailNotifications?: boolean
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    referredUsers?: UserCreateNestedManyWithoutReferrerInput
    referrer?: UserCreateNestedOneWithoutReferredUsersInput
    vehicles?: UserVehicleCreateNestedManyWithoutUserInput
    ordersAsExecutor?: OrderCreateNestedManyWithoutExecutorInput
    orderResponses?: OrderResponseCreateNestedManyWithoutExecutorInput
    payments?: PaymentCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    userRegions?: UserRegionCreateNestedManyWithoutUserInput
    adminActions?: AdminActionCreateNestedManyWithoutAdminInput
    broadcasts?: BroadcastCreateNestedManyWithoutAdminInput
    paymentTransactions?: PaymentTransactionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutOrdersAsCustomerInput = {
    id?: string
    telegramId: bigint | number
    username?: string | null
    firstName: string
    lastName?: string | null
    phone?: string | null
    email?: string | null
    role?: $Enums.RoleType
    balance?: Decimal | DecimalJsLike | number | string
    frozenBalance?: Decimal | DecimalJsLike | number | string
    totalEarned?: Decimal | DecimalJsLike | number | string
    orderLimit?: number
    createLimit?: number
    completedOrders?: number
    cancelledOrders?: number
    averageRating?: Decimal | DecimalJsLike | number | string
    totalReviews?: number
    hasActivePlan?: boolean
    planExpiresAt?: Date | string | null
    referralCode?: string | null
    referredById?: string | null
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    lastSeenAt?: Date | string | null
    notificationsEnabled?: boolean
    emailNotifications?: boolean
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    referredUsers?: UserUncheckedCreateNestedManyWithoutReferrerInput
    vehicles?: UserVehicleUncheckedCreateNestedManyWithoutUserInput
    ordersAsExecutor?: OrderUncheckedCreateNestedManyWithoutExecutorInput
    orderResponses?: OrderResponseUncheckedCreateNestedManyWithoutExecutorInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    userRegions?: UserRegionUncheckedCreateNestedManyWithoutUserInput
    adminActions?: AdminActionUncheckedCreateNestedManyWithoutAdminInput
    broadcasts?: BroadcastUncheckedCreateNestedManyWithoutAdminInput
    paymentTransactions?: PaymentTransactionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutOrdersAsCustomerInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutOrdersAsCustomerInput, UserUncheckedCreateWithoutOrdersAsCustomerInput>
  }

  export type UserCreateWithoutOrdersAsExecutorInput = {
    id?: string
    telegramId: bigint | number
    username?: string | null
    firstName: string
    lastName?: string | null
    phone?: string | null
    email?: string | null
    role?: $Enums.RoleType
    balance?: Decimal | DecimalJsLike | number | string
    frozenBalance?: Decimal | DecimalJsLike | number | string
    totalEarned?: Decimal | DecimalJsLike | number | string
    orderLimit?: number
    createLimit?: number
    completedOrders?: number
    cancelledOrders?: number
    averageRating?: Decimal | DecimalJsLike | number | string
    totalReviews?: number
    hasActivePlan?: boolean
    planExpiresAt?: Date | string | null
    referralCode?: string | null
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    lastSeenAt?: Date | string | null
    notificationsEnabled?: boolean
    emailNotifications?: boolean
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    referredUsers?: UserCreateNestedManyWithoutReferrerInput
    referrer?: UserCreateNestedOneWithoutReferredUsersInput
    vehicles?: UserVehicleCreateNestedManyWithoutUserInput
    ordersAsCustomer?: OrderCreateNestedManyWithoutCustomerInput
    orderResponses?: OrderResponseCreateNestedManyWithoutExecutorInput
    payments?: PaymentCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    userRegions?: UserRegionCreateNestedManyWithoutUserInput
    adminActions?: AdminActionCreateNestedManyWithoutAdminInput
    broadcasts?: BroadcastCreateNestedManyWithoutAdminInput
    paymentTransactions?: PaymentTransactionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutOrdersAsExecutorInput = {
    id?: string
    telegramId: bigint | number
    username?: string | null
    firstName: string
    lastName?: string | null
    phone?: string | null
    email?: string | null
    role?: $Enums.RoleType
    balance?: Decimal | DecimalJsLike | number | string
    frozenBalance?: Decimal | DecimalJsLike | number | string
    totalEarned?: Decimal | DecimalJsLike | number | string
    orderLimit?: number
    createLimit?: number
    completedOrders?: number
    cancelledOrders?: number
    averageRating?: Decimal | DecimalJsLike | number | string
    totalReviews?: number
    hasActivePlan?: boolean
    planExpiresAt?: Date | string | null
    referralCode?: string | null
    referredById?: string | null
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    lastSeenAt?: Date | string | null
    notificationsEnabled?: boolean
    emailNotifications?: boolean
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    referredUsers?: UserUncheckedCreateNestedManyWithoutReferrerInput
    vehicles?: UserVehicleUncheckedCreateNestedManyWithoutUserInput
    ordersAsCustomer?: OrderUncheckedCreateNestedManyWithoutCustomerInput
    orderResponses?: OrderResponseUncheckedCreateNestedManyWithoutExecutorInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    userRegions?: UserRegionUncheckedCreateNestedManyWithoutUserInput
    adminActions?: AdminActionUncheckedCreateNestedManyWithoutAdminInput
    broadcasts?: BroadcastUncheckedCreateNestedManyWithoutAdminInput
    paymentTransactions?: PaymentTransactionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutOrdersAsExecutorInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutOrdersAsExecutorInput, UserUncheckedCreateWithoutOrdersAsExecutorInput>
  }

  export type RegionCreateWithoutOrdersInput = {
    id?: string
    name: string
    code: string
    regionCode: string
    subRegions?: JsonNullValueInput | InputJsonValue
    centerLatitude?: Decimal | DecimalJsLike | number | string | null
    centerLongitude?: Decimal | DecimalJsLike | number | string | null
    oneTimePlanPrice: Decimal | DecimalJsLike | number | string
    monthlyPlanPrice: Decimal | DecimalJsLike | number | string
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    userRegions?: UserRegionCreateNestedManyWithoutRegionInput
    broadcasts?: BroadcastCreateNestedManyWithoutTargetRegionInput
  }

  export type RegionUncheckedCreateWithoutOrdersInput = {
    id?: string
    name: string
    code: string
    regionCode: string
    subRegions?: JsonNullValueInput | InputJsonValue
    centerLatitude?: Decimal | DecimalJsLike | number | string | null
    centerLongitude?: Decimal | DecimalJsLike | number | string | null
    oneTimePlanPrice: Decimal | DecimalJsLike | number | string
    monthlyPlanPrice: Decimal | DecimalJsLike | number | string
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    userRegions?: UserRegionUncheckedCreateNestedManyWithoutRegionInput
    broadcasts?: BroadcastUncheckedCreateNestedManyWithoutTargetRegionInput
  }

  export type RegionCreateOrConnectWithoutOrdersInput = {
    where: RegionWhereUniqueInput
    create: XOR<RegionCreateWithoutOrdersInput, RegionUncheckedCreateWithoutOrdersInput>
  }

  export type VehicleSubtypeCreateWithoutOrdersInput = {
    id?: string
    name: string
    displayName: string
    description?: string | null
    iconUrl?: string | null
    sortOrder?: number
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    type: VehicleTypeCreateNestedOneWithoutVehicleSubtypesInput
    userVehicles?: UserVehicleCreateNestedManyWithoutSubtypeInput
  }

  export type VehicleSubtypeUncheckedCreateWithoutOrdersInput = {
    id?: string
    typeId: string
    name: string
    displayName: string
    description?: string | null
    iconUrl?: string | null
    sortOrder?: number
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    userVehicles?: UserVehicleUncheckedCreateNestedManyWithoutSubtypeInput
  }

  export type VehicleSubtypeCreateOrConnectWithoutOrdersInput = {
    where: VehicleSubtypeWhereUniqueInput
    create: XOR<VehicleSubtypeCreateWithoutOrdersInput, VehicleSubtypeUncheckedCreateWithoutOrdersInput>
  }

  export type OrderResponseCreateWithoutOrderInput = {
    id?: string
    proposedPrice?: Decimal | DecimalJsLike | number | string | null
    comment?: string | null
    estimatedDuration?: string | null
    status?: string
    vehiclePhotos?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    executor: UserCreateNestedOneWithoutOrderResponsesInput
  }

  export type OrderResponseUncheckedCreateWithoutOrderInput = {
    id?: string
    executorId: string
    proposedPrice?: Decimal | DecimalJsLike | number | string | null
    comment?: string | null
    estimatedDuration?: string | null
    status?: string
    vehiclePhotos?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OrderResponseCreateOrConnectWithoutOrderInput = {
    where: OrderResponseWhereUniqueInput
    create: XOR<OrderResponseCreateWithoutOrderInput, OrderResponseUncheckedCreateWithoutOrderInput>
  }

  export type OrderResponseCreateManyOrderInputEnvelope = {
    data: OrderResponseCreateManyOrderInput | OrderResponseCreateManyOrderInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutOrdersAsCustomerInput = {
    update: XOR<UserUpdateWithoutOrdersAsCustomerInput, UserUncheckedUpdateWithoutOrdersAsCustomerInput>
    create: XOR<UserCreateWithoutOrdersAsCustomerInput, UserUncheckedCreateWithoutOrdersAsCustomerInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutOrdersAsCustomerInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutOrdersAsCustomerInput, UserUncheckedUpdateWithoutOrdersAsCustomerInput>
  }

  export type UserUpdateWithoutOrdersAsCustomerInput = {
    id?: StringFieldUpdateOperationsInput | string
    telegramId?: BigIntFieldUpdateOperationsInput | bigint | number
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleTypeFieldUpdateOperationsInput | $Enums.RoleType
    balance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    frozenBalance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalEarned?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    orderLimit?: IntFieldUpdateOperationsInput | number
    createLimit?: IntFieldUpdateOperationsInput | number
    completedOrders?: IntFieldUpdateOperationsInput | number
    cancelledOrders?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalReviews?: IntFieldUpdateOperationsInput | number
    hasActivePlan?: BoolFieldUpdateOperationsInput | boolean
    planExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    referralCode?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    lastSeenAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notificationsEnabled?: BoolFieldUpdateOperationsInput | boolean
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    referredUsers?: UserUpdateManyWithoutReferrerNestedInput
    referrer?: UserUpdateOneWithoutReferredUsersNestedInput
    vehicles?: UserVehicleUpdateManyWithoutUserNestedInput
    ordersAsExecutor?: OrderUpdateManyWithoutExecutorNestedInput
    orderResponses?: OrderResponseUpdateManyWithoutExecutorNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    userRegions?: UserRegionUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUpdateManyWithoutAdminNestedInput
    broadcasts?: BroadcastUpdateManyWithoutAdminNestedInput
    paymentTransactions?: PaymentTransactionUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutOrdersAsCustomerInput = {
    id?: StringFieldUpdateOperationsInput | string
    telegramId?: BigIntFieldUpdateOperationsInput | bigint | number
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleTypeFieldUpdateOperationsInput | $Enums.RoleType
    balance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    frozenBalance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalEarned?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    orderLimit?: IntFieldUpdateOperationsInput | number
    createLimit?: IntFieldUpdateOperationsInput | number
    completedOrders?: IntFieldUpdateOperationsInput | number
    cancelledOrders?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalReviews?: IntFieldUpdateOperationsInput | number
    hasActivePlan?: BoolFieldUpdateOperationsInput | boolean
    planExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    referralCode?: NullableStringFieldUpdateOperationsInput | string | null
    referredById?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    lastSeenAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notificationsEnabled?: BoolFieldUpdateOperationsInput | boolean
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    referredUsers?: UserUncheckedUpdateManyWithoutReferrerNestedInput
    vehicles?: UserVehicleUncheckedUpdateManyWithoutUserNestedInput
    ordersAsExecutor?: OrderUncheckedUpdateManyWithoutExecutorNestedInput
    orderResponses?: OrderResponseUncheckedUpdateManyWithoutExecutorNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    userRegions?: UserRegionUncheckedUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUncheckedUpdateManyWithoutAdminNestedInput
    broadcasts?: BroadcastUncheckedUpdateManyWithoutAdminNestedInput
    paymentTransactions?: PaymentTransactionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserUpsertWithoutOrdersAsExecutorInput = {
    update: XOR<UserUpdateWithoutOrdersAsExecutorInput, UserUncheckedUpdateWithoutOrdersAsExecutorInput>
    create: XOR<UserCreateWithoutOrdersAsExecutorInput, UserUncheckedCreateWithoutOrdersAsExecutorInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutOrdersAsExecutorInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutOrdersAsExecutorInput, UserUncheckedUpdateWithoutOrdersAsExecutorInput>
  }

  export type UserUpdateWithoutOrdersAsExecutorInput = {
    id?: StringFieldUpdateOperationsInput | string
    telegramId?: BigIntFieldUpdateOperationsInput | bigint | number
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleTypeFieldUpdateOperationsInput | $Enums.RoleType
    balance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    frozenBalance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalEarned?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    orderLimit?: IntFieldUpdateOperationsInput | number
    createLimit?: IntFieldUpdateOperationsInput | number
    completedOrders?: IntFieldUpdateOperationsInput | number
    cancelledOrders?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalReviews?: IntFieldUpdateOperationsInput | number
    hasActivePlan?: BoolFieldUpdateOperationsInput | boolean
    planExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    referralCode?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    lastSeenAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notificationsEnabled?: BoolFieldUpdateOperationsInput | boolean
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    referredUsers?: UserUpdateManyWithoutReferrerNestedInput
    referrer?: UserUpdateOneWithoutReferredUsersNestedInput
    vehicles?: UserVehicleUpdateManyWithoutUserNestedInput
    ordersAsCustomer?: OrderUpdateManyWithoutCustomerNestedInput
    orderResponses?: OrderResponseUpdateManyWithoutExecutorNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    userRegions?: UserRegionUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUpdateManyWithoutAdminNestedInput
    broadcasts?: BroadcastUpdateManyWithoutAdminNestedInput
    paymentTransactions?: PaymentTransactionUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutOrdersAsExecutorInput = {
    id?: StringFieldUpdateOperationsInput | string
    telegramId?: BigIntFieldUpdateOperationsInput | bigint | number
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleTypeFieldUpdateOperationsInput | $Enums.RoleType
    balance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    frozenBalance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalEarned?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    orderLimit?: IntFieldUpdateOperationsInput | number
    createLimit?: IntFieldUpdateOperationsInput | number
    completedOrders?: IntFieldUpdateOperationsInput | number
    cancelledOrders?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalReviews?: IntFieldUpdateOperationsInput | number
    hasActivePlan?: BoolFieldUpdateOperationsInput | boolean
    planExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    referralCode?: NullableStringFieldUpdateOperationsInput | string | null
    referredById?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    lastSeenAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notificationsEnabled?: BoolFieldUpdateOperationsInput | boolean
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    referredUsers?: UserUncheckedUpdateManyWithoutReferrerNestedInput
    vehicles?: UserVehicleUncheckedUpdateManyWithoutUserNestedInput
    ordersAsCustomer?: OrderUncheckedUpdateManyWithoutCustomerNestedInput
    orderResponses?: OrderResponseUncheckedUpdateManyWithoutExecutorNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    userRegions?: UserRegionUncheckedUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUncheckedUpdateManyWithoutAdminNestedInput
    broadcasts?: BroadcastUncheckedUpdateManyWithoutAdminNestedInput
    paymentTransactions?: PaymentTransactionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type RegionUpsertWithoutOrdersInput = {
    update: XOR<RegionUpdateWithoutOrdersInput, RegionUncheckedUpdateWithoutOrdersInput>
    create: XOR<RegionCreateWithoutOrdersInput, RegionUncheckedCreateWithoutOrdersInput>
    where?: RegionWhereInput
  }

  export type RegionUpdateToOneWithWhereWithoutOrdersInput = {
    where?: RegionWhereInput
    data: XOR<RegionUpdateWithoutOrdersInput, RegionUncheckedUpdateWithoutOrdersInput>
  }

  export type RegionUpdateWithoutOrdersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    regionCode?: StringFieldUpdateOperationsInput | string
    subRegions?: JsonNullValueInput | InputJsonValue
    centerLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    centerLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    oneTimePlanPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    monthlyPlanPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userRegions?: UserRegionUpdateManyWithoutRegionNestedInput
    broadcasts?: BroadcastUpdateManyWithoutTargetRegionNestedInput
  }

  export type RegionUncheckedUpdateWithoutOrdersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    regionCode?: StringFieldUpdateOperationsInput | string
    subRegions?: JsonNullValueInput | InputJsonValue
    centerLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    centerLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    oneTimePlanPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    monthlyPlanPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userRegions?: UserRegionUncheckedUpdateManyWithoutRegionNestedInput
    broadcasts?: BroadcastUncheckedUpdateManyWithoutTargetRegionNestedInput
  }

  export type VehicleSubtypeUpsertWithoutOrdersInput = {
    update: XOR<VehicleSubtypeUpdateWithoutOrdersInput, VehicleSubtypeUncheckedUpdateWithoutOrdersInput>
    create: XOR<VehicleSubtypeCreateWithoutOrdersInput, VehicleSubtypeUncheckedCreateWithoutOrdersInput>
    where?: VehicleSubtypeWhereInput
  }

  export type VehicleSubtypeUpdateToOneWithWhereWithoutOrdersInput = {
    where?: VehicleSubtypeWhereInput
    data: XOR<VehicleSubtypeUpdateWithoutOrdersInput, VehicleSubtypeUncheckedUpdateWithoutOrdersInput>
  }

  export type VehicleSubtypeUpdateWithoutOrdersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    iconUrl?: NullableStringFieldUpdateOperationsInput | string | null
    sortOrder?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: VehicleTypeUpdateOneRequiredWithoutVehicleSubtypesNestedInput
    userVehicles?: UserVehicleUpdateManyWithoutSubtypeNestedInput
  }

  export type VehicleSubtypeUncheckedUpdateWithoutOrdersInput = {
    id?: StringFieldUpdateOperationsInput | string
    typeId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    iconUrl?: NullableStringFieldUpdateOperationsInput | string | null
    sortOrder?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userVehicles?: UserVehicleUncheckedUpdateManyWithoutSubtypeNestedInput
  }

  export type OrderResponseUpsertWithWhereUniqueWithoutOrderInput = {
    where: OrderResponseWhereUniqueInput
    update: XOR<OrderResponseUpdateWithoutOrderInput, OrderResponseUncheckedUpdateWithoutOrderInput>
    create: XOR<OrderResponseCreateWithoutOrderInput, OrderResponseUncheckedCreateWithoutOrderInput>
  }

  export type OrderResponseUpdateWithWhereUniqueWithoutOrderInput = {
    where: OrderResponseWhereUniqueInput
    data: XOR<OrderResponseUpdateWithoutOrderInput, OrderResponseUncheckedUpdateWithoutOrderInput>
  }

  export type OrderResponseUpdateManyWithWhereWithoutOrderInput = {
    where: OrderResponseScalarWhereInput
    data: XOR<OrderResponseUpdateManyMutationInput, OrderResponseUncheckedUpdateManyWithoutOrderInput>
  }

  export type OrderCreateWithoutResponsesInput = {
    id?: string
    orderNumber: string
    type: $Enums.OrderType
    title: string
    description: string
    pickupAddress?: string | null
    deliveryAddress?: string | null
    workAddress?: string | null
    pickupLatitude?: Decimal | DecimalJsLike | number | string | null
    pickupLongitude?: Decimal | DecimalJsLike | number | string | null
    deliveryLatitude?: Decimal | DecimalJsLike | number | string | null
    deliveryLongitude?: Decimal | DecimalJsLike | number | string | null
    regionCode: string
    subRegion?: string | null
    scheduledDate?: Date | string | null
    scheduledTime?: string | null
    deadlineDate?: Date | string | null
    isUrgent?: boolean
    budgetFrom?: Decimal | DecimalJsLike | number | string | null
    budgetTo?: Decimal | DecimalJsLike | number | string | null
    proposedPrice?: Decimal | DecimalJsLike | number | string | null
    agreedPrice?: Decimal | DecimalJsLike | number | string | null
    isPriceFixed?: boolean
    cargoWeight?: Decimal | DecimalJsLike | number | string | null
    cargoVolume?: Decimal | DecimalJsLike | number | string | null
    cargoDescription?: string | null
    estimatedDistance?: Decimal | DecimalJsLike | number | string | null
    needsRefrigerator?: boolean
    needsLifting?: boolean
    isFragile?: boolean
    passengerCount?: number | null
    requirements?: string | null
    customerComment?: string | null
    executorComment?: string | null
    status?: $Enums.OrderStatus
    moderationComment?: string | null
    moderatedAt?: Date | string | null
    moderatedById?: string | null
    isSentToExecutors?: boolean
    sentToAllRegions?: boolean
    viewsCount?: number
    responsesCount?: number
    contactPhone?: string | null
    contactName?: string | null
    photos?: JsonNullValueInput | InputJsonValue
    documents?: JsonNullValueInput | InputJsonValue
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    customer: UserCreateNestedOneWithoutOrdersAsCustomerInput
    executor?: UserCreateNestedOneWithoutOrdersAsExecutorInput
    region: RegionCreateNestedOneWithoutOrdersInput
    vehicleSubtype?: VehicleSubtypeCreateNestedOneWithoutOrdersInput
  }

  export type OrderUncheckedCreateWithoutResponsesInput = {
    id?: string
    orderNumber: string
    customerId: string
    executorId?: string | null
    regionId: string
    vehicleSubtypeId?: string | null
    type: $Enums.OrderType
    title: string
    description: string
    pickupAddress?: string | null
    deliveryAddress?: string | null
    workAddress?: string | null
    pickupLatitude?: Decimal | DecimalJsLike | number | string | null
    pickupLongitude?: Decimal | DecimalJsLike | number | string | null
    deliveryLatitude?: Decimal | DecimalJsLike | number | string | null
    deliveryLongitude?: Decimal | DecimalJsLike | number | string | null
    regionCode: string
    subRegion?: string | null
    scheduledDate?: Date | string | null
    scheduledTime?: string | null
    deadlineDate?: Date | string | null
    isUrgent?: boolean
    budgetFrom?: Decimal | DecimalJsLike | number | string | null
    budgetTo?: Decimal | DecimalJsLike | number | string | null
    proposedPrice?: Decimal | DecimalJsLike | number | string | null
    agreedPrice?: Decimal | DecimalJsLike | number | string | null
    isPriceFixed?: boolean
    cargoWeight?: Decimal | DecimalJsLike | number | string | null
    cargoVolume?: Decimal | DecimalJsLike | number | string | null
    cargoDescription?: string | null
    estimatedDistance?: Decimal | DecimalJsLike | number | string | null
    needsRefrigerator?: boolean
    needsLifting?: boolean
    isFragile?: boolean
    passengerCount?: number | null
    requirements?: string | null
    customerComment?: string | null
    executorComment?: string | null
    status?: $Enums.OrderStatus
    moderationComment?: string | null
    moderatedAt?: Date | string | null
    moderatedById?: string | null
    isSentToExecutors?: boolean
    sentToAllRegions?: boolean
    viewsCount?: number
    responsesCount?: number
    contactPhone?: string | null
    contactName?: string | null
    photos?: JsonNullValueInput | InputJsonValue
    documents?: JsonNullValueInput | InputJsonValue
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OrderCreateOrConnectWithoutResponsesInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutResponsesInput, OrderUncheckedCreateWithoutResponsesInput>
  }

  export type UserCreateWithoutOrderResponsesInput = {
    id?: string
    telegramId: bigint | number
    username?: string | null
    firstName: string
    lastName?: string | null
    phone?: string | null
    email?: string | null
    role?: $Enums.RoleType
    balance?: Decimal | DecimalJsLike | number | string
    frozenBalance?: Decimal | DecimalJsLike | number | string
    totalEarned?: Decimal | DecimalJsLike | number | string
    orderLimit?: number
    createLimit?: number
    completedOrders?: number
    cancelledOrders?: number
    averageRating?: Decimal | DecimalJsLike | number | string
    totalReviews?: number
    hasActivePlan?: boolean
    planExpiresAt?: Date | string | null
    referralCode?: string | null
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    lastSeenAt?: Date | string | null
    notificationsEnabled?: boolean
    emailNotifications?: boolean
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    referredUsers?: UserCreateNestedManyWithoutReferrerInput
    referrer?: UserCreateNestedOneWithoutReferredUsersInput
    vehicles?: UserVehicleCreateNestedManyWithoutUserInput
    ordersAsCustomer?: OrderCreateNestedManyWithoutCustomerInput
    ordersAsExecutor?: OrderCreateNestedManyWithoutExecutorInput
    payments?: PaymentCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    userRegions?: UserRegionCreateNestedManyWithoutUserInput
    adminActions?: AdminActionCreateNestedManyWithoutAdminInput
    broadcasts?: BroadcastCreateNestedManyWithoutAdminInput
    paymentTransactions?: PaymentTransactionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutOrderResponsesInput = {
    id?: string
    telegramId: bigint | number
    username?: string | null
    firstName: string
    lastName?: string | null
    phone?: string | null
    email?: string | null
    role?: $Enums.RoleType
    balance?: Decimal | DecimalJsLike | number | string
    frozenBalance?: Decimal | DecimalJsLike | number | string
    totalEarned?: Decimal | DecimalJsLike | number | string
    orderLimit?: number
    createLimit?: number
    completedOrders?: number
    cancelledOrders?: number
    averageRating?: Decimal | DecimalJsLike | number | string
    totalReviews?: number
    hasActivePlan?: boolean
    planExpiresAt?: Date | string | null
    referralCode?: string | null
    referredById?: string | null
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    lastSeenAt?: Date | string | null
    notificationsEnabled?: boolean
    emailNotifications?: boolean
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    referredUsers?: UserUncheckedCreateNestedManyWithoutReferrerInput
    vehicles?: UserVehicleUncheckedCreateNestedManyWithoutUserInput
    ordersAsCustomer?: OrderUncheckedCreateNestedManyWithoutCustomerInput
    ordersAsExecutor?: OrderUncheckedCreateNestedManyWithoutExecutorInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    userRegions?: UserRegionUncheckedCreateNestedManyWithoutUserInput
    adminActions?: AdminActionUncheckedCreateNestedManyWithoutAdminInput
    broadcasts?: BroadcastUncheckedCreateNestedManyWithoutAdminInput
    paymentTransactions?: PaymentTransactionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutOrderResponsesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutOrderResponsesInput, UserUncheckedCreateWithoutOrderResponsesInput>
  }

  export type OrderUpsertWithoutResponsesInput = {
    update: XOR<OrderUpdateWithoutResponsesInput, OrderUncheckedUpdateWithoutResponsesInput>
    create: XOR<OrderCreateWithoutResponsesInput, OrderUncheckedCreateWithoutResponsesInput>
    where?: OrderWhereInput
  }

  export type OrderUpdateToOneWithWhereWithoutResponsesInput = {
    where?: OrderWhereInput
    data: XOR<OrderUpdateWithoutResponsesInput, OrderUncheckedUpdateWithoutResponsesInput>
  }

  export type OrderUpdateWithoutResponsesInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    type?: EnumOrderTypeFieldUpdateOperationsInput | $Enums.OrderType
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    pickupAddress?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    workAddress?: NullableStringFieldUpdateOperationsInput | string | null
    pickupLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    pickupLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliveryLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliveryLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    regionCode?: StringFieldUpdateOperationsInput | string
    subRegion?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledTime?: NullableStringFieldUpdateOperationsInput | string | null
    deadlineDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isUrgent?: BoolFieldUpdateOperationsInput | boolean
    budgetFrom?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    budgetTo?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    proposedPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    agreedPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isPriceFixed?: BoolFieldUpdateOperationsInput | boolean
    cargoWeight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cargoVolume?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cargoDescription?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedDistance?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    needsRefrigerator?: BoolFieldUpdateOperationsInput | boolean
    needsLifting?: BoolFieldUpdateOperationsInput | boolean
    isFragile?: BoolFieldUpdateOperationsInput | boolean
    passengerCount?: NullableIntFieldUpdateOperationsInput | number | null
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    customerComment?: NullableStringFieldUpdateOperationsInput | string | null
    executorComment?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    moderationComment?: NullableStringFieldUpdateOperationsInput | string | null
    moderatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    moderatedById?: NullableStringFieldUpdateOperationsInput | string | null
    isSentToExecutors?: BoolFieldUpdateOperationsInput | boolean
    sentToAllRegions?: BoolFieldUpdateOperationsInput | boolean
    viewsCount?: IntFieldUpdateOperationsInput | number
    responsesCount?: IntFieldUpdateOperationsInput | number
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    photos?: JsonNullValueInput | InputJsonValue
    documents?: JsonNullValueInput | InputJsonValue
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    customer?: UserUpdateOneRequiredWithoutOrdersAsCustomerNestedInput
    executor?: UserUpdateOneWithoutOrdersAsExecutorNestedInput
    region?: RegionUpdateOneRequiredWithoutOrdersNestedInput
    vehicleSubtype?: VehicleSubtypeUpdateOneWithoutOrdersNestedInput
  }

  export type OrderUncheckedUpdateWithoutResponsesInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    customerId?: StringFieldUpdateOperationsInput | string
    executorId?: NullableStringFieldUpdateOperationsInput | string | null
    regionId?: StringFieldUpdateOperationsInput | string
    vehicleSubtypeId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumOrderTypeFieldUpdateOperationsInput | $Enums.OrderType
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    pickupAddress?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    workAddress?: NullableStringFieldUpdateOperationsInput | string | null
    pickupLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    pickupLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliveryLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliveryLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    regionCode?: StringFieldUpdateOperationsInput | string
    subRegion?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledTime?: NullableStringFieldUpdateOperationsInput | string | null
    deadlineDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isUrgent?: BoolFieldUpdateOperationsInput | boolean
    budgetFrom?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    budgetTo?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    proposedPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    agreedPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isPriceFixed?: BoolFieldUpdateOperationsInput | boolean
    cargoWeight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cargoVolume?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cargoDescription?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedDistance?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    needsRefrigerator?: BoolFieldUpdateOperationsInput | boolean
    needsLifting?: BoolFieldUpdateOperationsInput | boolean
    isFragile?: BoolFieldUpdateOperationsInput | boolean
    passengerCount?: NullableIntFieldUpdateOperationsInput | number | null
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    customerComment?: NullableStringFieldUpdateOperationsInput | string | null
    executorComment?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    moderationComment?: NullableStringFieldUpdateOperationsInput | string | null
    moderatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    moderatedById?: NullableStringFieldUpdateOperationsInput | string | null
    isSentToExecutors?: BoolFieldUpdateOperationsInput | boolean
    sentToAllRegions?: BoolFieldUpdateOperationsInput | boolean
    viewsCount?: IntFieldUpdateOperationsInput | number
    responsesCount?: IntFieldUpdateOperationsInput | number
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    photos?: JsonNullValueInput | InputJsonValue
    documents?: JsonNullValueInput | InputJsonValue
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUpsertWithoutOrderResponsesInput = {
    update: XOR<UserUpdateWithoutOrderResponsesInput, UserUncheckedUpdateWithoutOrderResponsesInput>
    create: XOR<UserCreateWithoutOrderResponsesInput, UserUncheckedCreateWithoutOrderResponsesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutOrderResponsesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutOrderResponsesInput, UserUncheckedUpdateWithoutOrderResponsesInput>
  }

  export type UserUpdateWithoutOrderResponsesInput = {
    id?: StringFieldUpdateOperationsInput | string
    telegramId?: BigIntFieldUpdateOperationsInput | bigint | number
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleTypeFieldUpdateOperationsInput | $Enums.RoleType
    balance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    frozenBalance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalEarned?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    orderLimit?: IntFieldUpdateOperationsInput | number
    createLimit?: IntFieldUpdateOperationsInput | number
    completedOrders?: IntFieldUpdateOperationsInput | number
    cancelledOrders?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalReviews?: IntFieldUpdateOperationsInput | number
    hasActivePlan?: BoolFieldUpdateOperationsInput | boolean
    planExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    referralCode?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    lastSeenAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notificationsEnabled?: BoolFieldUpdateOperationsInput | boolean
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    referredUsers?: UserUpdateManyWithoutReferrerNestedInput
    referrer?: UserUpdateOneWithoutReferredUsersNestedInput
    vehicles?: UserVehicleUpdateManyWithoutUserNestedInput
    ordersAsCustomer?: OrderUpdateManyWithoutCustomerNestedInput
    ordersAsExecutor?: OrderUpdateManyWithoutExecutorNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    userRegions?: UserRegionUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUpdateManyWithoutAdminNestedInput
    broadcasts?: BroadcastUpdateManyWithoutAdminNestedInput
    paymentTransactions?: PaymentTransactionUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutOrderResponsesInput = {
    id?: StringFieldUpdateOperationsInput | string
    telegramId?: BigIntFieldUpdateOperationsInput | bigint | number
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleTypeFieldUpdateOperationsInput | $Enums.RoleType
    balance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    frozenBalance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalEarned?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    orderLimit?: IntFieldUpdateOperationsInput | number
    createLimit?: IntFieldUpdateOperationsInput | number
    completedOrders?: IntFieldUpdateOperationsInput | number
    cancelledOrders?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalReviews?: IntFieldUpdateOperationsInput | number
    hasActivePlan?: BoolFieldUpdateOperationsInput | boolean
    planExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    referralCode?: NullableStringFieldUpdateOperationsInput | string | null
    referredById?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    lastSeenAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notificationsEnabled?: BoolFieldUpdateOperationsInput | boolean
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    referredUsers?: UserUncheckedUpdateManyWithoutReferrerNestedInput
    vehicles?: UserVehicleUncheckedUpdateManyWithoutUserNestedInput
    ordersAsCustomer?: OrderUncheckedUpdateManyWithoutCustomerNestedInput
    ordersAsExecutor?: OrderUncheckedUpdateManyWithoutExecutorNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    userRegions?: UserRegionUncheckedUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUncheckedUpdateManyWithoutAdminNestedInput
    broadcasts?: BroadcastUncheckedUpdateManyWithoutAdminNestedInput
    paymentTransactions?: PaymentTransactionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateWithoutPaymentsInput = {
    id?: string
    telegramId: bigint | number
    username?: string | null
    firstName: string
    lastName?: string | null
    phone?: string | null
    email?: string | null
    role?: $Enums.RoleType
    balance?: Decimal | DecimalJsLike | number | string
    frozenBalance?: Decimal | DecimalJsLike | number | string
    totalEarned?: Decimal | DecimalJsLike | number | string
    orderLimit?: number
    createLimit?: number
    completedOrders?: number
    cancelledOrders?: number
    averageRating?: Decimal | DecimalJsLike | number | string
    totalReviews?: number
    hasActivePlan?: boolean
    planExpiresAt?: Date | string | null
    referralCode?: string | null
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    lastSeenAt?: Date | string | null
    notificationsEnabled?: boolean
    emailNotifications?: boolean
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    referredUsers?: UserCreateNestedManyWithoutReferrerInput
    referrer?: UserCreateNestedOneWithoutReferredUsersInput
    vehicles?: UserVehicleCreateNestedManyWithoutUserInput
    ordersAsCustomer?: OrderCreateNestedManyWithoutCustomerInput
    ordersAsExecutor?: OrderCreateNestedManyWithoutExecutorInput
    orderResponses?: OrderResponseCreateNestedManyWithoutExecutorInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    userRegions?: UserRegionCreateNestedManyWithoutUserInput
    adminActions?: AdminActionCreateNestedManyWithoutAdminInput
    broadcasts?: BroadcastCreateNestedManyWithoutAdminInput
    paymentTransactions?: PaymentTransactionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutPaymentsInput = {
    id?: string
    telegramId: bigint | number
    username?: string | null
    firstName: string
    lastName?: string | null
    phone?: string | null
    email?: string | null
    role?: $Enums.RoleType
    balance?: Decimal | DecimalJsLike | number | string
    frozenBalance?: Decimal | DecimalJsLike | number | string
    totalEarned?: Decimal | DecimalJsLike | number | string
    orderLimit?: number
    createLimit?: number
    completedOrders?: number
    cancelledOrders?: number
    averageRating?: Decimal | DecimalJsLike | number | string
    totalReviews?: number
    hasActivePlan?: boolean
    planExpiresAt?: Date | string | null
    referralCode?: string | null
    referredById?: string | null
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    lastSeenAt?: Date | string | null
    notificationsEnabled?: boolean
    emailNotifications?: boolean
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    referredUsers?: UserUncheckedCreateNestedManyWithoutReferrerInput
    vehicles?: UserVehicleUncheckedCreateNestedManyWithoutUserInput
    ordersAsCustomer?: OrderUncheckedCreateNestedManyWithoutCustomerInput
    ordersAsExecutor?: OrderUncheckedCreateNestedManyWithoutExecutorInput
    orderResponses?: OrderResponseUncheckedCreateNestedManyWithoutExecutorInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    userRegions?: UserRegionUncheckedCreateNestedManyWithoutUserInput
    adminActions?: AdminActionUncheckedCreateNestedManyWithoutAdminInput
    broadcasts?: BroadcastUncheckedCreateNestedManyWithoutAdminInput
    paymentTransactions?: PaymentTransactionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutPaymentsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutPaymentsInput, UserUncheckedCreateWithoutPaymentsInput>
  }

  export type UserUpsertWithoutPaymentsInput = {
    update: XOR<UserUpdateWithoutPaymentsInput, UserUncheckedUpdateWithoutPaymentsInput>
    create: XOR<UserCreateWithoutPaymentsInput, UserUncheckedCreateWithoutPaymentsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutPaymentsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutPaymentsInput, UserUncheckedUpdateWithoutPaymentsInput>
  }

  export type UserUpdateWithoutPaymentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    telegramId?: BigIntFieldUpdateOperationsInput | bigint | number
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleTypeFieldUpdateOperationsInput | $Enums.RoleType
    balance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    frozenBalance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalEarned?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    orderLimit?: IntFieldUpdateOperationsInput | number
    createLimit?: IntFieldUpdateOperationsInput | number
    completedOrders?: IntFieldUpdateOperationsInput | number
    cancelledOrders?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalReviews?: IntFieldUpdateOperationsInput | number
    hasActivePlan?: BoolFieldUpdateOperationsInput | boolean
    planExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    referralCode?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    lastSeenAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notificationsEnabled?: BoolFieldUpdateOperationsInput | boolean
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    referredUsers?: UserUpdateManyWithoutReferrerNestedInput
    referrer?: UserUpdateOneWithoutReferredUsersNestedInput
    vehicles?: UserVehicleUpdateManyWithoutUserNestedInput
    ordersAsCustomer?: OrderUpdateManyWithoutCustomerNestedInput
    ordersAsExecutor?: OrderUpdateManyWithoutExecutorNestedInput
    orderResponses?: OrderResponseUpdateManyWithoutExecutorNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    userRegions?: UserRegionUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUpdateManyWithoutAdminNestedInput
    broadcasts?: BroadcastUpdateManyWithoutAdminNestedInput
    paymentTransactions?: PaymentTransactionUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutPaymentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    telegramId?: BigIntFieldUpdateOperationsInput | bigint | number
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleTypeFieldUpdateOperationsInput | $Enums.RoleType
    balance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    frozenBalance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalEarned?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    orderLimit?: IntFieldUpdateOperationsInput | number
    createLimit?: IntFieldUpdateOperationsInput | number
    completedOrders?: IntFieldUpdateOperationsInput | number
    cancelledOrders?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalReviews?: IntFieldUpdateOperationsInput | number
    hasActivePlan?: BoolFieldUpdateOperationsInput | boolean
    planExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    referralCode?: NullableStringFieldUpdateOperationsInput | string | null
    referredById?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    lastSeenAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notificationsEnabled?: BoolFieldUpdateOperationsInput | boolean
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    referredUsers?: UserUncheckedUpdateManyWithoutReferrerNestedInput
    vehicles?: UserVehicleUncheckedUpdateManyWithoutUserNestedInput
    ordersAsCustomer?: OrderUncheckedUpdateManyWithoutCustomerNestedInput
    ordersAsExecutor?: OrderUncheckedUpdateManyWithoutExecutorNestedInput
    orderResponses?: OrderResponseUncheckedUpdateManyWithoutExecutorNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    userRegions?: UserRegionUncheckedUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUncheckedUpdateManyWithoutAdminNestedInput
    broadcasts?: BroadcastUncheckedUpdateManyWithoutAdminNestedInput
    paymentTransactions?: PaymentTransactionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateWithoutPaymentTransactionsInput = {
    id?: string
    telegramId: bigint | number
    username?: string | null
    firstName: string
    lastName?: string | null
    phone?: string | null
    email?: string | null
    role?: $Enums.RoleType
    balance?: Decimal | DecimalJsLike | number | string
    frozenBalance?: Decimal | DecimalJsLike | number | string
    totalEarned?: Decimal | DecimalJsLike | number | string
    orderLimit?: number
    createLimit?: number
    completedOrders?: number
    cancelledOrders?: number
    averageRating?: Decimal | DecimalJsLike | number | string
    totalReviews?: number
    hasActivePlan?: boolean
    planExpiresAt?: Date | string | null
    referralCode?: string | null
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    lastSeenAt?: Date | string | null
    notificationsEnabled?: boolean
    emailNotifications?: boolean
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    referredUsers?: UserCreateNestedManyWithoutReferrerInput
    referrer?: UserCreateNestedOneWithoutReferredUsersInput
    vehicles?: UserVehicleCreateNestedManyWithoutUserInput
    ordersAsCustomer?: OrderCreateNestedManyWithoutCustomerInput
    ordersAsExecutor?: OrderCreateNestedManyWithoutExecutorInput
    orderResponses?: OrderResponseCreateNestedManyWithoutExecutorInput
    payments?: PaymentCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    userRegions?: UserRegionCreateNestedManyWithoutUserInput
    adminActions?: AdminActionCreateNestedManyWithoutAdminInput
    broadcasts?: BroadcastCreateNestedManyWithoutAdminInput
  }

  export type UserUncheckedCreateWithoutPaymentTransactionsInput = {
    id?: string
    telegramId: bigint | number
    username?: string | null
    firstName: string
    lastName?: string | null
    phone?: string | null
    email?: string | null
    role?: $Enums.RoleType
    balance?: Decimal | DecimalJsLike | number | string
    frozenBalance?: Decimal | DecimalJsLike | number | string
    totalEarned?: Decimal | DecimalJsLike | number | string
    orderLimit?: number
    createLimit?: number
    completedOrders?: number
    cancelledOrders?: number
    averageRating?: Decimal | DecimalJsLike | number | string
    totalReviews?: number
    hasActivePlan?: boolean
    planExpiresAt?: Date | string | null
    referralCode?: string | null
    referredById?: string | null
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    lastSeenAt?: Date | string | null
    notificationsEnabled?: boolean
    emailNotifications?: boolean
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    referredUsers?: UserUncheckedCreateNestedManyWithoutReferrerInput
    vehicles?: UserVehicleUncheckedCreateNestedManyWithoutUserInput
    ordersAsCustomer?: OrderUncheckedCreateNestedManyWithoutCustomerInput
    ordersAsExecutor?: OrderUncheckedCreateNestedManyWithoutExecutorInput
    orderResponses?: OrderResponseUncheckedCreateNestedManyWithoutExecutorInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    userRegions?: UserRegionUncheckedCreateNestedManyWithoutUserInput
    adminActions?: AdminActionUncheckedCreateNestedManyWithoutAdminInput
    broadcasts?: BroadcastUncheckedCreateNestedManyWithoutAdminInput
  }

  export type UserCreateOrConnectWithoutPaymentTransactionsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutPaymentTransactionsInput, UserUncheckedCreateWithoutPaymentTransactionsInput>
  }

  export type UserUpsertWithoutPaymentTransactionsInput = {
    update: XOR<UserUpdateWithoutPaymentTransactionsInput, UserUncheckedUpdateWithoutPaymentTransactionsInput>
    create: XOR<UserCreateWithoutPaymentTransactionsInput, UserUncheckedCreateWithoutPaymentTransactionsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutPaymentTransactionsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutPaymentTransactionsInput, UserUncheckedUpdateWithoutPaymentTransactionsInput>
  }

  export type UserUpdateWithoutPaymentTransactionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    telegramId?: BigIntFieldUpdateOperationsInput | bigint | number
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleTypeFieldUpdateOperationsInput | $Enums.RoleType
    balance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    frozenBalance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalEarned?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    orderLimit?: IntFieldUpdateOperationsInput | number
    createLimit?: IntFieldUpdateOperationsInput | number
    completedOrders?: IntFieldUpdateOperationsInput | number
    cancelledOrders?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalReviews?: IntFieldUpdateOperationsInput | number
    hasActivePlan?: BoolFieldUpdateOperationsInput | boolean
    planExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    referralCode?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    lastSeenAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notificationsEnabled?: BoolFieldUpdateOperationsInput | boolean
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    referredUsers?: UserUpdateManyWithoutReferrerNestedInput
    referrer?: UserUpdateOneWithoutReferredUsersNestedInput
    vehicles?: UserVehicleUpdateManyWithoutUserNestedInput
    ordersAsCustomer?: OrderUpdateManyWithoutCustomerNestedInput
    ordersAsExecutor?: OrderUpdateManyWithoutExecutorNestedInput
    orderResponses?: OrderResponseUpdateManyWithoutExecutorNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    userRegions?: UserRegionUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUpdateManyWithoutAdminNestedInput
    broadcasts?: BroadcastUpdateManyWithoutAdminNestedInput
  }

  export type UserUncheckedUpdateWithoutPaymentTransactionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    telegramId?: BigIntFieldUpdateOperationsInput | bigint | number
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleTypeFieldUpdateOperationsInput | $Enums.RoleType
    balance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    frozenBalance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalEarned?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    orderLimit?: IntFieldUpdateOperationsInput | number
    createLimit?: IntFieldUpdateOperationsInput | number
    completedOrders?: IntFieldUpdateOperationsInput | number
    cancelledOrders?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalReviews?: IntFieldUpdateOperationsInput | number
    hasActivePlan?: BoolFieldUpdateOperationsInput | boolean
    planExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    referralCode?: NullableStringFieldUpdateOperationsInput | string | null
    referredById?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    lastSeenAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notificationsEnabled?: BoolFieldUpdateOperationsInput | boolean
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    referredUsers?: UserUncheckedUpdateManyWithoutReferrerNestedInput
    vehicles?: UserVehicleUncheckedUpdateManyWithoutUserNestedInput
    ordersAsCustomer?: OrderUncheckedUpdateManyWithoutCustomerNestedInput
    ordersAsExecutor?: OrderUncheckedUpdateManyWithoutExecutorNestedInput
    orderResponses?: OrderResponseUncheckedUpdateManyWithoutExecutorNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    userRegions?: UserRegionUncheckedUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUncheckedUpdateManyWithoutAdminNestedInput
    broadcasts?: BroadcastUncheckedUpdateManyWithoutAdminNestedInput
  }

  export type UserCreateWithoutSessionsInput = {
    id?: string
    telegramId: bigint | number
    username?: string | null
    firstName: string
    lastName?: string | null
    phone?: string | null
    email?: string | null
    role?: $Enums.RoleType
    balance?: Decimal | DecimalJsLike | number | string
    frozenBalance?: Decimal | DecimalJsLike | number | string
    totalEarned?: Decimal | DecimalJsLike | number | string
    orderLimit?: number
    createLimit?: number
    completedOrders?: number
    cancelledOrders?: number
    averageRating?: Decimal | DecimalJsLike | number | string
    totalReviews?: number
    hasActivePlan?: boolean
    planExpiresAt?: Date | string | null
    referralCode?: string | null
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    lastSeenAt?: Date | string | null
    notificationsEnabled?: boolean
    emailNotifications?: boolean
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    referredUsers?: UserCreateNestedManyWithoutReferrerInput
    referrer?: UserCreateNestedOneWithoutReferredUsersInput
    vehicles?: UserVehicleCreateNestedManyWithoutUserInput
    ordersAsCustomer?: OrderCreateNestedManyWithoutCustomerInput
    ordersAsExecutor?: OrderCreateNestedManyWithoutExecutorInput
    orderResponses?: OrderResponseCreateNestedManyWithoutExecutorInput
    payments?: PaymentCreateNestedManyWithoutUserInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    userRegions?: UserRegionCreateNestedManyWithoutUserInput
    adminActions?: AdminActionCreateNestedManyWithoutAdminInput
    broadcasts?: BroadcastCreateNestedManyWithoutAdminInput
    paymentTransactions?: PaymentTransactionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutSessionsInput = {
    id?: string
    telegramId: bigint | number
    username?: string | null
    firstName: string
    lastName?: string | null
    phone?: string | null
    email?: string | null
    role?: $Enums.RoleType
    balance?: Decimal | DecimalJsLike | number | string
    frozenBalance?: Decimal | DecimalJsLike | number | string
    totalEarned?: Decimal | DecimalJsLike | number | string
    orderLimit?: number
    createLimit?: number
    completedOrders?: number
    cancelledOrders?: number
    averageRating?: Decimal | DecimalJsLike | number | string
    totalReviews?: number
    hasActivePlan?: boolean
    planExpiresAt?: Date | string | null
    referralCode?: string | null
    referredById?: string | null
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    lastSeenAt?: Date | string | null
    notificationsEnabled?: boolean
    emailNotifications?: boolean
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    referredUsers?: UserUncheckedCreateNestedManyWithoutReferrerInput
    vehicles?: UserVehicleUncheckedCreateNestedManyWithoutUserInput
    ordersAsCustomer?: OrderUncheckedCreateNestedManyWithoutCustomerInput
    ordersAsExecutor?: OrderUncheckedCreateNestedManyWithoutExecutorInput
    orderResponses?: OrderResponseUncheckedCreateNestedManyWithoutExecutorInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    userRegions?: UserRegionUncheckedCreateNestedManyWithoutUserInput
    adminActions?: AdminActionUncheckedCreateNestedManyWithoutAdminInput
    broadcasts?: BroadcastUncheckedCreateNestedManyWithoutAdminInput
    paymentTransactions?: PaymentTransactionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutSessionsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSessionsInput, UserUncheckedCreateWithoutSessionsInput>
  }

  export type UserUpsertWithoutSessionsInput = {
    update: XOR<UserUpdateWithoutSessionsInput, UserUncheckedUpdateWithoutSessionsInput>
    create: XOR<UserCreateWithoutSessionsInput, UserUncheckedCreateWithoutSessionsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSessionsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSessionsInput, UserUncheckedUpdateWithoutSessionsInput>
  }

  export type UserUpdateWithoutSessionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    telegramId?: BigIntFieldUpdateOperationsInput | bigint | number
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleTypeFieldUpdateOperationsInput | $Enums.RoleType
    balance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    frozenBalance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalEarned?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    orderLimit?: IntFieldUpdateOperationsInput | number
    createLimit?: IntFieldUpdateOperationsInput | number
    completedOrders?: IntFieldUpdateOperationsInput | number
    cancelledOrders?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalReviews?: IntFieldUpdateOperationsInput | number
    hasActivePlan?: BoolFieldUpdateOperationsInput | boolean
    planExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    referralCode?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    lastSeenAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notificationsEnabled?: BoolFieldUpdateOperationsInput | boolean
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    referredUsers?: UserUpdateManyWithoutReferrerNestedInput
    referrer?: UserUpdateOneWithoutReferredUsersNestedInput
    vehicles?: UserVehicleUpdateManyWithoutUserNestedInput
    ordersAsCustomer?: OrderUpdateManyWithoutCustomerNestedInput
    ordersAsExecutor?: OrderUpdateManyWithoutExecutorNestedInput
    orderResponses?: OrderResponseUpdateManyWithoutExecutorNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    userRegions?: UserRegionUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUpdateManyWithoutAdminNestedInput
    broadcasts?: BroadcastUpdateManyWithoutAdminNestedInput
    paymentTransactions?: PaymentTransactionUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutSessionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    telegramId?: BigIntFieldUpdateOperationsInput | bigint | number
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleTypeFieldUpdateOperationsInput | $Enums.RoleType
    balance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    frozenBalance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalEarned?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    orderLimit?: IntFieldUpdateOperationsInput | number
    createLimit?: IntFieldUpdateOperationsInput | number
    completedOrders?: IntFieldUpdateOperationsInput | number
    cancelledOrders?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalReviews?: IntFieldUpdateOperationsInput | number
    hasActivePlan?: BoolFieldUpdateOperationsInput | boolean
    planExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    referralCode?: NullableStringFieldUpdateOperationsInput | string | null
    referredById?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    lastSeenAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notificationsEnabled?: BoolFieldUpdateOperationsInput | boolean
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    referredUsers?: UserUncheckedUpdateManyWithoutReferrerNestedInput
    vehicles?: UserVehicleUncheckedUpdateManyWithoutUserNestedInput
    ordersAsCustomer?: OrderUncheckedUpdateManyWithoutCustomerNestedInput
    ordersAsExecutor?: OrderUncheckedUpdateManyWithoutExecutorNestedInput
    orderResponses?: OrderResponseUncheckedUpdateManyWithoutExecutorNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    userRegions?: UserRegionUncheckedUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUncheckedUpdateManyWithoutAdminNestedInput
    broadcasts?: BroadcastUncheckedUpdateManyWithoutAdminNestedInput
    paymentTransactions?: PaymentTransactionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateWithoutNotificationsInput = {
    id?: string
    telegramId: bigint | number
    username?: string | null
    firstName: string
    lastName?: string | null
    phone?: string | null
    email?: string | null
    role?: $Enums.RoleType
    balance?: Decimal | DecimalJsLike | number | string
    frozenBalance?: Decimal | DecimalJsLike | number | string
    totalEarned?: Decimal | DecimalJsLike | number | string
    orderLimit?: number
    createLimit?: number
    completedOrders?: number
    cancelledOrders?: number
    averageRating?: Decimal | DecimalJsLike | number | string
    totalReviews?: number
    hasActivePlan?: boolean
    planExpiresAt?: Date | string | null
    referralCode?: string | null
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    lastSeenAt?: Date | string | null
    notificationsEnabled?: boolean
    emailNotifications?: boolean
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    referredUsers?: UserCreateNestedManyWithoutReferrerInput
    referrer?: UserCreateNestedOneWithoutReferredUsersInput
    vehicles?: UserVehicleCreateNestedManyWithoutUserInput
    ordersAsCustomer?: OrderCreateNestedManyWithoutCustomerInput
    ordersAsExecutor?: OrderCreateNestedManyWithoutExecutorInput
    orderResponses?: OrderResponseCreateNestedManyWithoutExecutorInput
    payments?: PaymentCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    userRegions?: UserRegionCreateNestedManyWithoutUserInput
    adminActions?: AdminActionCreateNestedManyWithoutAdminInput
    broadcasts?: BroadcastCreateNestedManyWithoutAdminInput
    paymentTransactions?: PaymentTransactionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutNotificationsInput = {
    id?: string
    telegramId: bigint | number
    username?: string | null
    firstName: string
    lastName?: string | null
    phone?: string | null
    email?: string | null
    role?: $Enums.RoleType
    balance?: Decimal | DecimalJsLike | number | string
    frozenBalance?: Decimal | DecimalJsLike | number | string
    totalEarned?: Decimal | DecimalJsLike | number | string
    orderLimit?: number
    createLimit?: number
    completedOrders?: number
    cancelledOrders?: number
    averageRating?: Decimal | DecimalJsLike | number | string
    totalReviews?: number
    hasActivePlan?: boolean
    planExpiresAt?: Date | string | null
    referralCode?: string | null
    referredById?: string | null
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    lastSeenAt?: Date | string | null
    notificationsEnabled?: boolean
    emailNotifications?: boolean
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    referredUsers?: UserUncheckedCreateNestedManyWithoutReferrerInput
    vehicles?: UserVehicleUncheckedCreateNestedManyWithoutUserInput
    ordersAsCustomer?: OrderUncheckedCreateNestedManyWithoutCustomerInput
    ordersAsExecutor?: OrderUncheckedCreateNestedManyWithoutExecutorInput
    orderResponses?: OrderResponseUncheckedCreateNestedManyWithoutExecutorInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    userRegions?: UserRegionUncheckedCreateNestedManyWithoutUserInput
    adminActions?: AdminActionUncheckedCreateNestedManyWithoutAdminInput
    broadcasts?: BroadcastUncheckedCreateNestedManyWithoutAdminInput
    paymentTransactions?: PaymentTransactionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutNotificationsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutNotificationsInput, UserUncheckedCreateWithoutNotificationsInput>
  }

  export type UserUpsertWithoutNotificationsInput = {
    update: XOR<UserUpdateWithoutNotificationsInput, UserUncheckedUpdateWithoutNotificationsInput>
    create: XOR<UserCreateWithoutNotificationsInput, UserUncheckedCreateWithoutNotificationsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutNotificationsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutNotificationsInput, UserUncheckedUpdateWithoutNotificationsInput>
  }

  export type UserUpdateWithoutNotificationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    telegramId?: BigIntFieldUpdateOperationsInput | bigint | number
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleTypeFieldUpdateOperationsInput | $Enums.RoleType
    balance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    frozenBalance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalEarned?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    orderLimit?: IntFieldUpdateOperationsInput | number
    createLimit?: IntFieldUpdateOperationsInput | number
    completedOrders?: IntFieldUpdateOperationsInput | number
    cancelledOrders?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalReviews?: IntFieldUpdateOperationsInput | number
    hasActivePlan?: BoolFieldUpdateOperationsInput | boolean
    planExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    referralCode?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    lastSeenAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notificationsEnabled?: BoolFieldUpdateOperationsInput | boolean
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    referredUsers?: UserUpdateManyWithoutReferrerNestedInput
    referrer?: UserUpdateOneWithoutReferredUsersNestedInput
    vehicles?: UserVehicleUpdateManyWithoutUserNestedInput
    ordersAsCustomer?: OrderUpdateManyWithoutCustomerNestedInput
    ordersAsExecutor?: OrderUpdateManyWithoutExecutorNestedInput
    orderResponses?: OrderResponseUpdateManyWithoutExecutorNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    userRegions?: UserRegionUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUpdateManyWithoutAdminNestedInput
    broadcasts?: BroadcastUpdateManyWithoutAdminNestedInput
    paymentTransactions?: PaymentTransactionUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutNotificationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    telegramId?: BigIntFieldUpdateOperationsInput | bigint | number
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleTypeFieldUpdateOperationsInput | $Enums.RoleType
    balance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    frozenBalance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalEarned?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    orderLimit?: IntFieldUpdateOperationsInput | number
    createLimit?: IntFieldUpdateOperationsInput | number
    completedOrders?: IntFieldUpdateOperationsInput | number
    cancelledOrders?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalReviews?: IntFieldUpdateOperationsInput | number
    hasActivePlan?: BoolFieldUpdateOperationsInput | boolean
    planExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    referralCode?: NullableStringFieldUpdateOperationsInput | string | null
    referredById?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    lastSeenAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notificationsEnabled?: BoolFieldUpdateOperationsInput | boolean
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    referredUsers?: UserUncheckedUpdateManyWithoutReferrerNestedInput
    vehicles?: UserVehicleUncheckedUpdateManyWithoutUserNestedInput
    ordersAsCustomer?: OrderUncheckedUpdateManyWithoutCustomerNestedInput
    ordersAsExecutor?: OrderUncheckedUpdateManyWithoutExecutorNestedInput
    orderResponses?: OrderResponseUncheckedUpdateManyWithoutExecutorNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    userRegions?: UserRegionUncheckedUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUncheckedUpdateManyWithoutAdminNestedInput
    broadcasts?: BroadcastUncheckedUpdateManyWithoutAdminNestedInput
    paymentTransactions?: PaymentTransactionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateWithoutAdminActionsInput = {
    id?: string
    telegramId: bigint | number
    username?: string | null
    firstName: string
    lastName?: string | null
    phone?: string | null
    email?: string | null
    role?: $Enums.RoleType
    balance?: Decimal | DecimalJsLike | number | string
    frozenBalance?: Decimal | DecimalJsLike | number | string
    totalEarned?: Decimal | DecimalJsLike | number | string
    orderLimit?: number
    createLimit?: number
    completedOrders?: number
    cancelledOrders?: number
    averageRating?: Decimal | DecimalJsLike | number | string
    totalReviews?: number
    hasActivePlan?: boolean
    planExpiresAt?: Date | string | null
    referralCode?: string | null
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    lastSeenAt?: Date | string | null
    notificationsEnabled?: boolean
    emailNotifications?: boolean
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    referredUsers?: UserCreateNestedManyWithoutReferrerInput
    referrer?: UserCreateNestedOneWithoutReferredUsersInput
    vehicles?: UserVehicleCreateNestedManyWithoutUserInput
    ordersAsCustomer?: OrderCreateNestedManyWithoutCustomerInput
    ordersAsExecutor?: OrderCreateNestedManyWithoutExecutorInput
    orderResponses?: OrderResponseCreateNestedManyWithoutExecutorInput
    payments?: PaymentCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    userRegions?: UserRegionCreateNestedManyWithoutUserInput
    broadcasts?: BroadcastCreateNestedManyWithoutAdminInput
    paymentTransactions?: PaymentTransactionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutAdminActionsInput = {
    id?: string
    telegramId: bigint | number
    username?: string | null
    firstName: string
    lastName?: string | null
    phone?: string | null
    email?: string | null
    role?: $Enums.RoleType
    balance?: Decimal | DecimalJsLike | number | string
    frozenBalance?: Decimal | DecimalJsLike | number | string
    totalEarned?: Decimal | DecimalJsLike | number | string
    orderLimit?: number
    createLimit?: number
    completedOrders?: number
    cancelledOrders?: number
    averageRating?: Decimal | DecimalJsLike | number | string
    totalReviews?: number
    hasActivePlan?: boolean
    planExpiresAt?: Date | string | null
    referralCode?: string | null
    referredById?: string | null
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    lastSeenAt?: Date | string | null
    notificationsEnabled?: boolean
    emailNotifications?: boolean
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    referredUsers?: UserUncheckedCreateNestedManyWithoutReferrerInput
    vehicles?: UserVehicleUncheckedCreateNestedManyWithoutUserInput
    ordersAsCustomer?: OrderUncheckedCreateNestedManyWithoutCustomerInput
    ordersAsExecutor?: OrderUncheckedCreateNestedManyWithoutExecutorInput
    orderResponses?: OrderResponseUncheckedCreateNestedManyWithoutExecutorInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    userRegions?: UserRegionUncheckedCreateNestedManyWithoutUserInput
    broadcasts?: BroadcastUncheckedCreateNestedManyWithoutAdminInput
    paymentTransactions?: PaymentTransactionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutAdminActionsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAdminActionsInput, UserUncheckedCreateWithoutAdminActionsInput>
  }

  export type UserUpsertWithoutAdminActionsInput = {
    update: XOR<UserUpdateWithoutAdminActionsInput, UserUncheckedUpdateWithoutAdminActionsInput>
    create: XOR<UserCreateWithoutAdminActionsInput, UserUncheckedCreateWithoutAdminActionsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutAdminActionsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutAdminActionsInput, UserUncheckedUpdateWithoutAdminActionsInput>
  }

  export type UserUpdateWithoutAdminActionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    telegramId?: BigIntFieldUpdateOperationsInput | bigint | number
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleTypeFieldUpdateOperationsInput | $Enums.RoleType
    balance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    frozenBalance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalEarned?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    orderLimit?: IntFieldUpdateOperationsInput | number
    createLimit?: IntFieldUpdateOperationsInput | number
    completedOrders?: IntFieldUpdateOperationsInput | number
    cancelledOrders?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalReviews?: IntFieldUpdateOperationsInput | number
    hasActivePlan?: BoolFieldUpdateOperationsInput | boolean
    planExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    referralCode?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    lastSeenAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notificationsEnabled?: BoolFieldUpdateOperationsInput | boolean
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    referredUsers?: UserUpdateManyWithoutReferrerNestedInput
    referrer?: UserUpdateOneWithoutReferredUsersNestedInput
    vehicles?: UserVehicleUpdateManyWithoutUserNestedInput
    ordersAsCustomer?: OrderUpdateManyWithoutCustomerNestedInput
    ordersAsExecutor?: OrderUpdateManyWithoutExecutorNestedInput
    orderResponses?: OrderResponseUpdateManyWithoutExecutorNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    userRegions?: UserRegionUpdateManyWithoutUserNestedInput
    broadcasts?: BroadcastUpdateManyWithoutAdminNestedInput
    paymentTransactions?: PaymentTransactionUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutAdminActionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    telegramId?: BigIntFieldUpdateOperationsInput | bigint | number
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleTypeFieldUpdateOperationsInput | $Enums.RoleType
    balance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    frozenBalance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalEarned?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    orderLimit?: IntFieldUpdateOperationsInput | number
    createLimit?: IntFieldUpdateOperationsInput | number
    completedOrders?: IntFieldUpdateOperationsInput | number
    cancelledOrders?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalReviews?: IntFieldUpdateOperationsInput | number
    hasActivePlan?: BoolFieldUpdateOperationsInput | boolean
    planExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    referralCode?: NullableStringFieldUpdateOperationsInput | string | null
    referredById?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    lastSeenAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notificationsEnabled?: BoolFieldUpdateOperationsInput | boolean
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    referredUsers?: UserUncheckedUpdateManyWithoutReferrerNestedInput
    vehicles?: UserVehicleUncheckedUpdateManyWithoutUserNestedInput
    ordersAsCustomer?: OrderUncheckedUpdateManyWithoutCustomerNestedInput
    ordersAsExecutor?: OrderUncheckedUpdateManyWithoutExecutorNestedInput
    orderResponses?: OrderResponseUncheckedUpdateManyWithoutExecutorNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    userRegions?: UserRegionUncheckedUpdateManyWithoutUserNestedInput
    broadcasts?: BroadcastUncheckedUpdateManyWithoutAdminNestedInput
    paymentTransactions?: PaymentTransactionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateWithoutBroadcastsInput = {
    id?: string
    telegramId: bigint | number
    username?: string | null
    firstName: string
    lastName?: string | null
    phone?: string | null
    email?: string | null
    role?: $Enums.RoleType
    balance?: Decimal | DecimalJsLike | number | string
    frozenBalance?: Decimal | DecimalJsLike | number | string
    totalEarned?: Decimal | DecimalJsLike | number | string
    orderLimit?: number
    createLimit?: number
    completedOrders?: number
    cancelledOrders?: number
    averageRating?: Decimal | DecimalJsLike | number | string
    totalReviews?: number
    hasActivePlan?: boolean
    planExpiresAt?: Date | string | null
    referralCode?: string | null
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    lastSeenAt?: Date | string | null
    notificationsEnabled?: boolean
    emailNotifications?: boolean
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    referredUsers?: UserCreateNestedManyWithoutReferrerInput
    referrer?: UserCreateNestedOneWithoutReferredUsersInput
    vehicles?: UserVehicleCreateNestedManyWithoutUserInput
    ordersAsCustomer?: OrderCreateNestedManyWithoutCustomerInput
    ordersAsExecutor?: OrderCreateNestedManyWithoutExecutorInput
    orderResponses?: OrderResponseCreateNestedManyWithoutExecutorInput
    payments?: PaymentCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    userRegions?: UserRegionCreateNestedManyWithoutUserInput
    adminActions?: AdminActionCreateNestedManyWithoutAdminInput
    paymentTransactions?: PaymentTransactionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutBroadcastsInput = {
    id?: string
    telegramId: bigint | number
    username?: string | null
    firstName: string
    lastName?: string | null
    phone?: string | null
    email?: string | null
    role?: $Enums.RoleType
    balance?: Decimal | DecimalJsLike | number | string
    frozenBalance?: Decimal | DecimalJsLike | number | string
    totalEarned?: Decimal | DecimalJsLike | number | string
    orderLimit?: number
    createLimit?: number
    completedOrders?: number
    cancelledOrders?: number
    averageRating?: Decimal | DecimalJsLike | number | string
    totalReviews?: number
    hasActivePlan?: boolean
    planExpiresAt?: Date | string | null
    referralCode?: string | null
    referredById?: string | null
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    lastSeenAt?: Date | string | null
    notificationsEnabled?: boolean
    emailNotifications?: boolean
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    referredUsers?: UserUncheckedCreateNestedManyWithoutReferrerInput
    vehicles?: UserVehicleUncheckedCreateNestedManyWithoutUserInput
    ordersAsCustomer?: OrderUncheckedCreateNestedManyWithoutCustomerInput
    ordersAsExecutor?: OrderUncheckedCreateNestedManyWithoutExecutorInput
    orderResponses?: OrderResponseUncheckedCreateNestedManyWithoutExecutorInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    userRegions?: UserRegionUncheckedCreateNestedManyWithoutUserInput
    adminActions?: AdminActionUncheckedCreateNestedManyWithoutAdminInput
    paymentTransactions?: PaymentTransactionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutBroadcastsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutBroadcastsInput, UserUncheckedCreateWithoutBroadcastsInput>
  }

  export type RegionCreateWithoutBroadcastsInput = {
    id?: string
    name: string
    code: string
    regionCode: string
    subRegions?: JsonNullValueInput | InputJsonValue
    centerLatitude?: Decimal | DecimalJsLike | number | string | null
    centerLongitude?: Decimal | DecimalJsLike | number | string | null
    oneTimePlanPrice: Decimal | DecimalJsLike | number | string
    monthlyPlanPrice: Decimal | DecimalJsLike | number | string
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    orders?: OrderCreateNestedManyWithoutRegionInput
    userRegions?: UserRegionCreateNestedManyWithoutRegionInput
  }

  export type RegionUncheckedCreateWithoutBroadcastsInput = {
    id?: string
    name: string
    code: string
    regionCode: string
    subRegions?: JsonNullValueInput | InputJsonValue
    centerLatitude?: Decimal | DecimalJsLike | number | string | null
    centerLongitude?: Decimal | DecimalJsLike | number | string | null
    oneTimePlanPrice: Decimal | DecimalJsLike | number | string
    monthlyPlanPrice: Decimal | DecimalJsLike | number | string
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    orders?: OrderUncheckedCreateNestedManyWithoutRegionInput
    userRegions?: UserRegionUncheckedCreateNestedManyWithoutRegionInput
  }

  export type RegionCreateOrConnectWithoutBroadcastsInput = {
    where: RegionWhereUniqueInput
    create: XOR<RegionCreateWithoutBroadcastsInput, RegionUncheckedCreateWithoutBroadcastsInput>
  }

  export type UserUpsertWithoutBroadcastsInput = {
    update: XOR<UserUpdateWithoutBroadcastsInput, UserUncheckedUpdateWithoutBroadcastsInput>
    create: XOR<UserCreateWithoutBroadcastsInput, UserUncheckedCreateWithoutBroadcastsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutBroadcastsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutBroadcastsInput, UserUncheckedUpdateWithoutBroadcastsInput>
  }

  export type UserUpdateWithoutBroadcastsInput = {
    id?: StringFieldUpdateOperationsInput | string
    telegramId?: BigIntFieldUpdateOperationsInput | bigint | number
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleTypeFieldUpdateOperationsInput | $Enums.RoleType
    balance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    frozenBalance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalEarned?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    orderLimit?: IntFieldUpdateOperationsInput | number
    createLimit?: IntFieldUpdateOperationsInput | number
    completedOrders?: IntFieldUpdateOperationsInput | number
    cancelledOrders?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalReviews?: IntFieldUpdateOperationsInput | number
    hasActivePlan?: BoolFieldUpdateOperationsInput | boolean
    planExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    referralCode?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    lastSeenAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notificationsEnabled?: BoolFieldUpdateOperationsInput | boolean
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    referredUsers?: UserUpdateManyWithoutReferrerNestedInput
    referrer?: UserUpdateOneWithoutReferredUsersNestedInput
    vehicles?: UserVehicleUpdateManyWithoutUserNestedInput
    ordersAsCustomer?: OrderUpdateManyWithoutCustomerNestedInput
    ordersAsExecutor?: OrderUpdateManyWithoutExecutorNestedInput
    orderResponses?: OrderResponseUpdateManyWithoutExecutorNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    userRegions?: UserRegionUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUpdateManyWithoutAdminNestedInput
    paymentTransactions?: PaymentTransactionUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutBroadcastsInput = {
    id?: StringFieldUpdateOperationsInput | string
    telegramId?: BigIntFieldUpdateOperationsInput | bigint | number
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleTypeFieldUpdateOperationsInput | $Enums.RoleType
    balance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    frozenBalance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalEarned?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    orderLimit?: IntFieldUpdateOperationsInput | number
    createLimit?: IntFieldUpdateOperationsInput | number
    completedOrders?: IntFieldUpdateOperationsInput | number
    cancelledOrders?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalReviews?: IntFieldUpdateOperationsInput | number
    hasActivePlan?: BoolFieldUpdateOperationsInput | boolean
    planExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    referralCode?: NullableStringFieldUpdateOperationsInput | string | null
    referredById?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    lastSeenAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notificationsEnabled?: BoolFieldUpdateOperationsInput | boolean
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    referredUsers?: UserUncheckedUpdateManyWithoutReferrerNestedInput
    vehicles?: UserVehicleUncheckedUpdateManyWithoutUserNestedInput
    ordersAsCustomer?: OrderUncheckedUpdateManyWithoutCustomerNestedInput
    ordersAsExecutor?: OrderUncheckedUpdateManyWithoutExecutorNestedInput
    orderResponses?: OrderResponseUncheckedUpdateManyWithoutExecutorNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    userRegions?: UserRegionUncheckedUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUncheckedUpdateManyWithoutAdminNestedInput
    paymentTransactions?: PaymentTransactionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type RegionUpsertWithoutBroadcastsInput = {
    update: XOR<RegionUpdateWithoutBroadcastsInput, RegionUncheckedUpdateWithoutBroadcastsInput>
    create: XOR<RegionCreateWithoutBroadcastsInput, RegionUncheckedCreateWithoutBroadcastsInput>
    where?: RegionWhereInput
  }

  export type RegionUpdateToOneWithWhereWithoutBroadcastsInput = {
    where?: RegionWhereInput
    data: XOR<RegionUpdateWithoutBroadcastsInput, RegionUncheckedUpdateWithoutBroadcastsInput>
  }

  export type RegionUpdateWithoutBroadcastsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    regionCode?: StringFieldUpdateOperationsInput | string
    subRegions?: JsonNullValueInput | InputJsonValue
    centerLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    centerLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    oneTimePlanPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    monthlyPlanPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orders?: OrderUpdateManyWithoutRegionNestedInput
    userRegions?: UserRegionUpdateManyWithoutRegionNestedInput
  }

  export type RegionUncheckedUpdateWithoutBroadcastsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    regionCode?: StringFieldUpdateOperationsInput | string
    subRegions?: JsonNullValueInput | InputJsonValue
    centerLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    centerLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    oneTimePlanPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    monthlyPlanPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orders?: OrderUncheckedUpdateManyWithoutRegionNestedInput
    userRegions?: UserRegionUncheckedUpdateManyWithoutRegionNestedInput
  }

  export type UserCreateManyReferrerInput = {
    id?: string
    telegramId: bigint | number
    username?: string | null
    firstName: string
    lastName?: string | null
    phone?: string | null
    email?: string | null
    role?: $Enums.RoleType
    balance?: Decimal | DecimalJsLike | number | string
    frozenBalance?: Decimal | DecimalJsLike | number | string
    totalEarned?: Decimal | DecimalJsLike | number | string
    orderLimit?: number
    createLimit?: number
    completedOrders?: number
    cancelledOrders?: number
    averageRating?: Decimal | DecimalJsLike | number | string
    totalReviews?: number
    hasActivePlan?: boolean
    planExpiresAt?: Date | string | null
    referralCode?: string | null
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    lastSeenAt?: Date | string | null
    notificationsEnabled?: boolean
    emailNotifications?: boolean
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserVehicleCreateManyUserInput = {
    id?: string
    subtypeId: string
    brand?: string | null
    model?: string | null
    year?: number | null
    licensePlate?: string | null
    color?: string | null
    loadCapacity?: Decimal | DecimalJsLike | number | string | null
    volumeCapacity?: Decimal | DecimalJsLike | number | string | null
    hasRefrigerator?: boolean
    hasLifting?: boolean
    canCarryFragile?: boolean
    photos?: JsonNullValueInput | InputJsonValue
    documents?: JsonNullValueInput | InputJsonValue
    isActive?: boolean
    isVerified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OrderCreateManyCustomerInput = {
    id?: string
    orderNumber: string
    executorId?: string | null
    regionId: string
    vehicleSubtypeId?: string | null
    type: $Enums.OrderType
    title: string
    description: string
    pickupAddress?: string | null
    deliveryAddress?: string | null
    workAddress?: string | null
    pickupLatitude?: Decimal | DecimalJsLike | number | string | null
    pickupLongitude?: Decimal | DecimalJsLike | number | string | null
    deliveryLatitude?: Decimal | DecimalJsLike | number | string | null
    deliveryLongitude?: Decimal | DecimalJsLike | number | string | null
    regionCode: string
    subRegion?: string | null
    scheduledDate?: Date | string | null
    scheduledTime?: string | null
    deadlineDate?: Date | string | null
    isUrgent?: boolean
    budgetFrom?: Decimal | DecimalJsLike | number | string | null
    budgetTo?: Decimal | DecimalJsLike | number | string | null
    proposedPrice?: Decimal | DecimalJsLike | number | string | null
    agreedPrice?: Decimal | DecimalJsLike | number | string | null
    isPriceFixed?: boolean
    cargoWeight?: Decimal | DecimalJsLike | number | string | null
    cargoVolume?: Decimal | DecimalJsLike | number | string | null
    cargoDescription?: string | null
    estimatedDistance?: Decimal | DecimalJsLike | number | string | null
    needsRefrigerator?: boolean
    needsLifting?: boolean
    isFragile?: boolean
    passengerCount?: number | null
    requirements?: string | null
    customerComment?: string | null
    executorComment?: string | null
    status?: $Enums.OrderStatus
    moderationComment?: string | null
    moderatedAt?: Date | string | null
    moderatedById?: string | null
    isSentToExecutors?: boolean
    sentToAllRegions?: boolean
    viewsCount?: number
    responsesCount?: number
    contactPhone?: string | null
    contactName?: string | null
    photos?: JsonNullValueInput | InputJsonValue
    documents?: JsonNullValueInput | InputJsonValue
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OrderCreateManyExecutorInput = {
    id?: string
    orderNumber: string
    customerId: string
    regionId: string
    vehicleSubtypeId?: string | null
    type: $Enums.OrderType
    title: string
    description: string
    pickupAddress?: string | null
    deliveryAddress?: string | null
    workAddress?: string | null
    pickupLatitude?: Decimal | DecimalJsLike | number | string | null
    pickupLongitude?: Decimal | DecimalJsLike | number | string | null
    deliveryLatitude?: Decimal | DecimalJsLike | number | string | null
    deliveryLongitude?: Decimal | DecimalJsLike | number | string | null
    regionCode: string
    subRegion?: string | null
    scheduledDate?: Date | string | null
    scheduledTime?: string | null
    deadlineDate?: Date | string | null
    isUrgent?: boolean
    budgetFrom?: Decimal | DecimalJsLike | number | string | null
    budgetTo?: Decimal | DecimalJsLike | number | string | null
    proposedPrice?: Decimal | DecimalJsLike | number | string | null
    agreedPrice?: Decimal | DecimalJsLike | number | string | null
    isPriceFixed?: boolean
    cargoWeight?: Decimal | DecimalJsLike | number | string | null
    cargoVolume?: Decimal | DecimalJsLike | number | string | null
    cargoDescription?: string | null
    estimatedDistance?: Decimal | DecimalJsLike | number | string | null
    needsRefrigerator?: boolean
    needsLifting?: boolean
    isFragile?: boolean
    passengerCount?: number | null
    requirements?: string | null
    customerComment?: string | null
    executorComment?: string | null
    status?: $Enums.OrderStatus
    moderationComment?: string | null
    moderatedAt?: Date | string | null
    moderatedById?: string | null
    isSentToExecutors?: boolean
    sentToAllRegions?: boolean
    viewsCount?: number
    responsesCount?: number
    contactPhone?: string | null
    contactName?: string | null
    photos?: JsonNullValueInput | InputJsonValue
    documents?: JsonNullValueInput | InputJsonValue
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OrderResponseCreateManyExecutorInput = {
    id?: string
    orderId: string
    proposedPrice?: Decimal | DecimalJsLike | number | string | null
    comment?: string | null
    estimatedDuration?: string | null
    status?: string
    vehiclePhotos?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PaymentCreateManyUserInput = {
    id?: string
    tinkoffPaymentId?: string | null
    tinkoffStatus?: string | null
    amount: Decimal | DecimalJsLike | number | string
    description: string
    status?: $Enums.PaymentStatus
    metadata?: NullableJsonNullValueInput | InputJsonValue
    paidAt?: Date | string | null
    expiresAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SessionCreateManyUserInput = {
    id?: string
    clientType: $Enums.ClientType
    chatId?: bigint | number | null
    webAppInitData?: string | null
    userAgent?: string | null
    ipAddress?: string | null
    currentState?: string | null
    contextData?: NullableJsonNullValueInput | InputJsonValue
    lastActivity?: Date | string
    expiresAt: Date | string
    status?: $Enums.SessionStatus
    deviceInfo?: NullableJsonNullValueInput | InputJsonValue
    timezone?: string | null
    language?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type NotificationCreateManyUserInput = {
    id?: string
    title: string
    message: string
    type: string
    sendToTelegram?: boolean
    sendToEmail?: boolean
    sendToWebApp?: boolean
    isRead?: boolean
    isDelivered?: boolean
    scheduledFor?: Date | string | null
    sentAt?: Date | string | null
    iconUrl?: string | null
    actionUrl?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserRegionCreateManyUserInput = {
    id?: string
    regionId: string
    regionCode: string
    activeSubRegions?: JsonNullValueInput | InputJsonValue
    planType: $Enums.TariffType
    paidUntil?: Date | string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AdminActionCreateManyAdminInput = {
    id?: string
    type: $Enums.AdminActionType
    targetId?: string | null
    targetType?: string | null
    description: string
    comment?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    ipAddress?: string | null
    userAgent?: string | null
    clientType?: $Enums.ClientType | null
    createdAt?: Date | string
  }

  export type BroadcastCreateManyAdminInput = {
    id?: string
    title: string
    message: string
    imageUrl?: string | null
    actionUrl?: string | null
    target: $Enums.BroadcastTarget
    targetRegionId?: string | null
    sendToBot?: boolean
    sendToWebApp?: boolean
    status?: $Enums.BroadcastStatus
    scheduledFor?: Date | string | null
    totalRecipients?: number
    sentCount?: number
    deliveredCount?: number
    readCount?: number
    clickCount?: number
    failedCount?: number
    errorMessage?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PaymentTransactionCreateManyUserInput = {
    id?: string
    orderId?: string | null
    type: string
    amount: Decimal | DecimalJsLike | number | string
    description: string
    status: string
    paymentMethod?: string | null
    externalId?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserUpdateWithoutReferrerInput = {
    id?: StringFieldUpdateOperationsInput | string
    telegramId?: BigIntFieldUpdateOperationsInput | bigint | number
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleTypeFieldUpdateOperationsInput | $Enums.RoleType
    balance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    frozenBalance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalEarned?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    orderLimit?: IntFieldUpdateOperationsInput | number
    createLimit?: IntFieldUpdateOperationsInput | number
    completedOrders?: IntFieldUpdateOperationsInput | number
    cancelledOrders?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalReviews?: IntFieldUpdateOperationsInput | number
    hasActivePlan?: BoolFieldUpdateOperationsInput | boolean
    planExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    referralCode?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    lastSeenAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notificationsEnabled?: BoolFieldUpdateOperationsInput | boolean
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    referredUsers?: UserUpdateManyWithoutReferrerNestedInput
    vehicles?: UserVehicleUpdateManyWithoutUserNestedInput
    ordersAsCustomer?: OrderUpdateManyWithoutCustomerNestedInput
    ordersAsExecutor?: OrderUpdateManyWithoutExecutorNestedInput
    orderResponses?: OrderResponseUpdateManyWithoutExecutorNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    userRegions?: UserRegionUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUpdateManyWithoutAdminNestedInput
    broadcasts?: BroadcastUpdateManyWithoutAdminNestedInput
    paymentTransactions?: PaymentTransactionUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutReferrerInput = {
    id?: StringFieldUpdateOperationsInput | string
    telegramId?: BigIntFieldUpdateOperationsInput | bigint | number
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleTypeFieldUpdateOperationsInput | $Enums.RoleType
    balance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    frozenBalance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalEarned?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    orderLimit?: IntFieldUpdateOperationsInput | number
    createLimit?: IntFieldUpdateOperationsInput | number
    completedOrders?: IntFieldUpdateOperationsInput | number
    cancelledOrders?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalReviews?: IntFieldUpdateOperationsInput | number
    hasActivePlan?: BoolFieldUpdateOperationsInput | boolean
    planExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    referralCode?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    lastSeenAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notificationsEnabled?: BoolFieldUpdateOperationsInput | boolean
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    referredUsers?: UserUncheckedUpdateManyWithoutReferrerNestedInput
    vehicles?: UserVehicleUncheckedUpdateManyWithoutUserNestedInput
    ordersAsCustomer?: OrderUncheckedUpdateManyWithoutCustomerNestedInput
    ordersAsExecutor?: OrderUncheckedUpdateManyWithoutExecutorNestedInput
    orderResponses?: OrderResponseUncheckedUpdateManyWithoutExecutorNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    userRegions?: UserRegionUncheckedUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUncheckedUpdateManyWithoutAdminNestedInput
    broadcasts?: BroadcastUncheckedUpdateManyWithoutAdminNestedInput
    paymentTransactions?: PaymentTransactionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateManyWithoutReferrerInput = {
    id?: StringFieldUpdateOperationsInput | string
    telegramId?: BigIntFieldUpdateOperationsInput | bigint | number
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleTypeFieldUpdateOperationsInput | $Enums.RoleType
    balance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    frozenBalance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalEarned?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    orderLimit?: IntFieldUpdateOperationsInput | number
    createLimit?: IntFieldUpdateOperationsInput | number
    completedOrders?: IntFieldUpdateOperationsInput | number
    cancelledOrders?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalReviews?: IntFieldUpdateOperationsInput | number
    hasActivePlan?: BoolFieldUpdateOperationsInput | boolean
    planExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    referralCode?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    lastSeenAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notificationsEnabled?: BoolFieldUpdateOperationsInput | boolean
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserVehicleUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    brand?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    licensePlate?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    loadCapacity?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    volumeCapacity?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    hasRefrigerator?: BoolFieldUpdateOperationsInput | boolean
    hasLifting?: BoolFieldUpdateOperationsInput | boolean
    canCarryFragile?: BoolFieldUpdateOperationsInput | boolean
    photos?: JsonNullValueInput | InputJsonValue
    documents?: JsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    subtype?: VehicleSubtypeUpdateOneRequiredWithoutUserVehiclesNestedInput
  }

  export type UserVehicleUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    subtypeId?: StringFieldUpdateOperationsInput | string
    brand?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    licensePlate?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    loadCapacity?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    volumeCapacity?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    hasRefrigerator?: BoolFieldUpdateOperationsInput | boolean
    hasLifting?: BoolFieldUpdateOperationsInput | boolean
    canCarryFragile?: BoolFieldUpdateOperationsInput | boolean
    photos?: JsonNullValueInput | InputJsonValue
    documents?: JsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserVehicleUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    subtypeId?: StringFieldUpdateOperationsInput | string
    brand?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    licensePlate?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    loadCapacity?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    volumeCapacity?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    hasRefrigerator?: BoolFieldUpdateOperationsInput | boolean
    hasLifting?: BoolFieldUpdateOperationsInput | boolean
    canCarryFragile?: BoolFieldUpdateOperationsInput | boolean
    photos?: JsonNullValueInput | InputJsonValue
    documents?: JsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderUpdateWithoutCustomerInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    type?: EnumOrderTypeFieldUpdateOperationsInput | $Enums.OrderType
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    pickupAddress?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    workAddress?: NullableStringFieldUpdateOperationsInput | string | null
    pickupLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    pickupLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliveryLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliveryLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    regionCode?: StringFieldUpdateOperationsInput | string
    subRegion?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledTime?: NullableStringFieldUpdateOperationsInput | string | null
    deadlineDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isUrgent?: BoolFieldUpdateOperationsInput | boolean
    budgetFrom?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    budgetTo?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    proposedPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    agreedPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isPriceFixed?: BoolFieldUpdateOperationsInput | boolean
    cargoWeight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cargoVolume?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cargoDescription?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedDistance?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    needsRefrigerator?: BoolFieldUpdateOperationsInput | boolean
    needsLifting?: BoolFieldUpdateOperationsInput | boolean
    isFragile?: BoolFieldUpdateOperationsInput | boolean
    passengerCount?: NullableIntFieldUpdateOperationsInput | number | null
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    customerComment?: NullableStringFieldUpdateOperationsInput | string | null
    executorComment?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    moderationComment?: NullableStringFieldUpdateOperationsInput | string | null
    moderatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    moderatedById?: NullableStringFieldUpdateOperationsInput | string | null
    isSentToExecutors?: BoolFieldUpdateOperationsInput | boolean
    sentToAllRegions?: BoolFieldUpdateOperationsInput | boolean
    viewsCount?: IntFieldUpdateOperationsInput | number
    responsesCount?: IntFieldUpdateOperationsInput | number
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    photos?: JsonNullValueInput | InputJsonValue
    documents?: JsonNullValueInput | InputJsonValue
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    executor?: UserUpdateOneWithoutOrdersAsExecutorNestedInput
    region?: RegionUpdateOneRequiredWithoutOrdersNestedInput
    vehicleSubtype?: VehicleSubtypeUpdateOneWithoutOrdersNestedInput
    responses?: OrderResponseUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutCustomerInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    executorId?: NullableStringFieldUpdateOperationsInput | string | null
    regionId?: StringFieldUpdateOperationsInput | string
    vehicleSubtypeId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumOrderTypeFieldUpdateOperationsInput | $Enums.OrderType
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    pickupAddress?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    workAddress?: NullableStringFieldUpdateOperationsInput | string | null
    pickupLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    pickupLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliveryLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliveryLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    regionCode?: StringFieldUpdateOperationsInput | string
    subRegion?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledTime?: NullableStringFieldUpdateOperationsInput | string | null
    deadlineDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isUrgent?: BoolFieldUpdateOperationsInput | boolean
    budgetFrom?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    budgetTo?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    proposedPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    agreedPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isPriceFixed?: BoolFieldUpdateOperationsInput | boolean
    cargoWeight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cargoVolume?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cargoDescription?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedDistance?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    needsRefrigerator?: BoolFieldUpdateOperationsInput | boolean
    needsLifting?: BoolFieldUpdateOperationsInput | boolean
    isFragile?: BoolFieldUpdateOperationsInput | boolean
    passengerCount?: NullableIntFieldUpdateOperationsInput | number | null
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    customerComment?: NullableStringFieldUpdateOperationsInput | string | null
    executorComment?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    moderationComment?: NullableStringFieldUpdateOperationsInput | string | null
    moderatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    moderatedById?: NullableStringFieldUpdateOperationsInput | string | null
    isSentToExecutors?: BoolFieldUpdateOperationsInput | boolean
    sentToAllRegions?: BoolFieldUpdateOperationsInput | boolean
    viewsCount?: IntFieldUpdateOperationsInput | number
    responsesCount?: IntFieldUpdateOperationsInput | number
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    photos?: JsonNullValueInput | InputJsonValue
    documents?: JsonNullValueInput | InputJsonValue
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    responses?: OrderResponseUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateManyWithoutCustomerInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    executorId?: NullableStringFieldUpdateOperationsInput | string | null
    regionId?: StringFieldUpdateOperationsInput | string
    vehicleSubtypeId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumOrderTypeFieldUpdateOperationsInput | $Enums.OrderType
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    pickupAddress?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    workAddress?: NullableStringFieldUpdateOperationsInput | string | null
    pickupLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    pickupLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliveryLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliveryLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    regionCode?: StringFieldUpdateOperationsInput | string
    subRegion?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledTime?: NullableStringFieldUpdateOperationsInput | string | null
    deadlineDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isUrgent?: BoolFieldUpdateOperationsInput | boolean
    budgetFrom?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    budgetTo?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    proposedPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    agreedPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isPriceFixed?: BoolFieldUpdateOperationsInput | boolean
    cargoWeight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cargoVolume?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cargoDescription?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedDistance?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    needsRefrigerator?: BoolFieldUpdateOperationsInput | boolean
    needsLifting?: BoolFieldUpdateOperationsInput | boolean
    isFragile?: BoolFieldUpdateOperationsInput | boolean
    passengerCount?: NullableIntFieldUpdateOperationsInput | number | null
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    customerComment?: NullableStringFieldUpdateOperationsInput | string | null
    executorComment?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    moderationComment?: NullableStringFieldUpdateOperationsInput | string | null
    moderatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    moderatedById?: NullableStringFieldUpdateOperationsInput | string | null
    isSentToExecutors?: BoolFieldUpdateOperationsInput | boolean
    sentToAllRegions?: BoolFieldUpdateOperationsInput | boolean
    viewsCount?: IntFieldUpdateOperationsInput | number
    responsesCount?: IntFieldUpdateOperationsInput | number
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    photos?: JsonNullValueInput | InputJsonValue
    documents?: JsonNullValueInput | InputJsonValue
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderUpdateWithoutExecutorInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    type?: EnumOrderTypeFieldUpdateOperationsInput | $Enums.OrderType
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    pickupAddress?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    workAddress?: NullableStringFieldUpdateOperationsInput | string | null
    pickupLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    pickupLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliveryLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliveryLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    regionCode?: StringFieldUpdateOperationsInput | string
    subRegion?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledTime?: NullableStringFieldUpdateOperationsInput | string | null
    deadlineDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isUrgent?: BoolFieldUpdateOperationsInput | boolean
    budgetFrom?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    budgetTo?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    proposedPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    agreedPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isPriceFixed?: BoolFieldUpdateOperationsInput | boolean
    cargoWeight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cargoVolume?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cargoDescription?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedDistance?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    needsRefrigerator?: BoolFieldUpdateOperationsInput | boolean
    needsLifting?: BoolFieldUpdateOperationsInput | boolean
    isFragile?: BoolFieldUpdateOperationsInput | boolean
    passengerCount?: NullableIntFieldUpdateOperationsInput | number | null
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    customerComment?: NullableStringFieldUpdateOperationsInput | string | null
    executorComment?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    moderationComment?: NullableStringFieldUpdateOperationsInput | string | null
    moderatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    moderatedById?: NullableStringFieldUpdateOperationsInput | string | null
    isSentToExecutors?: BoolFieldUpdateOperationsInput | boolean
    sentToAllRegions?: BoolFieldUpdateOperationsInput | boolean
    viewsCount?: IntFieldUpdateOperationsInput | number
    responsesCount?: IntFieldUpdateOperationsInput | number
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    photos?: JsonNullValueInput | InputJsonValue
    documents?: JsonNullValueInput | InputJsonValue
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    customer?: UserUpdateOneRequiredWithoutOrdersAsCustomerNestedInput
    region?: RegionUpdateOneRequiredWithoutOrdersNestedInput
    vehicleSubtype?: VehicleSubtypeUpdateOneWithoutOrdersNestedInput
    responses?: OrderResponseUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutExecutorInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    customerId?: StringFieldUpdateOperationsInput | string
    regionId?: StringFieldUpdateOperationsInput | string
    vehicleSubtypeId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumOrderTypeFieldUpdateOperationsInput | $Enums.OrderType
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    pickupAddress?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    workAddress?: NullableStringFieldUpdateOperationsInput | string | null
    pickupLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    pickupLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliveryLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliveryLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    regionCode?: StringFieldUpdateOperationsInput | string
    subRegion?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledTime?: NullableStringFieldUpdateOperationsInput | string | null
    deadlineDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isUrgent?: BoolFieldUpdateOperationsInput | boolean
    budgetFrom?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    budgetTo?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    proposedPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    agreedPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isPriceFixed?: BoolFieldUpdateOperationsInput | boolean
    cargoWeight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cargoVolume?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cargoDescription?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedDistance?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    needsRefrigerator?: BoolFieldUpdateOperationsInput | boolean
    needsLifting?: BoolFieldUpdateOperationsInput | boolean
    isFragile?: BoolFieldUpdateOperationsInput | boolean
    passengerCount?: NullableIntFieldUpdateOperationsInput | number | null
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    customerComment?: NullableStringFieldUpdateOperationsInput | string | null
    executorComment?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    moderationComment?: NullableStringFieldUpdateOperationsInput | string | null
    moderatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    moderatedById?: NullableStringFieldUpdateOperationsInput | string | null
    isSentToExecutors?: BoolFieldUpdateOperationsInput | boolean
    sentToAllRegions?: BoolFieldUpdateOperationsInput | boolean
    viewsCount?: IntFieldUpdateOperationsInput | number
    responsesCount?: IntFieldUpdateOperationsInput | number
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    photos?: JsonNullValueInput | InputJsonValue
    documents?: JsonNullValueInput | InputJsonValue
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    responses?: OrderResponseUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateManyWithoutExecutorInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    customerId?: StringFieldUpdateOperationsInput | string
    regionId?: StringFieldUpdateOperationsInput | string
    vehicleSubtypeId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumOrderTypeFieldUpdateOperationsInput | $Enums.OrderType
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    pickupAddress?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    workAddress?: NullableStringFieldUpdateOperationsInput | string | null
    pickupLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    pickupLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliveryLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliveryLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    regionCode?: StringFieldUpdateOperationsInput | string
    subRegion?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledTime?: NullableStringFieldUpdateOperationsInput | string | null
    deadlineDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isUrgent?: BoolFieldUpdateOperationsInput | boolean
    budgetFrom?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    budgetTo?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    proposedPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    agreedPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isPriceFixed?: BoolFieldUpdateOperationsInput | boolean
    cargoWeight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cargoVolume?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cargoDescription?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedDistance?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    needsRefrigerator?: BoolFieldUpdateOperationsInput | boolean
    needsLifting?: BoolFieldUpdateOperationsInput | boolean
    isFragile?: BoolFieldUpdateOperationsInput | boolean
    passengerCount?: NullableIntFieldUpdateOperationsInput | number | null
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    customerComment?: NullableStringFieldUpdateOperationsInput | string | null
    executorComment?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    moderationComment?: NullableStringFieldUpdateOperationsInput | string | null
    moderatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    moderatedById?: NullableStringFieldUpdateOperationsInput | string | null
    isSentToExecutors?: BoolFieldUpdateOperationsInput | boolean
    sentToAllRegions?: BoolFieldUpdateOperationsInput | boolean
    viewsCount?: IntFieldUpdateOperationsInput | number
    responsesCount?: IntFieldUpdateOperationsInput | number
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    photos?: JsonNullValueInput | InputJsonValue
    documents?: JsonNullValueInput | InputJsonValue
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderResponseUpdateWithoutExecutorInput = {
    id?: StringFieldUpdateOperationsInput | string
    proposedPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedDuration?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    vehiclePhotos?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    order?: OrderUpdateOneRequiredWithoutResponsesNestedInput
  }

  export type OrderResponseUncheckedUpdateWithoutExecutorInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    proposedPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedDuration?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    vehiclePhotos?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderResponseUncheckedUpdateManyWithoutExecutorInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    proposedPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedDuration?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    vehiclePhotos?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PaymentUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    tinkoffPaymentId?: NullableStringFieldUpdateOperationsInput | string | null
    tinkoffStatus?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: StringFieldUpdateOperationsInput | string
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    metadata?: NullableJsonNullValueInput | InputJsonValue
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PaymentUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    tinkoffPaymentId?: NullableStringFieldUpdateOperationsInput | string | null
    tinkoffStatus?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: StringFieldUpdateOperationsInput | string
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    metadata?: NullableJsonNullValueInput | InputJsonValue
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PaymentUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    tinkoffPaymentId?: NullableStringFieldUpdateOperationsInput | string | null
    tinkoffStatus?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: StringFieldUpdateOperationsInput | string
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    metadata?: NullableJsonNullValueInput | InputJsonValue
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SessionUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientType?: EnumClientTypeFieldUpdateOperationsInput | $Enums.ClientType
    chatId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    webAppInitData?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    currentState?: NullableStringFieldUpdateOperationsInput | string | null
    contextData?: NullableJsonNullValueInput | InputJsonValue
    lastActivity?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumSessionStatusFieldUpdateOperationsInput | $Enums.SessionStatus
    deviceInfo?: NullableJsonNullValueInput | InputJsonValue
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SessionUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientType?: EnumClientTypeFieldUpdateOperationsInput | $Enums.ClientType
    chatId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    webAppInitData?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    currentState?: NullableStringFieldUpdateOperationsInput | string | null
    contextData?: NullableJsonNullValueInput | InputJsonValue
    lastActivity?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumSessionStatusFieldUpdateOperationsInput | $Enums.SessionStatus
    deviceInfo?: NullableJsonNullValueInput | InputJsonValue
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SessionUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientType?: EnumClientTypeFieldUpdateOperationsInput | $Enums.ClientType
    chatId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    webAppInitData?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    currentState?: NullableStringFieldUpdateOperationsInput | string | null
    contextData?: NullableJsonNullValueInput | InputJsonValue
    lastActivity?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumSessionStatusFieldUpdateOperationsInput | $Enums.SessionStatus
    deviceInfo?: NullableJsonNullValueInput | InputJsonValue
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificationUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    sendToTelegram?: BoolFieldUpdateOperationsInput | boolean
    sendToEmail?: BoolFieldUpdateOperationsInput | boolean
    sendToWebApp?: BoolFieldUpdateOperationsInput | boolean
    isRead?: BoolFieldUpdateOperationsInput | boolean
    isDelivered?: BoolFieldUpdateOperationsInput | boolean
    scheduledFor?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    iconUrl?: NullableStringFieldUpdateOperationsInput | string | null
    actionUrl?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificationUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    sendToTelegram?: BoolFieldUpdateOperationsInput | boolean
    sendToEmail?: BoolFieldUpdateOperationsInput | boolean
    sendToWebApp?: BoolFieldUpdateOperationsInput | boolean
    isRead?: BoolFieldUpdateOperationsInput | boolean
    isDelivered?: BoolFieldUpdateOperationsInput | boolean
    scheduledFor?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    iconUrl?: NullableStringFieldUpdateOperationsInput | string | null
    actionUrl?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificationUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    sendToTelegram?: BoolFieldUpdateOperationsInput | boolean
    sendToEmail?: BoolFieldUpdateOperationsInput | boolean
    sendToWebApp?: BoolFieldUpdateOperationsInput | boolean
    isRead?: BoolFieldUpdateOperationsInput | boolean
    isDelivered?: BoolFieldUpdateOperationsInput | boolean
    scheduledFor?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    iconUrl?: NullableStringFieldUpdateOperationsInput | string | null
    actionUrl?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserRegionUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    regionCode?: StringFieldUpdateOperationsInput | string
    activeSubRegions?: JsonNullValueInput | InputJsonValue
    planType?: EnumTariffTypeFieldUpdateOperationsInput | $Enums.TariffType
    paidUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    region?: RegionUpdateOneRequiredWithoutUserRegionsNestedInput
  }

  export type UserRegionUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    regionId?: StringFieldUpdateOperationsInput | string
    regionCode?: StringFieldUpdateOperationsInput | string
    activeSubRegions?: JsonNullValueInput | InputJsonValue
    planType?: EnumTariffTypeFieldUpdateOperationsInput | $Enums.TariffType
    paidUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserRegionUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    regionId?: StringFieldUpdateOperationsInput | string
    regionCode?: StringFieldUpdateOperationsInput | string
    activeSubRegions?: JsonNullValueInput | InputJsonValue
    planType?: EnumTariffTypeFieldUpdateOperationsInput | $Enums.TariffType
    paidUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AdminActionUpdateWithoutAdminInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumAdminActionTypeFieldUpdateOperationsInput | $Enums.AdminActionType
    targetId?: NullableStringFieldUpdateOperationsInput | string | null
    targetType?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    clientType?: NullableEnumClientTypeFieldUpdateOperationsInput | $Enums.ClientType | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AdminActionUncheckedUpdateWithoutAdminInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumAdminActionTypeFieldUpdateOperationsInput | $Enums.AdminActionType
    targetId?: NullableStringFieldUpdateOperationsInput | string | null
    targetType?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    clientType?: NullableEnumClientTypeFieldUpdateOperationsInput | $Enums.ClientType | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AdminActionUncheckedUpdateManyWithoutAdminInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumAdminActionTypeFieldUpdateOperationsInput | $Enums.AdminActionType
    targetId?: NullableStringFieldUpdateOperationsInput | string | null
    targetType?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    clientType?: NullableEnumClientTypeFieldUpdateOperationsInput | $Enums.ClientType | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BroadcastUpdateWithoutAdminInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    actionUrl?: NullableStringFieldUpdateOperationsInput | string | null
    target?: EnumBroadcastTargetFieldUpdateOperationsInput | $Enums.BroadcastTarget
    sendToBot?: BoolFieldUpdateOperationsInput | boolean
    sendToWebApp?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumBroadcastStatusFieldUpdateOperationsInput | $Enums.BroadcastStatus
    scheduledFor?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalRecipients?: IntFieldUpdateOperationsInput | number
    sentCount?: IntFieldUpdateOperationsInput | number
    deliveredCount?: IntFieldUpdateOperationsInput | number
    readCount?: IntFieldUpdateOperationsInput | number
    clickCount?: IntFieldUpdateOperationsInput | number
    failedCount?: IntFieldUpdateOperationsInput | number
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    targetRegion?: RegionUpdateOneWithoutBroadcastsNestedInput
  }

  export type BroadcastUncheckedUpdateWithoutAdminInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    actionUrl?: NullableStringFieldUpdateOperationsInput | string | null
    target?: EnumBroadcastTargetFieldUpdateOperationsInput | $Enums.BroadcastTarget
    targetRegionId?: NullableStringFieldUpdateOperationsInput | string | null
    sendToBot?: BoolFieldUpdateOperationsInput | boolean
    sendToWebApp?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumBroadcastStatusFieldUpdateOperationsInput | $Enums.BroadcastStatus
    scheduledFor?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalRecipients?: IntFieldUpdateOperationsInput | number
    sentCount?: IntFieldUpdateOperationsInput | number
    deliveredCount?: IntFieldUpdateOperationsInput | number
    readCount?: IntFieldUpdateOperationsInput | number
    clickCount?: IntFieldUpdateOperationsInput | number
    failedCount?: IntFieldUpdateOperationsInput | number
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BroadcastUncheckedUpdateManyWithoutAdminInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    actionUrl?: NullableStringFieldUpdateOperationsInput | string | null
    target?: EnumBroadcastTargetFieldUpdateOperationsInput | $Enums.BroadcastTarget
    targetRegionId?: NullableStringFieldUpdateOperationsInput | string | null
    sendToBot?: BoolFieldUpdateOperationsInput | boolean
    sendToWebApp?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumBroadcastStatusFieldUpdateOperationsInput | $Enums.BroadcastStatus
    scheduledFor?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalRecipients?: IntFieldUpdateOperationsInput | number
    sentCount?: IntFieldUpdateOperationsInput | number
    deliveredCount?: IntFieldUpdateOperationsInput | number
    readCount?: IntFieldUpdateOperationsInput | number
    clickCount?: IntFieldUpdateOperationsInput | number
    failedCount?: IntFieldUpdateOperationsInput | number
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PaymentTransactionUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    externalId?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PaymentTransactionUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    externalId?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PaymentTransactionUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    externalId?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderCreateManyRegionInput = {
    id?: string
    orderNumber: string
    customerId: string
    executorId?: string | null
    vehicleSubtypeId?: string | null
    type: $Enums.OrderType
    title: string
    description: string
    pickupAddress?: string | null
    deliveryAddress?: string | null
    workAddress?: string | null
    pickupLatitude?: Decimal | DecimalJsLike | number | string | null
    pickupLongitude?: Decimal | DecimalJsLike | number | string | null
    deliveryLatitude?: Decimal | DecimalJsLike | number | string | null
    deliveryLongitude?: Decimal | DecimalJsLike | number | string | null
    regionCode: string
    subRegion?: string | null
    scheduledDate?: Date | string | null
    scheduledTime?: string | null
    deadlineDate?: Date | string | null
    isUrgent?: boolean
    budgetFrom?: Decimal | DecimalJsLike | number | string | null
    budgetTo?: Decimal | DecimalJsLike | number | string | null
    proposedPrice?: Decimal | DecimalJsLike | number | string | null
    agreedPrice?: Decimal | DecimalJsLike | number | string | null
    isPriceFixed?: boolean
    cargoWeight?: Decimal | DecimalJsLike | number | string | null
    cargoVolume?: Decimal | DecimalJsLike | number | string | null
    cargoDescription?: string | null
    estimatedDistance?: Decimal | DecimalJsLike | number | string | null
    needsRefrigerator?: boolean
    needsLifting?: boolean
    isFragile?: boolean
    passengerCount?: number | null
    requirements?: string | null
    customerComment?: string | null
    executorComment?: string | null
    status?: $Enums.OrderStatus
    moderationComment?: string | null
    moderatedAt?: Date | string | null
    moderatedById?: string | null
    isSentToExecutors?: boolean
    sentToAllRegions?: boolean
    viewsCount?: number
    responsesCount?: number
    contactPhone?: string | null
    contactName?: string | null
    photos?: JsonNullValueInput | InputJsonValue
    documents?: JsonNullValueInput | InputJsonValue
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserRegionCreateManyRegionInput = {
    id?: string
    userId: string
    regionCode: string
    activeSubRegions?: JsonNullValueInput | InputJsonValue
    planType: $Enums.TariffType
    paidUntil?: Date | string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type BroadcastCreateManyTargetRegionInput = {
    id?: string
    adminId: string
    title: string
    message: string
    imageUrl?: string | null
    actionUrl?: string | null
    target: $Enums.BroadcastTarget
    sendToBot?: boolean
    sendToWebApp?: boolean
    status?: $Enums.BroadcastStatus
    scheduledFor?: Date | string | null
    totalRecipients?: number
    sentCount?: number
    deliveredCount?: number
    readCount?: number
    clickCount?: number
    failedCount?: number
    errorMessage?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OrderUpdateWithoutRegionInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    type?: EnumOrderTypeFieldUpdateOperationsInput | $Enums.OrderType
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    pickupAddress?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    workAddress?: NullableStringFieldUpdateOperationsInput | string | null
    pickupLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    pickupLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliveryLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliveryLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    regionCode?: StringFieldUpdateOperationsInput | string
    subRegion?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledTime?: NullableStringFieldUpdateOperationsInput | string | null
    deadlineDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isUrgent?: BoolFieldUpdateOperationsInput | boolean
    budgetFrom?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    budgetTo?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    proposedPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    agreedPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isPriceFixed?: BoolFieldUpdateOperationsInput | boolean
    cargoWeight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cargoVolume?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cargoDescription?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedDistance?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    needsRefrigerator?: BoolFieldUpdateOperationsInput | boolean
    needsLifting?: BoolFieldUpdateOperationsInput | boolean
    isFragile?: BoolFieldUpdateOperationsInput | boolean
    passengerCount?: NullableIntFieldUpdateOperationsInput | number | null
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    customerComment?: NullableStringFieldUpdateOperationsInput | string | null
    executorComment?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    moderationComment?: NullableStringFieldUpdateOperationsInput | string | null
    moderatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    moderatedById?: NullableStringFieldUpdateOperationsInput | string | null
    isSentToExecutors?: BoolFieldUpdateOperationsInput | boolean
    sentToAllRegions?: BoolFieldUpdateOperationsInput | boolean
    viewsCount?: IntFieldUpdateOperationsInput | number
    responsesCount?: IntFieldUpdateOperationsInput | number
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    photos?: JsonNullValueInput | InputJsonValue
    documents?: JsonNullValueInput | InputJsonValue
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    customer?: UserUpdateOneRequiredWithoutOrdersAsCustomerNestedInput
    executor?: UserUpdateOneWithoutOrdersAsExecutorNestedInput
    vehicleSubtype?: VehicleSubtypeUpdateOneWithoutOrdersNestedInput
    responses?: OrderResponseUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutRegionInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    customerId?: StringFieldUpdateOperationsInput | string
    executorId?: NullableStringFieldUpdateOperationsInput | string | null
    vehicleSubtypeId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumOrderTypeFieldUpdateOperationsInput | $Enums.OrderType
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    pickupAddress?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    workAddress?: NullableStringFieldUpdateOperationsInput | string | null
    pickupLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    pickupLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliveryLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliveryLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    regionCode?: StringFieldUpdateOperationsInput | string
    subRegion?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledTime?: NullableStringFieldUpdateOperationsInput | string | null
    deadlineDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isUrgent?: BoolFieldUpdateOperationsInput | boolean
    budgetFrom?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    budgetTo?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    proposedPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    agreedPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isPriceFixed?: BoolFieldUpdateOperationsInput | boolean
    cargoWeight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cargoVolume?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cargoDescription?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedDistance?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    needsRefrigerator?: BoolFieldUpdateOperationsInput | boolean
    needsLifting?: BoolFieldUpdateOperationsInput | boolean
    isFragile?: BoolFieldUpdateOperationsInput | boolean
    passengerCount?: NullableIntFieldUpdateOperationsInput | number | null
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    customerComment?: NullableStringFieldUpdateOperationsInput | string | null
    executorComment?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    moderationComment?: NullableStringFieldUpdateOperationsInput | string | null
    moderatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    moderatedById?: NullableStringFieldUpdateOperationsInput | string | null
    isSentToExecutors?: BoolFieldUpdateOperationsInput | boolean
    sentToAllRegions?: BoolFieldUpdateOperationsInput | boolean
    viewsCount?: IntFieldUpdateOperationsInput | number
    responsesCount?: IntFieldUpdateOperationsInput | number
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    photos?: JsonNullValueInput | InputJsonValue
    documents?: JsonNullValueInput | InputJsonValue
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    responses?: OrderResponseUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateManyWithoutRegionInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    customerId?: StringFieldUpdateOperationsInput | string
    executorId?: NullableStringFieldUpdateOperationsInput | string | null
    vehicleSubtypeId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumOrderTypeFieldUpdateOperationsInput | $Enums.OrderType
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    pickupAddress?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    workAddress?: NullableStringFieldUpdateOperationsInput | string | null
    pickupLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    pickupLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliveryLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliveryLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    regionCode?: StringFieldUpdateOperationsInput | string
    subRegion?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledTime?: NullableStringFieldUpdateOperationsInput | string | null
    deadlineDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isUrgent?: BoolFieldUpdateOperationsInput | boolean
    budgetFrom?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    budgetTo?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    proposedPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    agreedPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isPriceFixed?: BoolFieldUpdateOperationsInput | boolean
    cargoWeight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cargoVolume?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cargoDescription?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedDistance?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    needsRefrigerator?: BoolFieldUpdateOperationsInput | boolean
    needsLifting?: BoolFieldUpdateOperationsInput | boolean
    isFragile?: BoolFieldUpdateOperationsInput | boolean
    passengerCount?: NullableIntFieldUpdateOperationsInput | number | null
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    customerComment?: NullableStringFieldUpdateOperationsInput | string | null
    executorComment?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    moderationComment?: NullableStringFieldUpdateOperationsInput | string | null
    moderatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    moderatedById?: NullableStringFieldUpdateOperationsInput | string | null
    isSentToExecutors?: BoolFieldUpdateOperationsInput | boolean
    sentToAllRegions?: BoolFieldUpdateOperationsInput | boolean
    viewsCount?: IntFieldUpdateOperationsInput | number
    responsesCount?: IntFieldUpdateOperationsInput | number
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    photos?: JsonNullValueInput | InputJsonValue
    documents?: JsonNullValueInput | InputJsonValue
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserRegionUpdateWithoutRegionInput = {
    id?: StringFieldUpdateOperationsInput | string
    regionCode?: StringFieldUpdateOperationsInput | string
    activeSubRegions?: JsonNullValueInput | InputJsonValue
    planType?: EnumTariffTypeFieldUpdateOperationsInput | $Enums.TariffType
    paidUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutUserRegionsNestedInput
  }

  export type UserRegionUncheckedUpdateWithoutRegionInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    regionCode?: StringFieldUpdateOperationsInput | string
    activeSubRegions?: JsonNullValueInput | InputJsonValue
    planType?: EnumTariffTypeFieldUpdateOperationsInput | $Enums.TariffType
    paidUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserRegionUncheckedUpdateManyWithoutRegionInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    regionCode?: StringFieldUpdateOperationsInput | string
    activeSubRegions?: JsonNullValueInput | InputJsonValue
    planType?: EnumTariffTypeFieldUpdateOperationsInput | $Enums.TariffType
    paidUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BroadcastUpdateWithoutTargetRegionInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    actionUrl?: NullableStringFieldUpdateOperationsInput | string | null
    target?: EnumBroadcastTargetFieldUpdateOperationsInput | $Enums.BroadcastTarget
    sendToBot?: BoolFieldUpdateOperationsInput | boolean
    sendToWebApp?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumBroadcastStatusFieldUpdateOperationsInput | $Enums.BroadcastStatus
    scheduledFor?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalRecipients?: IntFieldUpdateOperationsInput | number
    sentCount?: IntFieldUpdateOperationsInput | number
    deliveredCount?: IntFieldUpdateOperationsInput | number
    readCount?: IntFieldUpdateOperationsInput | number
    clickCount?: IntFieldUpdateOperationsInput | number
    failedCount?: IntFieldUpdateOperationsInput | number
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    admin?: UserUpdateOneRequiredWithoutBroadcastsNestedInput
  }

  export type BroadcastUncheckedUpdateWithoutTargetRegionInput = {
    id?: StringFieldUpdateOperationsInput | string
    adminId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    actionUrl?: NullableStringFieldUpdateOperationsInput | string | null
    target?: EnumBroadcastTargetFieldUpdateOperationsInput | $Enums.BroadcastTarget
    sendToBot?: BoolFieldUpdateOperationsInput | boolean
    sendToWebApp?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumBroadcastStatusFieldUpdateOperationsInput | $Enums.BroadcastStatus
    scheduledFor?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalRecipients?: IntFieldUpdateOperationsInput | number
    sentCount?: IntFieldUpdateOperationsInput | number
    deliveredCount?: IntFieldUpdateOperationsInput | number
    readCount?: IntFieldUpdateOperationsInput | number
    clickCount?: IntFieldUpdateOperationsInput | number
    failedCount?: IntFieldUpdateOperationsInput | number
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BroadcastUncheckedUpdateManyWithoutTargetRegionInput = {
    id?: StringFieldUpdateOperationsInput | string
    adminId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    actionUrl?: NullableStringFieldUpdateOperationsInput | string | null
    target?: EnumBroadcastTargetFieldUpdateOperationsInput | $Enums.BroadcastTarget
    sendToBot?: BoolFieldUpdateOperationsInput | boolean
    sendToWebApp?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumBroadcastStatusFieldUpdateOperationsInput | $Enums.BroadcastStatus
    scheduledFor?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalRecipients?: IntFieldUpdateOperationsInput | number
    sentCount?: IntFieldUpdateOperationsInput | number
    deliveredCount?: IntFieldUpdateOperationsInput | number
    readCount?: IntFieldUpdateOperationsInput | number
    clickCount?: IntFieldUpdateOperationsInput | number
    failedCount?: IntFieldUpdateOperationsInput | number
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VehicleTypeCreateManyCategoryInput = {
    id?: string
    name: string
    displayName: string
    description?: string | null
    iconUrl?: string | null
    sortOrder?: number
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type VehicleTypeUpdateWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    iconUrl?: NullableStringFieldUpdateOperationsInput | string | null
    sortOrder?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    vehicleSubtypes?: VehicleSubtypeUpdateManyWithoutTypeNestedInput
  }

  export type VehicleTypeUncheckedUpdateWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    iconUrl?: NullableStringFieldUpdateOperationsInput | string | null
    sortOrder?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    vehicleSubtypes?: VehicleSubtypeUncheckedUpdateManyWithoutTypeNestedInput
  }

  export type VehicleTypeUncheckedUpdateManyWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    iconUrl?: NullableStringFieldUpdateOperationsInput | string | null
    sortOrder?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VehicleSubtypeCreateManyTypeInput = {
    id?: string
    name: string
    displayName: string
    description?: string | null
    iconUrl?: string | null
    sortOrder?: number
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type VehicleSubtypeUpdateWithoutTypeInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    iconUrl?: NullableStringFieldUpdateOperationsInput | string | null
    sortOrder?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userVehicles?: UserVehicleUpdateManyWithoutSubtypeNestedInput
    orders?: OrderUpdateManyWithoutVehicleSubtypeNestedInput
  }

  export type VehicleSubtypeUncheckedUpdateWithoutTypeInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    iconUrl?: NullableStringFieldUpdateOperationsInput | string | null
    sortOrder?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userVehicles?: UserVehicleUncheckedUpdateManyWithoutSubtypeNestedInput
    orders?: OrderUncheckedUpdateManyWithoutVehicleSubtypeNestedInput
  }

  export type VehicleSubtypeUncheckedUpdateManyWithoutTypeInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    iconUrl?: NullableStringFieldUpdateOperationsInput | string | null
    sortOrder?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserVehicleCreateManySubtypeInput = {
    id?: string
    userId: string
    brand?: string | null
    model?: string | null
    year?: number | null
    licensePlate?: string | null
    color?: string | null
    loadCapacity?: Decimal | DecimalJsLike | number | string | null
    volumeCapacity?: Decimal | DecimalJsLike | number | string | null
    hasRefrigerator?: boolean
    hasLifting?: boolean
    canCarryFragile?: boolean
    photos?: JsonNullValueInput | InputJsonValue
    documents?: JsonNullValueInput | InputJsonValue
    isActive?: boolean
    isVerified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OrderCreateManyVehicleSubtypeInput = {
    id?: string
    orderNumber: string
    customerId: string
    executorId?: string | null
    regionId: string
    type: $Enums.OrderType
    title: string
    description: string
    pickupAddress?: string | null
    deliveryAddress?: string | null
    workAddress?: string | null
    pickupLatitude?: Decimal | DecimalJsLike | number | string | null
    pickupLongitude?: Decimal | DecimalJsLike | number | string | null
    deliveryLatitude?: Decimal | DecimalJsLike | number | string | null
    deliveryLongitude?: Decimal | DecimalJsLike | number | string | null
    regionCode: string
    subRegion?: string | null
    scheduledDate?: Date | string | null
    scheduledTime?: string | null
    deadlineDate?: Date | string | null
    isUrgent?: boolean
    budgetFrom?: Decimal | DecimalJsLike | number | string | null
    budgetTo?: Decimal | DecimalJsLike | number | string | null
    proposedPrice?: Decimal | DecimalJsLike | number | string | null
    agreedPrice?: Decimal | DecimalJsLike | number | string | null
    isPriceFixed?: boolean
    cargoWeight?: Decimal | DecimalJsLike | number | string | null
    cargoVolume?: Decimal | DecimalJsLike | number | string | null
    cargoDescription?: string | null
    estimatedDistance?: Decimal | DecimalJsLike | number | string | null
    needsRefrigerator?: boolean
    needsLifting?: boolean
    isFragile?: boolean
    passengerCount?: number | null
    requirements?: string | null
    customerComment?: string | null
    executorComment?: string | null
    status?: $Enums.OrderStatus
    moderationComment?: string | null
    moderatedAt?: Date | string | null
    moderatedById?: string | null
    isSentToExecutors?: boolean
    sentToAllRegions?: boolean
    viewsCount?: number
    responsesCount?: number
    contactPhone?: string | null
    contactName?: string | null
    photos?: JsonNullValueInput | InputJsonValue
    documents?: JsonNullValueInput | InputJsonValue
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserVehicleUpdateWithoutSubtypeInput = {
    id?: StringFieldUpdateOperationsInput | string
    brand?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    licensePlate?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    loadCapacity?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    volumeCapacity?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    hasRefrigerator?: BoolFieldUpdateOperationsInput | boolean
    hasLifting?: BoolFieldUpdateOperationsInput | boolean
    canCarryFragile?: BoolFieldUpdateOperationsInput | boolean
    photos?: JsonNullValueInput | InputJsonValue
    documents?: JsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutVehiclesNestedInput
  }

  export type UserVehicleUncheckedUpdateWithoutSubtypeInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    brand?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    licensePlate?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    loadCapacity?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    volumeCapacity?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    hasRefrigerator?: BoolFieldUpdateOperationsInput | boolean
    hasLifting?: BoolFieldUpdateOperationsInput | boolean
    canCarryFragile?: BoolFieldUpdateOperationsInput | boolean
    photos?: JsonNullValueInput | InputJsonValue
    documents?: JsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserVehicleUncheckedUpdateManyWithoutSubtypeInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    brand?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    licensePlate?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    loadCapacity?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    volumeCapacity?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    hasRefrigerator?: BoolFieldUpdateOperationsInput | boolean
    hasLifting?: BoolFieldUpdateOperationsInput | boolean
    canCarryFragile?: BoolFieldUpdateOperationsInput | boolean
    photos?: JsonNullValueInput | InputJsonValue
    documents?: JsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderUpdateWithoutVehicleSubtypeInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    type?: EnumOrderTypeFieldUpdateOperationsInput | $Enums.OrderType
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    pickupAddress?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    workAddress?: NullableStringFieldUpdateOperationsInput | string | null
    pickupLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    pickupLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliveryLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliveryLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    regionCode?: StringFieldUpdateOperationsInput | string
    subRegion?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledTime?: NullableStringFieldUpdateOperationsInput | string | null
    deadlineDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isUrgent?: BoolFieldUpdateOperationsInput | boolean
    budgetFrom?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    budgetTo?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    proposedPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    agreedPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isPriceFixed?: BoolFieldUpdateOperationsInput | boolean
    cargoWeight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cargoVolume?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cargoDescription?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedDistance?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    needsRefrigerator?: BoolFieldUpdateOperationsInput | boolean
    needsLifting?: BoolFieldUpdateOperationsInput | boolean
    isFragile?: BoolFieldUpdateOperationsInput | boolean
    passengerCount?: NullableIntFieldUpdateOperationsInput | number | null
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    customerComment?: NullableStringFieldUpdateOperationsInput | string | null
    executorComment?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    moderationComment?: NullableStringFieldUpdateOperationsInput | string | null
    moderatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    moderatedById?: NullableStringFieldUpdateOperationsInput | string | null
    isSentToExecutors?: BoolFieldUpdateOperationsInput | boolean
    sentToAllRegions?: BoolFieldUpdateOperationsInput | boolean
    viewsCount?: IntFieldUpdateOperationsInput | number
    responsesCount?: IntFieldUpdateOperationsInput | number
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    photos?: JsonNullValueInput | InputJsonValue
    documents?: JsonNullValueInput | InputJsonValue
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    customer?: UserUpdateOneRequiredWithoutOrdersAsCustomerNestedInput
    executor?: UserUpdateOneWithoutOrdersAsExecutorNestedInput
    region?: RegionUpdateOneRequiredWithoutOrdersNestedInput
    responses?: OrderResponseUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutVehicleSubtypeInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    customerId?: StringFieldUpdateOperationsInput | string
    executorId?: NullableStringFieldUpdateOperationsInput | string | null
    regionId?: StringFieldUpdateOperationsInput | string
    type?: EnumOrderTypeFieldUpdateOperationsInput | $Enums.OrderType
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    pickupAddress?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    workAddress?: NullableStringFieldUpdateOperationsInput | string | null
    pickupLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    pickupLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliveryLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliveryLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    regionCode?: StringFieldUpdateOperationsInput | string
    subRegion?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledTime?: NullableStringFieldUpdateOperationsInput | string | null
    deadlineDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isUrgent?: BoolFieldUpdateOperationsInput | boolean
    budgetFrom?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    budgetTo?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    proposedPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    agreedPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isPriceFixed?: BoolFieldUpdateOperationsInput | boolean
    cargoWeight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cargoVolume?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cargoDescription?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedDistance?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    needsRefrigerator?: BoolFieldUpdateOperationsInput | boolean
    needsLifting?: BoolFieldUpdateOperationsInput | boolean
    isFragile?: BoolFieldUpdateOperationsInput | boolean
    passengerCount?: NullableIntFieldUpdateOperationsInput | number | null
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    customerComment?: NullableStringFieldUpdateOperationsInput | string | null
    executorComment?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    moderationComment?: NullableStringFieldUpdateOperationsInput | string | null
    moderatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    moderatedById?: NullableStringFieldUpdateOperationsInput | string | null
    isSentToExecutors?: BoolFieldUpdateOperationsInput | boolean
    sentToAllRegions?: BoolFieldUpdateOperationsInput | boolean
    viewsCount?: IntFieldUpdateOperationsInput | number
    responsesCount?: IntFieldUpdateOperationsInput | number
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    photos?: JsonNullValueInput | InputJsonValue
    documents?: JsonNullValueInput | InputJsonValue
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    responses?: OrderResponseUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateManyWithoutVehicleSubtypeInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    customerId?: StringFieldUpdateOperationsInput | string
    executorId?: NullableStringFieldUpdateOperationsInput | string | null
    regionId?: StringFieldUpdateOperationsInput | string
    type?: EnumOrderTypeFieldUpdateOperationsInput | $Enums.OrderType
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    pickupAddress?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    workAddress?: NullableStringFieldUpdateOperationsInput | string | null
    pickupLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    pickupLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliveryLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliveryLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    regionCode?: StringFieldUpdateOperationsInput | string
    subRegion?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledTime?: NullableStringFieldUpdateOperationsInput | string | null
    deadlineDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isUrgent?: BoolFieldUpdateOperationsInput | boolean
    budgetFrom?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    budgetTo?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    proposedPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    agreedPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isPriceFixed?: BoolFieldUpdateOperationsInput | boolean
    cargoWeight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cargoVolume?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cargoDescription?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedDistance?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    needsRefrigerator?: BoolFieldUpdateOperationsInput | boolean
    needsLifting?: BoolFieldUpdateOperationsInput | boolean
    isFragile?: BoolFieldUpdateOperationsInput | boolean
    passengerCount?: NullableIntFieldUpdateOperationsInput | number | null
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    customerComment?: NullableStringFieldUpdateOperationsInput | string | null
    executorComment?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    moderationComment?: NullableStringFieldUpdateOperationsInput | string | null
    moderatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    moderatedById?: NullableStringFieldUpdateOperationsInput | string | null
    isSentToExecutors?: BoolFieldUpdateOperationsInput | boolean
    sentToAllRegions?: BoolFieldUpdateOperationsInput | boolean
    viewsCount?: IntFieldUpdateOperationsInput | number
    responsesCount?: IntFieldUpdateOperationsInput | number
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    photos?: JsonNullValueInput | InputJsonValue
    documents?: JsonNullValueInput | InputJsonValue
    activityLog?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderResponseCreateManyOrderInput = {
    id?: string
    executorId: string
    proposedPrice?: Decimal | DecimalJsLike | number | string | null
    comment?: string | null
    estimatedDuration?: string | null
    status?: string
    vehiclePhotos?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OrderResponseUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    proposedPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedDuration?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    vehiclePhotos?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    executor?: UserUpdateOneRequiredWithoutOrderResponsesNestedInput
  }

  export type OrderResponseUncheckedUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    executorId?: StringFieldUpdateOperationsInput | string
    proposedPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedDuration?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    vehiclePhotos?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderResponseUncheckedUpdateManyWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    executorId?: StringFieldUpdateOperationsInput | string
    proposedPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedDuration?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    vehiclePhotos?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use UserCountOutputTypeDefaultArgs instead
     */
    export type UserCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UserCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use RegionCountOutputTypeDefaultArgs instead
     */
    export type RegionCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = RegionCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use VehicleCategoryCountOutputTypeDefaultArgs instead
     */
    export type VehicleCategoryCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = VehicleCategoryCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use VehicleTypeCountOutputTypeDefaultArgs instead
     */
    export type VehicleTypeCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = VehicleTypeCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use VehicleSubtypeCountOutputTypeDefaultArgs instead
     */
    export type VehicleSubtypeCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = VehicleSubtypeCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use OrderCountOutputTypeDefaultArgs instead
     */
    export type OrderCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = OrderCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UserDefaultArgs instead
     */
    export type UserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UserDefaultArgs<ExtArgs>
    /**
     * @deprecated Use RegionDefaultArgs instead
     */
    export type RegionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = RegionDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UserRegionDefaultArgs instead
     */
    export type UserRegionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UserRegionDefaultArgs<ExtArgs>
    /**
     * @deprecated Use VehicleCategoryDefaultArgs instead
     */
    export type VehicleCategoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = VehicleCategoryDefaultArgs<ExtArgs>
    /**
     * @deprecated Use VehicleTypeDefaultArgs instead
     */
    export type VehicleTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = VehicleTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use VehicleSubtypeDefaultArgs instead
     */
    export type VehicleSubtypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = VehicleSubtypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UserVehicleDefaultArgs instead
     */
    export type UserVehicleArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UserVehicleDefaultArgs<ExtArgs>
    /**
     * @deprecated Use OrderDefaultArgs instead
     */
    export type OrderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = OrderDefaultArgs<ExtArgs>
    /**
     * @deprecated Use OrderResponseDefaultArgs instead
     */
    export type OrderResponseArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = OrderResponseDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PaymentDefaultArgs instead
     */
    export type PaymentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PaymentDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PaymentTransactionDefaultArgs instead
     */
    export type PaymentTransactionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PaymentTransactionDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SessionDefaultArgs instead
     */
    export type SessionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = SessionDefaultArgs<ExtArgs>
    /**
     * @deprecated Use NotificationDefaultArgs instead
     */
    export type NotificationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = NotificationDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AdminActionDefaultArgs instead
     */
    export type AdminActionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AdminActionDefaultArgs<ExtArgs>
    /**
     * @deprecated Use BroadcastDefaultArgs instead
     */
    export type BroadcastArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = BroadcastDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ConfigDefaultArgs instead
     */
    export type ConfigArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ConfigDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}